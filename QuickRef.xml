<?xml version="1.0"?>
<ArrayOfQuickRefCategory xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <QuickRefCategory>
    <Name>Alert Object</Name>
    <CategoryType>Object</CategoryType>
    <Entries>
      <QuickRefEntry>
        <Name>Account</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Account Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;string Account&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns an Account string, which contains the account of generated alert.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example />
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>AlertDate</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;AlertDate Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;DateTime AlertDate&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns an AlertDate structure, which contains the date of generated alert.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>&lt;pre class='wlnetcode'&gt;&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Collections&lt;/span&gt;.&lt;span class='wlnet03'&gt;Generic&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Text&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Drawing&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;IO&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Indicators&lt;/span&gt;;

&lt;span class='wlnet05'&gt;namespace&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Strategies&lt;/span&gt;
{
    &lt;span class='wlnet05'&gt;public&lt;/span&gt; &lt;span class='wlnet05'&gt;class&lt;/span&gt; &lt;span class='wlnet03'&gt;MyStrategy&lt;/span&gt; : &lt;span class='wlnet03'&gt;WealthScript&lt;/span&gt;
    {
        &lt;span class='wlnet01'&gt;// Writes trades into CSV file&lt;/span&gt;
        &lt;span class='wlnet05'&gt;public&lt;/span&gt; &lt;span class='wlnet05'&gt;void&lt;/span&gt; &lt;span class='wlnet03'&gt;AlertsToFile&lt;/span&gt;()
        {        
            &lt;span class='wlnet03'&gt;StreamWriter&lt;/span&gt; &lt;span class='wlnet03'&gt;atf&lt;/span&gt;;
            
            &lt;span class='wlnet05'&gt;string&lt;/span&gt; &lt;span class='wlnet03'&gt;path&lt;/span&gt; = &lt;span class='wlnet03'&gt;Path&lt;/span&gt;.&lt;span class='wlnet03'&gt;Combine&lt;/span&gt;( &lt;span class='wlnet03'&gt;Environment&lt;/span&gt;.&lt;span class='wlnet03'&gt;GetFolderPath&lt;/span&gt;(&lt;span class='wlnet03'&gt;Environment&lt;/span&gt;.&lt;span class='wlnet03'&gt;SpecialFolder&lt;/span&gt;.&lt;span class='wlnet03'&gt;Personal&lt;/span&gt;),
                &lt;span class='wlnet10'&gt;&amp;quot;Alerts(&amp;quot;&lt;/span&gt; + &lt;span class='wlnet07'&gt;StrategyName&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot;).csv&amp;quot;&lt;/span&gt; );
            
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; &amp;gt; &lt;span class='wlnet04'&gt;0&lt;/span&gt; )
            { 
                &lt;span class='wlnet05'&gt;string&lt;/span&gt; &lt;span class='wlnet03'&gt;s&lt;/span&gt; = &lt;span class='wlnet10'&gt;&amp;quot;,&amp;quot;&lt;/span&gt;;
                &lt;span class='wlnet03'&gt;atf&lt;/span&gt; = &lt;span class='wlnet05'&gt;new&lt;/span&gt; &lt;span class='wlnet03'&gt;StreamWriter&lt;/span&gt;( &lt;span class='wlnet03'&gt;path&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
                &lt;span class='wlnet05'&gt;for&lt;/span&gt;( &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;n&lt;/span&gt; = &lt;span class='wlnet04'&gt;0&lt;/span&gt;; &lt;span class='wlnet03'&gt;n&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;n&lt;/span&gt;++ )
                {
                    &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Alert&lt;/span&gt; &lt;span class='wlnet03'&gt;a&lt;/span&gt; = &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;[&lt;span class='wlnet03'&gt;n&lt;/span&gt;];
                    &lt;span class='wlnet03'&gt;atf&lt;/span&gt;.&lt;span class='wlnet03'&gt;Write&lt;/span&gt;( &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Symbol&lt;/span&gt; + &lt;span class='wlnet03'&gt;s&lt;/span&gt; 
                        + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;AlertDate&lt;/span&gt;.&lt;span class='wlnet03'&gt;ToShortDateString&lt;/span&gt;() + &lt;span class='wlnet03'&gt;s&lt;/span&gt;
                        + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;AlertDate&lt;/span&gt;.&lt;span class='wlnet03'&gt;ToShortTimeString&lt;/span&gt;() + &lt;span class='wlnet03'&gt;s&lt;/span&gt;
                        + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;AlertType&lt;/span&gt; + &lt;span class='wlnet03'&gt;s&lt;/span&gt;                        
                        + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;Price&lt;/span&gt;
                        + &lt;span class='wlnet10'&gt;&amp;quot;\r\n&amp;quot;&lt;/span&gt; );  &lt;span class='wlnet01'&gt;// etc.&lt;/span&gt;
                }
                &lt;span class='wlnet03'&gt;atf&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;();
            }            
        }
        
        &lt;span class='wlnet05'&gt;protected&lt;/span&gt; &lt;span class='wlnet05'&gt;override&lt;/span&gt; &lt;span class='wlnet05'&gt;void&lt;/span&gt; &lt;span class='wlnet03'&gt;Execute&lt;/span&gt;()
        {
            &lt;span class='wlnet01'&gt;// Alert generating code - Example&lt;/span&gt;
            &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;3&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
            {
                &lt;span class='wlnet05'&gt;if&lt;/span&gt; (!&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
                {
                    &lt;span class='wlnet01'&gt;// Two consecutive lower closes&lt;/span&gt;
                    &lt;span class='wlnet05'&gt;if&lt;/span&gt;( ( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] ) &amp;amp;
                        ( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;2&lt;/span&gt;] ) )
                        &lt;span class='wlnet06'&gt;BuyAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]*&lt;span class='wlnet04'&gt;1.03&lt;/span&gt; );
                }
                &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
                {
                    &lt;span class='wlnet06'&gt;SellAtLimit&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]*&lt;span class='wlnet04'&gt;1.10&lt;/span&gt; );
                }
            }
            &lt;span class='wlnet03'&gt;AlertsToFile&lt;/span&gt;();
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>AlertType</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;AlertType Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;TradeType AlertType&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns a TradeType enumerated list, which contains the type of generated alert. Possible values are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Buy&lt;/li&gt;
  &lt;li&gt;Cover&lt;/li&gt;
  &lt;li&gt;Sell&lt;/li&gt;
  &lt;li&gt;Short&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Alert generating code&lt;/span&gt;
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;3&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
            &lt;span class='wlnet06'&gt;SellAtLimit&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]*&lt;span class='wlnet04'&gt;1.01&lt;/span&gt; );
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
            &lt;span class='wlnet06'&gt;BuyAtLimit&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]*&lt;span class='wlnet04'&gt;0.97&lt;/span&gt; );
    }

    &lt;span class='wlnet01'&gt;// Show the alert type&lt;/span&gt;
    &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; &amp;gt; &lt;span class='wlnet04'&gt;0&lt;/span&gt; )
    {
        &lt;span class='wlnet05'&gt;for&lt;/span&gt;( &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;i&lt;/span&gt; = &lt;span class='wlnet04'&gt;0&lt;/span&gt;; &lt;span class='wlnet03'&gt;i&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;i&lt;/span&gt;++ )
        {
            &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Alert&lt;/span&gt; &lt;span class='wlnet03'&gt;a&lt;/span&gt; = &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;[&lt;span class='wlnet03'&gt;i&lt;/span&gt;];
                &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Alert &amp;quot;&lt;/span&gt; + ( &lt;span class='wlnet03'&gt;i&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; ) + &lt;span class='wlnet10'&gt;&amp;quot; type: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;AlertType&lt;/span&gt; );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>BarInterval</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;BarInterval Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;int BarInterval&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the intraday bar interval of the generated alert. For example, BarInterval will return 5 for 5-minute bars.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;For non-intraday scales, BarInterval returns 0.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Alert generating code&lt;/span&gt;
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;1&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (!&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
                &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt; );
        }
    }
    
    &lt;span class='wlnet01'&gt;// Returns the bar interval of an alert&lt;/span&gt;
    &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; &amp;gt; &lt;span class='wlnet04'&gt;0&lt;/span&gt; )
    {
        &lt;span class='wlnet05'&gt;for&lt;/span&gt;( &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;i&lt;/span&gt; = &lt;span class='wlnet04'&gt;0&lt;/span&gt;; &lt;span class='wlnet03'&gt;i&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;i&lt;/span&gt;++ )
        {
            &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Alert&lt;/span&gt; &lt;span class='wlnet03'&gt;a&lt;/span&gt; = &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;[&lt;span class='wlnet03'&gt;i&lt;/span&gt;];
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;BarInterval&lt;/span&gt; &amp;gt; &lt;span class='wlnet04'&gt;0&lt;/span&gt; )
            &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;BarInterval: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;BarInterval&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot; tick, second or minute &amp;quot;&lt;/span&gt; ); &lt;span class='wlnet05'&gt;else&lt;/span&gt;
            &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;BarInterval is Daily or greater&amp;quot;&lt;/span&gt; );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>BasisPrice</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;BasisPrice Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;double BasisPrice&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns a BasisPrice number, which contains the basis price of generated alert which is going to establish a position.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Alert generating code&lt;/span&gt;
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;3&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
            &lt;span class='wlnet06'&gt;SellAtLimit&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]*&lt;span class='wlnet04'&gt;1.01&lt;/span&gt; );
         &lt;span class='wlnet05'&gt;else&lt;/span&gt;
            &lt;span class='wlnet06'&gt;BuyAtLimit&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]*&lt;span class='wlnet04'&gt;0.97&lt;/span&gt; );
    }
    
    &lt;span class='wlnet01'&gt;// Show the basis price of an alert&lt;/span&gt;
    &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; &amp;gt; &lt;span class='wlnet04'&gt;0&lt;/span&gt; )
    { 
        &lt;span class='wlnet05'&gt;for&lt;/span&gt;( &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;i&lt;/span&gt; = &lt;span class='wlnet04'&gt;0&lt;/span&gt;; &lt;span class='wlnet03'&gt;i&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;i&lt;/span&gt;++ )
        {
            &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Alert&lt;/span&gt; &lt;span class='wlnet03'&gt;a&lt;/span&gt; = &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;[&lt;span class='wlnet03'&gt;i&lt;/span&gt;];
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( ( &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;AlertType&lt;/span&gt; != &lt;span class='wlnet03'&gt;TradeType&lt;/span&gt;.&lt;span class='wlnet03'&gt;Sell&lt;/span&gt; ) &amp;amp; 
                ( &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;AlertType&lt;/span&gt; != &lt;span class='wlnet03'&gt;TradeType&lt;/span&gt;.&lt;span class='wlnet03'&gt;Cover&lt;/span&gt; ) )
            &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Alert &amp;quot;&lt;/span&gt; + ( &lt;span class='wlnet03'&gt;i&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; ) + &lt;span class='wlnet10'&gt;&amp;quot; basis price: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;BasisPrice&lt;/span&gt; );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>OrderType</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;OrderType Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;OrderType OrderType&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns an OrderType enumerated list, which contains the order type of generated alert. Possible values are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;AtClose&lt;/li&gt;
  &lt;li&gt;Limit&lt;/li&gt;
  &lt;li&gt;Market&lt;/li&gt;
  &lt;li&gt;Stop&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Alert generating code&lt;/span&gt;
    
    &lt;span class='wlnet03'&gt;Random&lt;/span&gt; &lt;span class='wlnet03'&gt;rnd&lt;/span&gt; = &lt;span class='wlnet05'&gt;new&lt;/span&gt; &lt;span class='wlnet03'&gt;Random&lt;/span&gt;();
    
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;1&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet01'&gt;// Exit trade after 3 days&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; - &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryBar&lt;/span&gt; &amp;gt;= &lt;span class='wlnet04'&gt;3&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Time-based&amp;quot;&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet01'&gt;// Random factor&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;rnd&lt;/span&gt;.&lt;span class='wlnet03'&gt;Next&lt;/span&gt;(&lt;span class='wlnet04'&gt;0&lt;/span&gt;,&lt;span class='wlnet04'&gt;10&lt;/span&gt;) &amp;lt; &lt;span class='wlnet04'&gt;3&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;BuyAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;High&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]*&lt;span class='wlnet04'&gt;1.03&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Buy strength&amp;quot;&lt;/span&gt; ); &lt;span class='wlnet05'&gt;else&lt;/span&gt;
                &lt;span class='wlnet06'&gt;BuyAtLimit&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;Low&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]*&lt;span class='wlnet04'&gt;0.97&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Buy weakness&amp;quot;&lt;/span&gt; );
        }
    }
    
    &lt;span class='wlnet01'&gt;// Show the alert order type&lt;/span&gt;
    &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; &amp;gt; &lt;span class='wlnet04'&gt;0&lt;/span&gt; )
    { 
        &lt;span class='wlnet05'&gt;for&lt;/span&gt;( &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;i&lt;/span&gt; = &lt;span class='wlnet04'&gt;0&lt;/span&gt;; &lt;span class='wlnet03'&gt;i&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;i&lt;/span&gt;++ )
        {
            &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Alert&lt;/span&gt; &lt;span class='wlnet03'&gt;a&lt;/span&gt; = &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;[&lt;span class='wlnet03'&gt;i&lt;/span&gt;];
            &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Alert &amp;quot;&lt;/span&gt; + ( &lt;span class='wlnet03'&gt;i&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; ) + &lt;span class='wlnet10'&gt;&amp;quot; order type:  &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;OrderType&lt;/span&gt; );
        }
    }
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Position</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Position Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;Position Position&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Contains the Position object that corresponds to a Sell or Cover alert.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example />
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>PositionType</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;PositionType Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;PositionType PositionType&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns a PositionType enumerated list, which contains the position type of generated alert. Possible values are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Long&lt;/li&gt;
  &lt;li&gt;Short&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Alert generating code&lt;/span&gt;
    
    &lt;span class='wlnet03'&gt;Random&lt;/span&gt; &lt;span class='wlnet03'&gt;rnd&lt;/span&gt; = &lt;span class='wlnet05'&gt;new&lt;/span&gt; &lt;span class='wlnet03'&gt;Random&lt;/span&gt;();
    
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;1&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet01'&gt;// Exit trade after 3 days&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; - &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryBar&lt;/span&gt; &amp;gt;= &lt;span class='wlnet04'&gt;3&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;ExitAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;3 days&amp;quot;&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;rnd&lt;/span&gt;.&lt;span class='wlnet03'&gt;Next&lt;/span&gt;(&lt;span class='wlnet04'&gt;0&lt;/span&gt;,&lt;span class='wlnet04'&gt;1&lt;/span&gt;) == &lt;span class='wlnet04'&gt;1&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; ); &lt;span class='wlnet05'&gt;else&lt;/span&gt;
                &lt;span class='wlnet06'&gt;ShortAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; );
        }
    }
    
    &lt;span class='wlnet01'&gt;// Show the alert position type&lt;/span&gt;
    &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; &amp;gt; &lt;span class='wlnet04'&gt;0&lt;/span&gt; )
    { 
        &lt;span class='wlnet05'&gt;for&lt;/span&gt;( &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;i&lt;/span&gt; = &lt;span class='wlnet04'&gt;0&lt;/span&gt;; &lt;span class='wlnet03'&gt;i&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;i&lt;/span&gt;++ )
        {
            &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Alert&lt;/span&gt; &lt;span class='wlnet03'&gt;a&lt;/span&gt; = &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;[&lt;span class='wlnet03'&gt;i&lt;/span&gt;];
                &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Alert &amp;quot;&lt;/span&gt; + ( &lt;span class='wlnet03'&gt;i&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; ) + &lt;span class='wlnet10'&gt;&amp;quot; is to go &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;PositionType&lt;/span&gt; );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Price</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Price Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;double Price&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns a Price number, which contains the price of generated alert, except for Market and AtClose orders which return 0.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Alert generating code&lt;/span&gt;
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;4&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (!&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet01'&gt;// Three consecutive lower closes&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( ( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] ) &amp;amp;
                ( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;2&lt;/span&gt;] ) &amp;amp;
                ( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;2&lt;/span&gt;] &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;3&lt;/span&gt;] ) )  
                &lt;span class='wlnet06'&gt;BuyAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]*&lt;span class='wlnet04'&gt;1.03&lt;/span&gt; );

            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;gt; &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;3&lt;/span&gt;] )
                &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet06'&gt;SellAtLimit&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]*&lt;span class='wlnet04'&gt;1.01&lt;/span&gt; );
        }
    }
    
    &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; &amp;gt; &lt;span class='wlnet04'&gt;0&lt;/span&gt; )
    { 
        &lt;span class='wlnet05'&gt;for&lt;/span&gt;( &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;i&lt;/span&gt; = &lt;span class='wlnet04'&gt;0&lt;/span&gt;; &lt;span class='wlnet03'&gt;i&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;i&lt;/span&gt;++ )
        {
            &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Alert&lt;/span&gt; &lt;span class='wlnet03'&gt;a&lt;/span&gt; = &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;[&lt;span class='wlnet03'&gt;i&lt;/span&gt;];
            &lt;span class='wlnet01'&gt;// Show the alert price if it's limit/stop order&lt;/span&gt;
                &lt;span class='wlnet05'&gt;if&lt;/span&gt;( ( &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;OrderType&lt;/span&gt; != &lt;span class='wlnet03'&gt;OrderType&lt;/span&gt;.&lt;span class='wlnet03'&gt;Market&lt;/span&gt; ) &amp;amp; 
                    ( &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;OrderType&lt;/span&gt; != &lt;span class='wlnet03'&gt;OrderType&lt;/span&gt;.&lt;span class='wlnet03'&gt;AtClose&lt;/span&gt; ) )
                &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Alert &amp;quot;&lt;/span&gt; + ( &lt;span class='wlnet03'&gt;i&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; ) + &lt;span class='wlnet10'&gt;&amp;quot; has a &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;OrderType&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot; price of &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;Price&lt;/span&gt; ); &lt;span class='wlnet05'&gt;else&lt;/span&gt;
                &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Alert &amp;quot;&lt;/span&gt; + ( &lt;span class='wlnet03'&gt;i&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; ) + &lt;span class='wlnet10'&gt;&amp;quot; is a AtMarket/AtClose order; price N/A&amp;quot;&lt;/span&gt; );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Scale</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Scale Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;BarScale Scale&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns a BarScale enumerated list, which contains the bar scale of generated alert. Possible values are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Daily&lt;/li&gt;
  &lt;li&gt;Minute&lt;/li&gt;
  &lt;li&gt;Monthly&lt;/li&gt;
  &lt;li&gt;Quarterly&lt;/li&gt;
  &lt;li&gt;Second&lt;/li&gt;
  &lt;li&gt;Tick&lt;/li&gt;
  &lt;li&gt;Weekly&lt;/li&gt;
  &lt;li&gt;Yearly&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Alert generating code&lt;/span&gt;
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;3&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (!&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
                &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt; );
        }
    }
    
    &lt;span class='wlnet01'&gt;// Returns alert bar scale&lt;/span&gt;
    &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; &amp;gt; &lt;span class='wlnet04'&gt;0&lt;/span&gt; )
    {
        &lt;span class='wlnet05'&gt;for&lt;/span&gt;( &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;i&lt;/span&gt; = &lt;span class='wlnet04'&gt;0&lt;/span&gt;; &lt;span class='wlnet03'&gt;i&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;i&lt;/span&gt;++ )
        {
            &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Alert&lt;/span&gt; &lt;span class='wlnet03'&gt;a&lt;/span&gt; = &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;[&lt;span class='wlnet03'&gt;i&lt;/span&gt;];
            &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Alert from strategy that executed on &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;Scale&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot; scale &amp;quot;&lt;/span&gt;);
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Shares</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Shares Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;double Shares&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns a Shares number, which contains the number of shares for generated alert.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;In portfolio simulation mode, all trades are pre-executed using 1 share 
  per Position, and then position sizing is applied after the fact.&amp;nbsp; So the 
  &lt;b&gt;Shares&lt;/b&gt; property will always return 1 while the Strategy is executing.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Alert generating code&lt;/span&gt;
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;3&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (!&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet01'&gt;// Three consecutive lower closes&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( ( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] ) &amp;amp;
                ( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;2&lt;/span&gt;] ) &amp;amp;
                ( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;2&lt;/span&gt;] &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;3&lt;/span&gt;] ) )  
                &lt;span class='wlnet06'&gt;BuyAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]*&lt;span class='wlnet04'&gt;1.03&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet06'&gt;SellAtLimit&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]*&lt;span class='wlnet04'&gt;1.10&lt;/span&gt; );
        }
    }
    
    &lt;span class='wlnet01'&gt;// Show the number of shares in alert&lt;/span&gt;
    &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; &amp;gt; &lt;span class='wlnet04'&gt;0&lt;/span&gt; )
    { 
        &lt;span class='wlnet05'&gt;for&lt;/span&gt;( &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;i&lt;/span&gt; = &lt;span class='wlnet04'&gt;0&lt;/span&gt;; &lt;span class='wlnet03'&gt;i&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;i&lt;/span&gt;++ )
        {
            &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Alert&lt;/span&gt; &lt;span class='wlnet03'&gt;a&lt;/span&gt; = &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;[&lt;span class='wlnet03'&gt;i&lt;/span&gt;];
                &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Alert &amp;quot;&lt;/span&gt; + ( &lt;span class='wlnet03'&gt;i&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; ) + &lt;span class='wlnet10'&gt;&amp;quot; is for &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;Shares&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot; shares &amp;quot;&lt;/span&gt; );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>SignalName</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;SignalName Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;string SignalName&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns a SignalName string, which contains the name of a signal which generated the alert.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Alert generating code&lt;/span&gt;
    
    &lt;span class='wlnet03'&gt;Random&lt;/span&gt; &lt;span class='wlnet03'&gt;rnd&lt;/span&gt; = &lt;span class='wlnet05'&gt;new&lt;/span&gt; &lt;span class='wlnet03'&gt;Random&lt;/span&gt;();
    
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;1&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet01'&gt;// Exit trade after 3 days&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; - &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryBar&lt;/span&gt; &amp;gt;= &lt;span class='wlnet04'&gt;3&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Time-based&amp;quot;&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet01'&gt;// Random factor&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;rnd&lt;/span&gt;.&lt;span class='wlnet03'&gt;Next&lt;/span&gt;(&lt;span class='wlnet04'&gt;0&lt;/span&gt;,&lt;span class='wlnet04'&gt;1&lt;/span&gt;) == &lt;span class='wlnet04'&gt;0&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;BuyAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;High&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]*&lt;span class='wlnet04'&gt;1.03&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Buy strength&amp;quot;&lt;/span&gt; ); &lt;span class='wlnet05'&gt;else&lt;/span&gt;
                &lt;span class='wlnet06'&gt;BuyAtLimit&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;Low&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]*&lt;span class='wlnet04'&gt;0.97&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Buy weakness&amp;quot;&lt;/span&gt; );
        }
    }
    
    &lt;span class='wlnet01'&gt;// Show the signal name of the alert&lt;/span&gt;
    &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; &amp;gt; &lt;span class='wlnet04'&gt;0&lt;/span&gt; )
    { 
        &lt;span class='wlnet05'&gt;for&lt;/span&gt;( &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;i&lt;/span&gt; = &lt;span class='wlnet04'&gt;0&lt;/span&gt;; &lt;span class='wlnet03'&gt;i&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;i&lt;/span&gt;++ )
        {
            &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Alert&lt;/span&gt; &lt;span class='wlnet03'&gt;a&lt;/span&gt; = &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;[&lt;span class='wlnet03'&gt;i&lt;/span&gt;];
            &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Alert &amp;quot;&lt;/span&gt; + ( &lt;span class='wlnet03'&gt;i&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; ) + &lt;span class='wlnet10'&gt;&amp;quot; was generated by:  &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;SignalName&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot; signal&amp;quot;&lt;/span&gt; );
        }
    }
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Symbol</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Symbol Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;string Symbol&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns a Symbol string, which contains the symbol name of generated alert.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
            &lt;span class='wlnet01'&gt;// Alert generating code&lt;/span&gt;
            &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;3&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
            {
                &lt;span class='wlnet05'&gt;if&lt;/span&gt; (!&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
                {
                    &lt;span class='wlnet01'&gt;// Three consecutive lower closes&lt;/span&gt;
                    &lt;span class='wlnet05'&gt;if&lt;/span&gt;( ( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] ) &amp;amp;
                        ( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;2&lt;/span&gt;] ) &amp;amp;
                        ( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;2&lt;/span&gt;] &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;3&lt;/span&gt;] ) )  
                        &lt;span class='wlnet06'&gt;BuyAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]*&lt;span class='wlnet04'&gt;1.03&lt;/span&gt; );
                }
                &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
                {
                    &lt;span class='wlnet06'&gt;SellAtLimit&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]*&lt;span class='wlnet04'&gt;1.10&lt;/span&gt; );
                }
            }
            
            &lt;span class='wlnet01'&gt;// Show the symbol name for an alert&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; &amp;gt; &lt;span class='wlnet04'&gt;0&lt;/span&gt; )
            { 
                &lt;span class='wlnet05'&gt;for&lt;/span&gt;( &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;i&lt;/span&gt; = &lt;span class='wlnet04'&gt;0&lt;/span&gt;; &lt;span class='wlnet03'&gt;i&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;i&lt;/span&gt;++ )
                {
                    &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Alert&lt;/span&gt; &lt;span class='wlnet03'&gt;a&lt;/span&gt; = &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;[&lt;span class='wlnet03'&gt;i&lt;/span&gt;];
                        &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Alert &amp;quot;&lt;/span&gt; + ( &lt;span class='wlnet03'&gt;i&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; ) + &lt;span class='wlnet10'&gt;&amp;quot; is for &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;Symbol&lt;/span&gt; );
                }
            }
        }
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
    </Entries>
    <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Alert Object&lt;/h1&gt;
&lt;p&gt;The Alert object represents a trade that needs to be placed on the following bar.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;To access the current symbol (or symbol for the current context after calling SetContext), use the Symbol property of the Bars Object.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
  </QuickRefCategory>
  <QuickRefCategory>
    <Name>Bars Object</Name>
    <CategoryType>Object</CategoryType>
    <Entries>
      <QuickRefEntry>
        <Name>BarInterval</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;BarInterval Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;int BarInterval&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the intraday bar interval of the Bars object.&amp;nbsp; For example, if the Bars object contains 5-minute bars, BarInterval will return 5.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;For non-intraday scales, BarInterval returns 0.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Returns the chart bar interval&lt;/span&gt;
    &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;BarInterval&lt;/span&gt; &amp;gt; &lt;span class='wlnet04'&gt;0&lt;/span&gt; )
        &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;BarInterval: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;BarInterval&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot; tick, second or minute &amp;quot;&lt;/span&gt; ); &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;BarInterval is Daily or greater&amp;quot;&lt;/span&gt; );
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Cache</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Cache Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;Dictionary&amp;lt;string, DataSeries&amp;gt; Cache&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Each Bars object maintains an internal cache that stores the indicators 
(which are DataSeries objects) created based on itself, or its open, high, low, 
close, or volume.&amp;nbsp; The Cache property provides access to these indicators.&amp;nbsp; 
The Cache is a name=DataSeries Dictionary, and the DataSeries are stored using 
their Description as the Dictionary key.&amp;nbsp; You will likely never need to use 
the Cache in Strategy code, but it can be useful when building custom 
Performance Visualizers, because it provides access to all of the indicators 
created by the Strategy.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;When an indicator is created using its Series method, Wealth-Lab first 
  looks for the indicator in the Cache and returns it if found.&amp;nbsp; This 
  prevents the same indicators from being created and calculated multiple times, 
  increasing overall efficiency.&lt;/li&gt;
  &lt;li&gt;You can explicitly clear the cache by calling Cache.Clear of the Bars object. Calling Bars.Cache.Clear at the end of the Strategy can help free resources for Strategies that process large amounts of data, especially intraday.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>    &lt;span class='wlnet01'&gt;// Creating a SMA the regular way:&lt;/span&gt;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;sma&lt;/span&gt; = &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;,&lt;span class='wlnet04'&gt;20&lt;/span&gt; );
    
    &lt;span class='wlnet01'&gt;// Creating a proxy data series:&lt;/span&gt;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;sma_test&lt;/span&gt;  = &lt;span class='wlnet05'&gt;new&lt;/span&gt; &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt;(&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;,&lt;span class='wlnet10'&gt;&amp;quot;test&amp;quot;&lt;/span&gt;);
    
    &lt;span class='wlnet01'&gt;// Find the 20-period SMA in the Bars.Cache property by its Description...&lt;/span&gt;
    &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Cache&lt;/span&gt;.&lt;span class='wlnet03'&gt;ContainsKey&lt;/span&gt;(&lt;span class='wlnet10'&gt;&amp;quot;SMA(Close,20)&amp;quot;&lt;/span&gt;))
        &lt;span class='wlnet01'&gt;//... and assign the result to the proxy series:&lt;/span&gt;
        &lt;span class='wlnet03'&gt;sma_test&lt;/span&gt; = (&lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt;)&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Cache&lt;/span&gt;[&lt;span class='wlnet10'&gt;&amp;quot;SMA(Close,20)&amp;quot;&lt;/span&gt;];
    
    &lt;span class='wlnet01'&gt;// Test by plotting the proxy series&lt;/span&gt;
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;test&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;30&lt;/span&gt;, &lt;span class='wlnet05'&gt;false&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;test&lt;/span&gt;, &lt;span class='wlnet03'&gt;sma_test&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Black&lt;/span&gt;, &lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Close</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Close Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;DataSeries Close&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns a DataSeries object that represents the closing prices of the Bars 
object.&amp;nbsp; Access individual closing prices via the square bracket syntax:&lt;/p&gt;
&lt;p&gt;&lt;font color="#008000"&gt;//Access closing price of the last bar&lt;/font&gt;&lt;br&gt;
double lastClose = Bars.Close[Bars.Count - 1];&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;See the DataSeries object reference for a listing of available properties 
  and methods on the DataSeries object. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;//Access closing price of the last bar&lt;/span&gt;
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;lastClose&lt;/span&gt; = &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;];
    &lt;span class='wlnet01'&gt;// The string is output with 2 digits&lt;/span&gt;
    &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Last close: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet05'&gt;String&lt;/span&gt;.&lt;span class='wlnet03'&gt;Format&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;{0:f}&amp;quot;&lt;/span&gt;, &lt;span class='wlnet03'&gt;lastClose&lt;/span&gt; ), &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Black&lt;/span&gt; );
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>ConvertDateToBar</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;ConvertDateToBar&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000ff"&gt;int ConvertDateToBar(DateTime date, bool exactMatch);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the bar number that matches the DateTime provided in the &lt;b&gt;date&lt;/b&gt; 
parameter.&amp;nbsp; If &lt;b&gt;exactMatch&lt;/b&gt; is true, the precise DateTime value must be 
located in the Bars object.&amp;nbsp; Otherwise, the first bar whose DateTime is greater 
than or equal to the specified &lt;b&gt;date&lt;/b&gt; is returned.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>&lt;pre class='wlnetcode'&gt;&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Collections&lt;/span&gt;.&lt;span class='wlnet03'&gt;Generic&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Text&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Drawing&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Threading&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Globalization&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;;

&lt;span class='wlnet05'&gt;namespace&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Strategies&lt;/span&gt;
{
    &lt;span class='wlnet01'&gt;// Print how much days since year began&lt;/span&gt;
    
    &lt;span class='wlnet05'&gt;public&lt;/span&gt; &lt;span class='wlnet05'&gt;class&lt;/span&gt; &lt;span class='wlnet03'&gt;MyStrategy&lt;/span&gt; : &lt;span class='wlnet03'&gt;WealthScript&lt;/span&gt;
    {
        &lt;span class='wlnet05'&gt;public&lt;/span&gt; &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;HowMuchDaysToBar&lt;/span&gt;( &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;year&lt;/span&gt; )
        {
            &lt;span class='wlnet03'&gt;CultureInfo&lt;/span&gt; &lt;span class='wlnet03'&gt;en&lt;/span&gt; = &lt;span class='wlnet05'&gt;new&lt;/span&gt; &lt;span class='wlnet03'&gt;CultureInfo&lt;/span&gt;(&lt;span class='wlnet10'&gt;&amp;quot;en-US&amp;quot;&lt;/span&gt;);
            &lt;span class='wlnet03'&gt;Thread&lt;/span&gt;.&lt;span class='wlnet03'&gt;CurrentThread&lt;/span&gt;.&lt;span class='wlnet03'&gt;CurrentCulture&lt;/span&gt; = &lt;span class='wlnet03'&gt;en&lt;/span&gt;;
            &lt;span class='wlnet05'&gt;String&lt;/span&gt; &lt;span class='wlnet03'&gt;format&lt;/span&gt; = &lt;span class='wlnet10'&gt;&amp;quot;yyyyMMdd&amp;quot;&lt;/span&gt;;
            &lt;span class='wlnet03'&gt;DateTime&lt;/span&gt; &lt;span class='wlnet03'&gt;dtParsed&lt;/span&gt; = &lt;span class='wlnet03'&gt;DateTime&lt;/span&gt;.&lt;span class='wlnet03'&gt;ParseExact&lt;/span&gt;( &lt;span class='wlnet03'&gt;Convert&lt;/span&gt;.&lt;span class='wlnet06'&gt;ToString&lt;/span&gt;( &lt;span class='wlnet03'&gt;year&lt;/span&gt; * &lt;span class='wlnet04'&gt;10000&lt;/span&gt; + &lt;span class='wlnet04'&gt;101&lt;/span&gt; ), &lt;span class='wlnet03'&gt;format&lt;/span&gt;, &lt;span class='wlnet03'&gt;en&lt;/span&gt;.&lt;span class='wlnet03'&gt;DateTimeFormat&lt;/span&gt; );
            &lt;span class='wlnet05'&gt;return&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; - &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;ConvertDateToBar&lt;/span&gt;( &lt;span class='wlnet03'&gt;dtParsed&lt;/span&gt;, &lt;span class='wlnet05'&gt;false&lt;/span&gt; ) + &lt;span class='wlnet04'&gt;1&lt;/span&gt;;
        }

        &lt;span class='wlnet05'&gt;protected&lt;/span&gt; &lt;span class='wlnet05'&gt;override&lt;/span&gt; &lt;span class='wlnet05'&gt;void&lt;/span&gt; &lt;span class='wlnet03'&gt;Execute&lt;/span&gt;()
        {
            &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;year&lt;/span&gt; = &lt;span class='wlnet04'&gt;2007&lt;/span&gt;;
            &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;HowMuchDaysToBar&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;year&lt;/span&gt; ) + &lt;span class='wlnet10'&gt;&amp;quot; bars since year &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;year&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot; started&amp;quot;&lt;/span&gt; );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Count</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Count Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;int Count&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the number of bars that are contained in the Bars object.&amp;nbsp; The 
Bars object's Date, Open, High, Low, Close, Volume, and any &amp;quot;Named DataSeries&amp;quot; 
it contains, will always have the same number of values as the Bar's Count.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Typical trading system main loop relies on Bars.Count property&lt;/span&gt;
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
    &lt;span class='wlnet01'&gt;///...            &lt;/span&gt;
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>DataScale</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;DataScale Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;BarDataScale DataScale&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns a BarDataScale struct, which contains the Bars object's Scale and 
BarInterval in one structure.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Returns the chart bar interval and data scale&lt;/span&gt;
    &lt;span class='wlnet03'&gt;BarDataScale&lt;/span&gt; &lt;span class='wlnet03'&gt;ds&lt;/span&gt; = &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;DataScale&lt;/span&gt;;
    &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet03'&gt;ds&lt;/span&gt;.&lt;span class='wlnet03'&gt;BarInterval&lt;/span&gt; == &lt;span class='wlnet04'&gt;0&lt;/span&gt; )
    &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet03'&gt;ds&lt;/span&gt;.&lt;span class='wlnet03'&gt;Scale&lt;/span&gt; ); &lt;span class='wlnet05'&gt;else&lt;/span&gt;
    &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet03'&gt;ds&lt;/span&gt;.&lt;span class='wlnet03'&gt;BarInterval&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot;-&amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;ds&lt;/span&gt;.&lt;span class='wlnet03'&gt;Scale&lt;/span&gt; );    
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Date</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Date Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000ff"&gt;IList&amp;lt;DateTime&amp;gt; Date&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns a list of DateTime values that represents the historical date/times 
of the Bars object.&amp;nbsp;Access individual date values via the square bracket syntax:&lt;/p&gt;
&lt;p&gt;&lt;font color="#008000"&gt;//Access the last date being charted&lt;/font&gt;&lt;br&gt;
DateTime lastDate = Bars.Date[Bars.Count - 1];&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;//Access the last date being charted&lt;/span&gt;
    &lt;span class='wlnet03'&gt;DateTime&lt;/span&gt; &lt;span class='wlnet03'&gt;lastDate&lt;/span&gt; = &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Date&lt;/span&gt;[&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; - &lt;span class='wlnet04'&gt;1&lt;/span&gt;];
    &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Last trading date: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet05'&gt;String&lt;/span&gt;.&lt;span class='wlnet03'&gt;Format&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;{0:d}&amp;quot;&lt;/span&gt;, &lt;span class='wlnet03'&gt;lastDate&lt;/span&gt; ), &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Black&lt;/span&gt; );
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>FindNamedSeries</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;FindNamedSeries&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;DataSeries FindNamedSeries(string name);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Locates a &amp;quot;Named DataSeries&amp;quot; that exists within the Bars object.&amp;nbsp; Named 
DataSeries can be registered with a Bars object by specific Data Providers.&amp;nbsp; 
A common example of a possible Named DataSeries is open interest for futures 
data.&amp;nbsp; Another example are additional data fields that are imported in 
ASCII files.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;If the specified Named DataSeries was not found, FindNamedSeries returns 
  null.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;MySeries&lt;/span&gt;;
    &lt;span class='wlnet03'&gt;MySeries&lt;/span&gt; = &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;FindNamedSeries&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;SeriesName&amp;quot;&lt;/span&gt; );
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>FirstActualBar</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;FirstActualBar Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;int FirstActualBar&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns an integer number of the bar that represents the first "real" bar of the secondary series.  You can use this value to make sure that you don't enter trades on the symbol before its actual history began.&lt;/p&gt;
&lt;p&gt;This function is useful in scripts that loop through and execute trades on all of the symbols in a DataSet.  In these cases, Wealth-Lab's synchronization feature will transform secondary data series so that they synchronize with the Primary series, the one clicked to run the script.  If a secondary data series has a shorter history than the Primary series, data bars are appended to the beginning of the secondary series so that it's BarCount equals that of the Primary series.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>&lt;pre class='wlnetcode'&gt;&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Collections&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Text&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;;

&lt;span class='wlnet05'&gt;namespace&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Strategies&lt;/span&gt;
{
    &lt;span class='wlnet05'&gt;public&lt;/span&gt; &lt;span class='wlnet05'&gt;class&lt;/span&gt; &lt;span class='wlnet03'&gt;MyStrategy&lt;/span&gt; : &lt;span class='wlnet03'&gt;WealthScript&lt;/span&gt;
    {
        &lt;span class='wlnet05'&gt;protected&lt;/span&gt; &lt;span class='wlnet05'&gt;override&lt;/span&gt; &lt;span class='wlnet05'&gt;void&lt;/span&gt; &lt;span class='wlnet03'&gt;Execute&lt;/span&gt;()
        {
            &lt;span class='wlnet05'&gt;const&lt;/span&gt; &lt;span class='wlnet05'&gt;char&lt;/span&gt; &lt;span class='wlnet03'&gt;tab&lt;/span&gt; = '\&lt;span class='wlnet03'&gt;u0009&lt;/span&gt;';                
            &lt;span class='wlnet03'&gt;SortedList&lt;/span&gt; &lt;span class='wlnet03'&gt;list&lt;/span&gt; = &lt;span class='wlnet05'&gt;new&lt;/span&gt; &lt;span class='wlnet03'&gt;SortedList&lt;/span&gt;( &lt;span class='wlnet07'&gt;DataSetSymbols&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; );            
            
            &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;ds&lt;/span&gt; = &lt;span class='wlnet04'&gt;0&lt;/span&gt;; &lt;span class='wlnet03'&gt;ds&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;DataSetSymbols&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;ds&lt;/span&gt;++)
            {
                &lt;span class='wlnet06'&gt;SetContext&lt;/span&gt;( &lt;span class='wlnet07'&gt;DataSetSymbols&lt;/span&gt;[&lt;span class='wlnet03'&gt;ds&lt;/span&gt;], &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
                &lt;span class='wlnet03'&gt;list&lt;/span&gt;.&lt;span class='wlnet03'&gt;Add&lt;/span&gt;( &lt;span class='wlnet03'&gt;ds&lt;/span&gt;, &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;FirstActualBar&lt;/span&gt; );
                &lt;span class='wlnet06'&gt;RestoreContext&lt;/span&gt;();
            }
            
            &lt;span class='wlnet05'&gt;foreach&lt;/span&gt;( &lt;span class='wlnet03'&gt;DictionaryEntry&lt;/span&gt; &lt;span class='wlnet03'&gt;i&lt;/span&gt; &lt;span class='wlnet05'&gt;in&lt;/span&gt; &lt;span class='wlnet03'&gt;list&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;First bar of &amp;quot;&lt;/span&gt; + &lt;span class='wlnet07'&gt;DataSetSymbols&lt;/span&gt;[(&lt;span class='wlnet05'&gt;int&lt;/span&gt;)&lt;span class='wlnet03'&gt;i&lt;/span&gt;.&lt;span class='wlnet03'&gt;Key&lt;/span&gt;] + &lt;span class='wlnet03'&gt;tab&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot;: -- #&amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;i&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt; );
        }
    }
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>FormatValue</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;FormatValue&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;string FormatValue(double value);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Formats the specified &lt;b&gt;value&lt;/b&gt; into a string, using the current number of 
Decimals.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Output closing value to the chart&lt;/span&gt;
    &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;FormatValue&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] ), &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt; );
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>HasNamedDataSeries</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;HasNamedDataSeries Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;bool HasNamedDataSeries&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;The HasNamedDataSeries property returns true if any &amp;quot;Named DataSeries&amp;quot; have been registered in the Bars object.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
{
    &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;HasNamedDataSeries&lt;/span&gt; )
    {
        &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Symbol&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot; contains &amp;quot;&lt;/span&gt; + 
            &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;NamedSeries&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot; named series&amp;quot;&lt;/span&gt;  );
    } 
    &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Symbol&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot; does not contain named series&amp;quot;&lt;/span&gt; );            
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>High</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;High Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;DataSeries High&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns a DataSeries object that represents the high prices of the Bars 
object.&amp;nbsp; Access individual high prices via the square bracket syntax:&lt;/p&gt;
&lt;p&gt;&lt;font color="#008000"&gt;//Access high price of the last bar&lt;/font&gt;&lt;br&gt;
double lastHigh = Bars.High[Bars.Count - 1];&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;See the DataSeries object reference for a listing of available properties 
  and methods on the DataSeries object. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Print high price of the last bar&lt;/span&gt;
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet07'&gt;high&lt;/span&gt; = &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;High&lt;/span&gt;[&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;];
    &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;High: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet05'&gt;String&lt;/span&gt;.&lt;span class='wlnet03'&gt;Format&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;{0:f}&amp;quot;&lt;/span&gt;, &lt;span class='wlnet07'&gt;high&lt;/span&gt; ), &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Black&lt;/span&gt; );
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>IntradayBarNumber</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;IntradayBarNumber&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;int IntradayBarNumber(int bar)&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the intraday bar number of the day for intraday data.&amp;nbsp; If the &lt;b&gt;
Bars&lt;/b&gt; object contains non-intraday data, &lt;b&gt;IntradayBarNumber&lt;/b&gt; always 
returns -1.&amp;nbsp; The first bar of a particular date returns 0, the next bar 
returns 1, and so on.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Check for intraday data&lt;/span&gt;
    &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;IsIntraday&lt;/span&gt; )
    {
        &lt;span class='wlnet01'&gt;// Color the middle of the trading day&lt;/span&gt;

        &lt;span class='wlnet01'&gt;// First determine how many bars there are in one day&lt;/span&gt;
        &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;MaxBars&lt;/span&gt; = &lt;span class='wlnet04'&gt;0&lt;/span&gt;;
        &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;pct&lt;/span&gt;;
        
        &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;gt; -&lt;span class='wlnet04'&gt;1&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;--)
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;IntradayBarNumber&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt; ) == &lt;span class='wlnet04'&gt;0&lt;/span&gt; )
        {
            &lt;span class='wlnet03'&gt;MaxBars&lt;/span&gt; = &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;IntradayBarNumber&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt; );
            &lt;span class='wlnet05'&gt;break&lt;/span&gt;;
        }
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;MaxBars&lt;/span&gt; == &lt;span class='wlnet04'&gt;0&lt;/span&gt; )
            &lt;span class='wlnet05'&gt;return&lt;/span&gt;;

        &lt;span class='wlnet01'&gt;// Now color the bars 40 - 60% within the day's range            &lt;/span&gt;
        &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;0&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
        {
            &lt;span class='wlnet03'&gt;pct&lt;/span&gt; = (&lt;span class='wlnet05'&gt;float&lt;/span&gt;) &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;IntradayBarNumber&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt; ) &lt;span class='wlnet01'&gt;/ MaxBars;&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( ( &lt;span class='wlnet03'&gt;pct&lt;/span&gt; &amp;gt;= &lt;span class='wlnet04'&gt;0.4&lt;/span&gt; ) &amp;amp; ( &lt;span class='wlnet03'&gt;pct&lt;/span&gt; &amp;lt;= &lt;span class='wlnet04'&gt;0.6&lt;/span&gt; ) )
                &lt;span class='wlnet06'&gt;SetBarColor&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Olive&lt;/span&gt; );

        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>IsIntraday</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;IsIntraday Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;bool IsIntraday&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns whether the Bars object contains intraday data.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;IsIntraday&lt;/span&gt; != &lt;span class='wlnet05'&gt;true&lt;/span&gt; )
        &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Windows&lt;/span&gt;.&lt;span class='wlnet03'&gt;Forms&lt;/span&gt;.&lt;span class='wlnet03'&gt;MessageBox&lt;/span&gt;.&lt;span class='wlnet03'&gt;Show&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Not an intraday chart &amp;quot;&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Windows&lt;/span&gt;.&lt;span class='wlnet03'&gt;Forms&lt;/span&gt;.&lt;span class='wlnet03'&gt;MessageBox&lt;/span&gt;.&lt;span class='wlnet03'&gt;Show&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;The intraday bar interval is &amp;quot;&lt;/span&gt; + &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;BarInterval&lt;/span&gt; );
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>IsLastBarOfDay</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;IsLastBarOfDay&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;bool IsLastBarOfDay(int bar)&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns true if this is the last bar of a particular day for intraday data.&amp;nbsp; 
If the &lt;b&gt;Bars&lt;/b&gt; object contains non-intraday data, &lt;b&gt;IsLastBarOfDay&lt;/b&gt; 
always returns false.&amp;nbsp; If &lt;b&gt;bar&lt;/b&gt; equals the last bar of data in the 
chart, &lt;b&gt;IsLastBarOfDay&lt;/b&gt; finds the previous bar that was the last bar of the 
day, and compares the time values to determine if the &lt;b&gt;bar&lt;/b&gt; is in fact the 
last bar of the current day.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Daytrading SMA crossover script (backtesting only) &lt;/span&gt;
    &lt;span class='wlnet01'&gt;// that closes all positions at the end of the day.&lt;/span&gt;

    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;hMAFast&lt;/span&gt; = &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;10&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;hMASlow&lt;/span&gt; = &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;30&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;hMAFast&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Green&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;hMASlow&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
    
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet03'&gt;hMASlow&lt;/span&gt;.&lt;span class='wlnet03'&gt;FirstValidValue&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (!&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;IsLastBarOfDay&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt; ) == &lt;span class='wlnet05'&gt;false&lt;/span&gt; )
                &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;CrossOver&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;hMAFast&lt;/span&gt;, &lt;span class='wlnet03'&gt;hMASlow&lt;/span&gt; ) )
                &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;XOver&amp;quot;&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; = &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;IsLastBarOfDay&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt; ) == &lt;span class='wlnet05'&gt;true&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;SellAtClose&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;EOD&amp;quot;&lt;/span&gt; );
            &lt;span class='wlnet05'&gt;else&lt;/span&gt;
            {
                &lt;span class='wlnet01'&gt;// normal intraday exit logic&lt;/span&gt;
                &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;CrossUnder&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;hMAFast&lt;/span&gt;, &lt;span class='wlnet03'&gt;hMASlow&lt;/span&gt; ) )
                    &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;XUnder&amp;quot;&lt;/span&gt; );
                }
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>IsSynthetic</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;IsSynthetic&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;bool IsSynthetic(int bar);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Allows you to determine if individual bars in the Bars object are 
&amp;quot;synthetic&amp;quot;.&amp;nbsp; Synthetic bars are bars that are created as a result of the
&lt;b&gt;AddCalendarDays&lt;/b&gt; WealthScript method.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Highlight added bars&lt;/span&gt;
    
    &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Scale&lt;/span&gt; == &lt;span class='wlnet04'&gt;0&lt;/span&gt; )
    {
        &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;added&lt;/span&gt; = &lt;span class='wlnet06'&gt;AddCalendarDays&lt;/span&gt;( &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
        &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Interpolated bars: &amp;quot;&lt;/span&gt;+ &lt;span class='wlnet03'&gt;added&lt;/span&gt;.&lt;span class='wlnet06'&gt;ToString&lt;/span&gt;(), &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;YellowGreen&lt;/span&gt; );
    
        &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;0&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
        {
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;IsSynthetic&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt; ) )
                &lt;span class='wlnet06'&gt;SetBarColor&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;YellowGreen&lt;/span&gt; );
        }
    } &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Windows&lt;/span&gt;.&lt;span class='wlnet03'&gt;Forms&lt;/span&gt;.&lt;span class='wlnet03'&gt;MessageBox&lt;/span&gt;.&lt;span class='wlnet03'&gt;Show&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Data must be Daily&amp;quot;&lt;/span&gt; );
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>LoadFromFile</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;LoadFromFile&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;
void LoadFromFile(string fileName)&lt;br&gt;
void LoadFromFile(string fileName, int maxBars)&lt;br&gt;
void LoadFromFile(string fileName, System.DateTime startDate, System.DateTime endDate)&lt;br&gt;
void LoadFromFile(string fileName, System.DateTime startDate, System.DateTime endDate, int maxBars)
&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Loads the Bars object from an existing file on disk. The binary file can be created by any Wealth-Lab data provider, or manually in Strategy code (see &lt;i&gt;SaveToFile&lt;/i&gt;).&lt;/p&gt;
&lt;p&gt;Optionally, it's possible to load a specific amount of most-recent bars no greater than the &lt;b&gt;maxBars&lt;/b&gt; value (see example below). In addition, you can limit the time interval using the &lt;b&gt;startDate&lt;/b&gt; and &lt;b&gt;endDate&lt;/b&gt; parameters.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>&lt;pre class='wlnetcode'&gt;&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Collections&lt;/span&gt;.&lt;span class='wlnet03'&gt;Generic&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Text&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Drawing&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;;

&lt;span class='wlnet05'&gt;namespace&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Strategies&lt;/span&gt;
{
    &lt;span class='wlnet01'&gt;/*  Load bars from file */
    &lt;/span&gt;
    &lt;span class='wlnet05'&gt;public&lt;/span&gt; &lt;span class='wlnet05'&gt;class&lt;/span&gt; &lt;span class='wlnet03'&gt;TestLoadBars&lt;/span&gt; : &lt;span class='wlnet03'&gt;WealthScript&lt;/span&gt;
    {
        &lt;span class='wlnet05'&gt;protected&lt;/span&gt; &lt;span class='wlnet05'&gt;override&lt;/span&gt; &lt;span class='wlnet05'&gt;void&lt;/span&gt; &lt;span class='wlnet03'&gt;Execute&lt;/span&gt;()
        {
            &lt;span class='wlnet07'&gt;Bars&lt;/span&gt; &lt;span class='wlnet07'&gt;bars&lt;/span&gt; = &lt;span class='wlnet05'&gt;new&lt;/span&gt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;(&lt;span class='wlnet10'&gt;&amp;quot;NewBars&amp;quot;&lt;/span&gt;,&lt;span class='wlnet03'&gt;BarScale&lt;/span&gt;.&lt;span class='wlnet03'&gt;Daily&lt;/span&gt;,&lt;span class='wlnet04'&gt;0&lt;/span&gt;);
            
            &lt;span class='wlnet01'&gt;/* Pass &amp;quot;true&amp;quot; to GetDataPath() if using Wealth-Lab Pro,&lt;/span&gt;
            &lt;span class='wlnet05'&gt;for&lt;/span&gt; &lt;span class='wlnet03'&gt;Wealth&lt;/span&gt;-&lt;span class='wlnet03'&gt;Lab&lt;/span&gt; &lt;span class='wlnet03'&gt;Developer&lt;/span&gt; &lt;span class='wlnet03'&gt;make&lt;/span&gt; &lt;span class='wlnet03'&gt;it&lt;/span&gt; &lt;span class='wlnet10'&gt;&amp;quot;false&amp;quot;&lt;/span&gt; 
            
            &lt;span class='wlnet03'&gt;Note&lt;/span&gt;: &lt;span class='wlnet03'&gt;The&lt;/span&gt; &lt;span class='wlnet03'&gt;data&lt;/span&gt; &lt;span class='wlnet03'&gt;should&lt;/span&gt; &lt;span class='wlnet03'&gt;NOT&lt;/span&gt; &lt;span class='wlnet03'&gt;be&lt;/span&gt; &lt;span class='wlnet03'&gt;relocated&lt;/span&gt;, &lt;span class='wlnet03'&gt;otherwise&lt;/span&gt; &lt;span class='wlnet03'&gt;you&lt;/span&gt; &lt;span class='wlnet03'&gt;would&lt;/span&gt; &lt;span class='wlnet03'&gt;have&lt;/span&gt; 
            &lt;span class='wlnet03'&gt;to&lt;/span&gt; &lt;span class='wlnet03'&gt;correct&lt;/span&gt; &lt;span class='wlnet03'&gt;the&lt;/span&gt; &lt;span class='wlnet03'&gt;path&lt;/span&gt; &lt;span class='wlnet03'&gt;inside&lt;/span&gt; &lt;span class='wlnet03'&gt;the&lt;/span&gt; &lt;span class='wlnet03'&gt;GetDataPath&lt;/span&gt;() &lt;span class='wlnet03'&gt;function&lt;/span&gt; &lt;span class='wlnet03'&gt;body&lt;/span&gt; *&lt;span class='wlnet01'&gt;/&lt;/span&gt;
            
            &lt;span class='wlnet05'&gt;string&lt;/span&gt; &lt;span class='wlnet03'&gt;sym&lt;/span&gt; = &lt;span class='wlnet03'&gt;GetDataPath&lt;/span&gt;( &lt;span class='wlnet05'&gt;false&lt;/span&gt; ) + @&lt;span class='wlnet10'&gt;&amp;quot;Daily\A\A.WL&amp;quot;&lt;/span&gt;;
            
            &lt;span class='wlnet01'&gt;// Load just 100 recent bars of the stock called &amp;quot;A&amp;quot;&lt;/span&gt;
            &lt;span class='wlnet07'&gt;bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;LoadFromFile&lt;/span&gt;( &lt;span class='wlnet03'&gt;sym&lt;/span&gt;, &lt;span class='wlnet04'&gt;100&lt;/span&gt; );
            
            &lt;span class='wlnet01'&gt;// Plot the data&lt;/span&gt;
            &lt;span class='wlnet07'&gt;bars&lt;/span&gt; = &lt;span class='wlnet06'&gt;Synchronize&lt;/span&gt;( &lt;span class='wlnet07'&gt;bars&lt;/span&gt; ); 
            &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;newBars&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;50&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
            &lt;span class='wlnet06'&gt;PlotSymbol&lt;/span&gt;( &lt;span class='wlnet03'&gt;newBars&lt;/span&gt;, &lt;span class='wlnet07'&gt;bars&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt; );
        }
        
        &lt;span class='wlnet01'&gt;// Get the path to directory where data is stored&lt;/span&gt;
        &lt;span class='wlnet05'&gt;public&lt;/span&gt; &lt;span class='wlnet05'&gt;static&lt;/span&gt; &lt;span class='wlnet05'&gt;string&lt;/span&gt; &lt;span class='wlnet03'&gt;GetDataPath&lt;/span&gt;( &lt;span class='wlnet05'&gt;bool&lt;/span&gt; &lt;span class='wlnet03'&gt;pro&lt;/span&gt; )
        {
            &lt;span class='wlnet05'&gt;string&lt;/span&gt; &lt;span class='wlnet03'&gt;path&lt;/span&gt; = &lt;span class='wlnet03'&gt;pro&lt;/span&gt; ?
                @&lt;span class='wlnet10'&gt;&amp;quot;\Fidelity Investments\WealthLabPro\1.0.0.0\Data\FidelityStaticProvider\&amp;quot; :&lt;/span&gt;
                @&lt;span class='wlnet10'&gt;&amp;quot;\Fidelity Investments\WealthLabDev\1.0.0.0\Data\YahooStaticProvider\&amp;quot;;&lt;/span&gt;
            &lt;span class='wlnet05'&gt;return&lt;/span&gt; 
                &lt;span class='wlnet03'&gt;Environment&lt;/span&gt;.&lt;span class='wlnet03'&gt;GetFolderPath&lt;/span&gt;(&lt;span class='wlnet03'&gt;Environment&lt;/span&gt;.&lt;span class='wlnet03'&gt;SpecialFolder&lt;/span&gt;.&lt;span class='wlnet03'&gt;ApplicationData&lt;/span&gt;) + &lt;span class='wlnet03'&gt;path&lt;/span&gt;;
        }
    }
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Low</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Low Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;DataSeries Low&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns a DataSeries object that represents the low prices of the Bars 
object.&amp;nbsp; Access individual low prices via the square bracket syntax:&lt;/p&gt;
&lt;p&gt;&lt;font color="#008000"&gt;//Access low price of the last bar&lt;/font&gt;&lt;br&gt;
double lastLow = Bars.Low[Bars.Count - 1];&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;See the DataSeries object reference for a listing of available properties 
  and methods on the DataSeries object. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Print low price of the last bar&lt;/span&gt;
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet07'&gt;low&lt;/span&gt; = &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Low&lt;/span&gt;[&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;];
    &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Low: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet05'&gt;String&lt;/span&gt;.&lt;span class='wlnet03'&gt;Format&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;{0:f}&amp;quot;&lt;/span&gt;, &lt;span class='wlnet07'&gt;low&lt;/span&gt; ), &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Black&lt;/span&gt; );
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>NamedSeries</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;NamedSeries Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;ICollection&amp;lt;DataSeries&amp;gt; NamedSeries&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;The NamedSeries property returns a list of all of the &amp;quot;Named DataSeries&amp;quot; that 
have been registered in the Bars object.&amp;nbsp; Named DataSeries can be 
registered with a Bars object by specific Data Providers.&amp;nbsp; A common example of a 
possible Named DataSeries is open interest for futures data.&amp;nbsp; Another example 
are additional data fields that are imported in ASCII files.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Run this on a DataSet with defined Custom series&lt;/span&gt;
    
    &lt;span class='wlnet01'&gt;// For example:&lt;/span&gt;
    &lt;span class='wlnet01'&gt;//DATE;TIME;VOLUME;OPEN;CLOSE;MIN;MAX&lt;/span&gt;
    &lt;span class='wlnet01'&gt;//06/08/2007;22:36:41;0;21.83;21.83;21.83;21.83&lt;/span&gt;
    &lt;span class='wlnet01'&gt;//06/08/2007;22:36:51;0;21.83;21.83;21.83;21.83&lt;/span&gt;
    &lt;span class='wlnet01'&gt;//06/08/2007;22:37:01;0;21.83;21.83;21.83;21.83&lt;/span&gt;
    &lt;span class='wlnet01'&gt;// Will output 'Min' and 'Max'&lt;/span&gt;
    
    &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;NamedSeries&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; &amp;gt; &lt;span class='wlnet04'&gt;0&lt;/span&gt; )
    {            
        &lt;span class='wlnet05'&gt;foreach&lt;/span&gt;( &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;d&lt;/span&gt; &lt;span class='wlnet05'&gt;in&lt;/span&gt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;NamedSeries&lt;/span&gt; )
            &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet03'&gt;d&lt;/span&gt;.&lt;span class='wlnet03'&gt;Description&lt;/span&gt; );
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Open</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Open Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;DataSeries Open&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns a DataSeries object that represents the open prices of the Bars 
object.&amp;nbsp; Access individual open prices via the square bracket syntax:&lt;/p&gt;
&lt;p&gt;&lt;font color="#008000"&gt;//Access open price of the last bar&lt;/font&gt;&lt;br&gt;
double lastOpen = Bars.Open[Bars.Count - 1];&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;See the DataSeries object reference for a listing of available properties 
  and methods on the DataSeries object. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Print open price of the last bar&lt;/span&gt;
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet07'&gt;open&lt;/span&gt; = &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Open&lt;/span&gt;[&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;];
    &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Open price: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet05'&gt;String&lt;/span&gt;.&lt;span class='wlnet03'&gt;Format&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;{0:f}&amp;quot;&lt;/span&gt;, &lt;span class='wlnet07'&gt;open&lt;/span&gt; ), &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Black&lt;/span&gt; );
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>SaveToFile</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;SaveToFile&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void SaveToFile(string fileName)&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Saves the Bars object to a file on disk. The binary file can be recognized by Wealth-Lab natively (see &lt;i&gt;LoadFromFile&lt;/i&gt;).&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;/* Create a Heikin-Ashi chart and save the resulting bars to file */
&lt;/span&gt;
    &lt;span class='wlnet06'&gt;HideVolume&lt;/span&gt;();
    &lt;span class='wlnet07'&gt;Bars&lt;/span&gt; &lt;span class='wlnet07'&gt;bars&lt;/span&gt; = &lt;span class='wlnet05'&gt;new&lt;/span&gt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Symbol&lt;/span&gt;.&lt;span class='wlnet06'&gt;ToString&lt;/span&gt;() + &lt;span class='wlnet10'&gt;&amp;quot; (Heikin-Ashi)&amp;quot;&lt;/span&gt;, &lt;span class='wlnet03'&gt;BarScale&lt;/span&gt;.&lt;span class='wlnet03'&gt;Daily&lt;/span&gt;, &lt;span class='wlnet04'&gt;0&lt;/span&gt; );
    
    &lt;span class='wlnet01'&gt;// Create Heikin-Ashi series&lt;/span&gt;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;HO&lt;/span&gt; = &lt;span class='wlnet07'&gt;Open&lt;/span&gt; + &lt;span class='wlnet04'&gt;0&lt;/span&gt;;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;HH&lt;/span&gt; = &lt;span class='wlnet07'&gt;High&lt;/span&gt; + &lt;span class='wlnet04'&gt;0&lt;/span&gt;;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;HL&lt;/span&gt; = &lt;span class='wlnet07'&gt;Low&lt;/span&gt; + &lt;span class='wlnet04'&gt;0&lt;/span&gt;;         
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;HC&lt;/span&gt; = (&lt;span class='wlnet07'&gt;Open&lt;/span&gt; + &lt;span class='wlnet07'&gt;High&lt;/span&gt; + &lt;span class='wlnet07'&gt;Low&lt;/span&gt; + &lt;span class='wlnet07'&gt;Close&lt;/span&gt;) &lt;span class='wlnet01'&gt;/ 4;&lt;/span&gt;
    
    &lt;span class='wlnet01'&gt;// Build the Bars object&lt;/span&gt;
    &lt;span class='wlnet05'&gt;for&lt;/span&gt; (&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;1&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;o1&lt;/span&gt; = &lt;span class='wlnet03'&gt;HO&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;]; 
        &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;c1&lt;/span&gt; = &lt;span class='wlnet03'&gt;HC&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;]; 
        &lt;span class='wlnet03'&gt;HO&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] = ( &lt;span class='wlnet03'&gt;o1&lt;/span&gt; + &lt;span class='wlnet03'&gt;c1&lt;/span&gt; ) &lt;span class='wlnet01'&gt;/ 2; &lt;/span&gt;
        &lt;span class='wlnet03'&gt;HH&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] = &lt;span class='wlnet03'&gt;Math&lt;/span&gt;.&lt;span class='wlnet03'&gt;Max&lt;/span&gt;( &lt;span class='wlnet03'&gt;HO&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet07'&gt;High&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] ); 
        &lt;span class='wlnet03'&gt;HL&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] = &lt;span class='wlnet03'&gt;Math&lt;/span&gt;.&lt;span class='wlnet03'&gt;Min&lt;/span&gt;( &lt;span class='wlnet03'&gt;HO&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet07'&gt;Low&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] );             
        
        &lt;span class='wlnet07'&gt;bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Add&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Date&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet03'&gt;HO&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet03'&gt;HH&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet03'&gt;HL&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet03'&gt;HC&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Volume&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]);
    }

    &lt;span class='wlnet01'&gt;// Save the virtual Heikin-Ashi bars to disk&lt;/span&gt;
    &lt;span class='wlnet05'&gt;string&lt;/span&gt; &lt;span class='wlnet03'&gt;file&lt;/span&gt; = @&lt;span class='wlnet10'&gt;&amp;quot;C:\Heikin-Ashi.WL&amp;quot;&lt;/span&gt;;
    &lt;span class='wlnet07'&gt;bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;SaveToFile&lt;/span&gt;( &lt;span class='wlnet03'&gt;file&lt;/span&gt; );
    
    &lt;span class='wlnet01'&gt;// Verify by loading from disk and plotting&lt;/span&gt;
    &lt;span class='wlnet07'&gt;Bars&lt;/span&gt; &lt;span class='wlnet03'&gt;haBars&lt;/span&gt; = &lt;span class='wlnet05'&gt;new&lt;/span&gt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;(&lt;span class='wlnet10'&gt;&amp;quot;Saved Heikin-Ashi Bars&amp;quot;&lt;/span&gt;,&lt;span class='wlnet03'&gt;BarScale&lt;/span&gt;.&lt;span class='wlnet03'&gt;Daily&lt;/span&gt;,&lt;span class='wlnet04'&gt;0&lt;/span&gt;);
    &lt;span class='wlnet03'&gt;haBars&lt;/span&gt;.&lt;span class='wlnet03'&gt;LoadFromFile&lt;/span&gt;( &lt;span class='wlnet03'&gt;file&lt;/span&gt; );            
    &lt;span class='wlnet03'&gt;haBars&lt;/span&gt; = &lt;span class='wlnet06'&gt;Synchronize&lt;/span&gt;( &lt;span class='wlnet03'&gt;haBars&lt;/span&gt; );            
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;haPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;(&lt;span class='wlnet04'&gt;50&lt;/span&gt;, &lt;span class='wlnet05'&gt;false&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;);
    &lt;span class='wlnet06'&gt;PlotSymbol&lt;/span&gt;(&lt;span class='wlnet03'&gt;haPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;haBars&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;DodgerBlue&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt;);            
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Scale</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Scale Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;BarScale Scale&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the Scale of the data contained in the Bars object.&amp;nbsp; Possible 
Scale values are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Daily&lt;/li&gt;
  &lt;li&gt;Weekly&lt;/li&gt;
  &lt;li&gt;Monthly&lt;/li&gt;
  &lt;li&gt;Minute&lt;/li&gt;
  &lt;li&gt;Second&lt;/li&gt;
  &lt;li&gt;Tick&lt;/li&gt;
  &lt;li&gt;Quarterly&lt;/li&gt;
  &lt;li&gt;Yearly&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Windows&lt;/span&gt;.&lt;span class='wlnet03'&gt;Forms&lt;/span&gt;.&lt;span class='wlnet03'&gt;MessageBox&lt;/span&gt;.&lt;span class='wlnet03'&gt;Show&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Data scale is &amp;quot;&lt;/span&gt; + &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Scale&lt;/span&gt; );
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>SecurityName</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;SecurityName Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;string SecurityName&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the security name of the symbol contained in the Bars object.&amp;nbsp; 
This will be the company name for stocks, and the name of the commodity or 
future for futures symbols.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Windows&lt;/span&gt;.&lt;span class='wlnet03'&gt;Forms&lt;/span&gt;.&lt;span class='wlnet03'&gt;MessageBox&lt;/span&gt;.&lt;span class='wlnet03'&gt;Show&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;We're now viewing &amp;quot;&lt;/span&gt; + &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;SecurityName&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot; chart&amp;quot;&lt;/span&gt;);
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Symbol</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Symbol Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;string Symbol&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the symbol for the data that was loaded into the Bars object.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Show the closing price with the symbol in a chart label }&lt;/span&gt;
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;x&lt;/span&gt; = &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;];
    &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Closing price for &amp;quot;&lt;/span&gt; + &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Symbol&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot; is &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;x&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;DarkSlateGray&lt;/span&gt; );
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>SymbolInfo</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;SymbolInfo Property&lt;/h1&gt;
&lt;p&gt;The SymbolInfo object represents a number of symbol's properties: Decimals, Margin, Point Value, Security Type and Tick.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet03'&gt;SymbolInfo&lt;/span&gt; &lt;span class='wlnet03'&gt;si&lt;/span&gt; = &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;SymbolInfo&lt;/span&gt;;
    &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Symbol&lt;/span&gt; );    
    &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Symbol= &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;si&lt;/span&gt;.&lt;span class='wlnet03'&gt;Symbol&lt;/span&gt; );              
    &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Point Value = &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;si&lt;/span&gt;.&lt;span class='wlnet03'&gt;PointValue&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Tick = &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;si&lt;/span&gt;.&lt;span class='wlnet03'&gt;Tick&lt;/span&gt; );  
    &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Margin = &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;si&lt;/span&gt;.&lt;span class='wlnet03'&gt;Margin&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Decimals = &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;si&lt;/span&gt;.&lt;span class='wlnet03'&gt;Decimals&lt;/span&gt;); 
    &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;&amp;quot;&lt;/span&gt; );
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Tag</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Tag Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;object Tag&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;The &lt;b&gt;Tag&lt;/b&gt; property allows you to store any object with a Bars object.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>&lt;span class='wlnet01'&gt;//
            //&amp;quot;currentPos&amp;quot; is null when sizing trading signals on bar+1 (Alert) in PosSizers.&lt;/span&gt;
            &lt;span class='wlnet01'&gt;//This example illustrates how to send a double value to a PosSizer&lt;/span&gt;
            &lt;span class='wlnet01'&gt;//from a Strategy to size an Alert.            &lt;/span&gt;
            &lt;span class='wlnet01'&gt;//        &lt;/span&gt;

            &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;5&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
            {
                &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt; )
                {
                    &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt; );
                } 
                &lt;span class='wlnet05'&gt;else&lt;/span&gt;
                {
                    &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;lt;= &lt;span class='wlnet03'&gt;Lowest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;5&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] )
                    {
                        &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;size&lt;/span&gt; = &lt;span class='wlnet04'&gt;100&lt;/span&gt;;
                        &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; ) == &lt;span class='wlnet05'&gt;null&lt;/span&gt; &amp;amp;&amp;amp; (&lt;span class='wlnet03'&gt;bar&lt;/span&gt; == &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;) )
                        {
                            &lt;span class='wlnet01'&gt;// Store some double value in the current Bars.Tag property&lt;/span&gt;
                            &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Tag&lt;/span&gt; = &lt;span class='wlnet03'&gt;size&lt;/span&gt;;
                        }
                    }
                }
            }
            
            &lt;span class='wlnet01'&gt;// Next, in your PosSizer's SizePosition method call:&lt;/span&gt;
            
            &lt;span class='wlnet01'&gt;// double size = (double)bars.Tag;&lt;/span&gt;
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Volume</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Volume Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;DataSeries Volume&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns a DataSeries object that represents the volume of the Bars object.&amp;nbsp; 
Access individual bar volumes via the square bracket syntax:&lt;/p&gt;
&lt;p&gt;&lt;font color="#008000"&gt;//Access volume of the first bar&lt;/font&gt;&lt;br&gt;
double firstVolume = Bars.Volume[0];&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;See the DataSeries object reference for a listing of available properties 
  and methods on the DataSeries object. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;//Access volume of the last bar&lt;/span&gt;
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;turnover&lt;/span&gt; = &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] * &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Volume&lt;/span&gt;[&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;];
    &lt;span class='wlnet01'&gt;// Print stock turnover&lt;/span&gt;
    &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Turnover: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet05'&gt;String&lt;/span&gt;.&lt;span class='wlnet03'&gt;Format&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;${0:0,0}&amp;quot;&lt;/span&gt;, &lt;span class='wlnet03'&gt;turnover&lt;/span&gt; ), &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Black&lt;/span&gt; );
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
    </Entries>
    <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Bars Object&lt;/h1&gt;
&lt;p&gt;The Bars object represents a collection of historical open, high, low, close 
and volume values.&lt;/p&gt;
&lt;/html&gt;
</Description>
  </QuickRefCategory>
  <QuickRefCategory>
    <Name>ChartPane Object</Name>
    <CategoryType>Object</CategoryType>
    <Entries>
      <QuickRefEntry>
        <Name>ConvertValueToY</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;ConvertValueToY&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;int ConvertValueToY(double value);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Converts the specified numeric &lt;b&gt;value&lt;/b&gt; to the Y-pixel coordinate on the chart 
pane.&amp;nbsp; This method is most valuable in custom Chart Style programming, but 
can also come in handy when developing custom Drawing Objects or using 
WealthScript's PaintHook functionality.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example />
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Decimals</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Decimals Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;int Decimals&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Specifies the number of decimals places that will be used to format values in 
the chart pane's margins.&lt;/p&gt;




&lt;/html&gt;</Description>
        <Example />
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>DisplayGrid</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;DisplayGrid Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;bool DisplayGrid&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Determines whether the horizontal gridlines should be visible on this chart 
pane.&lt;/p&gt;




&lt;/html&gt;</Description>
        <Example />
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>FormatChartValue</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;FormatChartValue&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;string FormatChartValue(double value);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Formats the specified numeric value to an abbreviated string, based on its 
value, and also taking into account the Decimals property.&lt;/p&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;p&gt;123.45 will format as 123.45&lt;br&gt;
12,345 will format as 12.34K&lt;br&gt;
1,234,567 will format as 1.23M&lt;/p&gt;




&lt;/html&gt;</Description>
        <Example />
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>GetBackgroundColor</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;GetBackgroundColor&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;Color GetBackgroundColor(int bar);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the background color at the specified &lt;b&gt;bar&lt;/b&gt; in the pane.&lt;/p&gt;




&lt;/html&gt;</Description>
        <Example />
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Height</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Height Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;int Height&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;The current height of the pane, in pixels.&amp;nbsp; This property has limited 
value at the time a Strategy executes, but can prove valuable when building 
custom ChartStyles, or using the PaintHook functionality of WealthScript.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example />
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>IsPricePane</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;IsPricePane Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;bool IsPricePane&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns true if this chart pane is the one that the main price bars are being 
plotted on.&amp;nbsp; This property has limited value in Strategy code, but can 
prove useful in programming custom Drawing Objects.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
&lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;.&lt;span class='wlnet03'&gt;IsPricePane&lt;/span&gt; )
        &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Windows&lt;/span&gt;.&lt;span class='wlnet03'&gt;Forms&lt;/span&gt;.&lt;span class='wlnet03'&gt;MessageBox&lt;/span&gt;.&lt;span class='wlnet03'&gt;Show&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Operating in Strategy window&amp;quot;&lt;/span&gt; ); &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Windows&lt;/span&gt;.&lt;span class='wlnet03'&gt;Forms&lt;/span&gt;.&lt;span class='wlnet03'&gt;MessageBox&lt;/span&gt;.&lt;span class='wlnet03'&gt;Show&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Running in Strategy Monitor&amp;quot;&lt;/span&gt; );
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>LogScale</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;LogScale Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;bool LogScale&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Controls whether the chart pane will be plotted in semi-log scale.&lt;/p&gt;
&lt;p&gt;A semi-log scale gives equal weight to percentage changes, rather then absolute value changes.  For example, the distance from 1 to 10 will be the same size on the chart as the distance from 10 to 100.  It's called "semi-log" because only the y-axis uses the log scale, whereas the x-axis [typically] remains evenly-spaced.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet05'&gt;if&lt;/span&gt;( ( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt; != &lt;span class='wlnet05'&gt;null&lt;/span&gt; ) &amp;amp; ( &lt;span class='wlnet07'&gt;VolumePane&lt;/span&gt; != &lt;span class='wlnet05'&gt;null&lt;/span&gt; ) )
    {
        
        &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;.&lt;span class='wlnet03'&gt;LogScale&lt;/span&gt; = &lt;span class='wlnet05'&gt;true&lt;/span&gt;;
        &lt;span class='wlnet07'&gt;VolumePane&lt;/span&gt;.&lt;span class='wlnet03'&gt;LogScale&lt;/span&gt; = &lt;span class='wlnet05'&gt;true&lt;/span&gt;;
    
        &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Price Pane is in Semi-Log Scale? &amp;quot;&lt;/span&gt; + &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;.&lt;span class='wlnet03'&gt;LogScale&lt;/span&gt; );
        &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Volume Pane is in Semi-Log Scale? &amp;quot;&lt;/span&gt; + &lt;span class='wlnet07'&gt;VolumePane&lt;/span&gt;.&lt;span class='wlnet03'&gt;LogScale&lt;/span&gt; );
    }
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>SetBackgroundColor</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;SetBackgroundColor&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void SetBackgroundColor(int bar, Color color);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Sets the background color at the specified &lt;b&gt;bar&lt;/b&gt; in the pane to the 
specified &lt;b&gt;color&lt;/b&gt;.&lt;/p&gt;




&lt;/html&gt;
</Description>
        <Example />
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Top</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Top Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;int Top&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the location of the top of the pane from the top of the chart, in 
pixels.&amp;nbsp; This property has no real value in Strategy code, but can be 
useful in custom Drawing Object development, or implementing PaintHooks in the 
WealthScript.&lt;/p&gt;




&lt;/html&gt;</Description>
        <Example />
        <EntryType>Property</EntryType>
      </QuickRefEntry>
    </Entries>
    <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;ChartPane Object&lt;/h1&gt;
&lt;p&gt;The ChartPane object represents one of the panes of the current chart.&lt;/p&gt;



&lt;/html&gt;</Description>
  </QuickRefCategory>
  <QuickRefCategory>
    <Name>Common Signals</Name>
    <CategoryType>Functional</CategoryType>
    <Entries>
      <QuickRefEntry>
        <Name>CrossOver</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;CrossOver&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;bool CrossOver(int bar, DataSeries ds1, DataSeries 
ds2);&lt;br&gt;
bool CrossOver(int bar, DataSeries ds1, double value);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns true if the specified DataSeries (&lt;b&gt;ds1&lt;/b&gt;) crosses over either 
another DataSeries (&lt;b&gt;ds2&lt;/b&gt;), or a specific &lt;b&gt;value&lt;/b&gt;, on the specified &lt;b&gt;
bar&lt;/b&gt;.&amp;nbsp; Specifically, CrossOver returns true if the current value is 
above the target value at the specified &lt;b&gt;bar&lt;/b&gt;, and the previous value was 
less than or equal to the target value at the previous bar.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;wma1&lt;/span&gt; = &lt;span class='wlnet03'&gt;WMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;30&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;wma2&lt;/span&gt; = &lt;span class='wlnet03'&gt;WMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;60&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;wma1&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;LightCoral&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; ); 
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;wma2&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;LightBlue&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );

    &lt;span class='wlnet01'&gt;// A simple Weighted Moving Average Crossover System&lt;/span&gt;
    
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet03'&gt;wma2&lt;/span&gt;.&lt;span class='wlnet03'&gt;FirstValidValue&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; = &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;;    
            &lt;span class='wlnet06'&gt;SellAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryPrice&lt;/span&gt; * &lt;span class='wlnet04'&gt;0.96&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;4% Stop&amp;quot;&lt;/span&gt; );
            &lt;span class='wlnet06'&gt;SellAtLimit&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryPrice&lt;/span&gt; * &lt;span class='wlnet04'&gt;1.06&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;6% Target&amp;quot;&lt;/span&gt; );    
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;CrossOver&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;wma1&lt;/span&gt;, &lt;span class='wlnet03'&gt;wma2&lt;/span&gt; ) )
            &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>CrossUnder</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;CrossUnder&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;bool CrossUnder(int bar, DataSeries ds1, DataSeries 
ds2);&lt;br&gt;
bool CrossUnder(int bar, DataSeries ds1, double value);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns true if the specified DataSeries (&lt;b&gt;ds1&lt;/b&gt;) crosses under either 
another DataSeries (&lt;b&gt;ds2&lt;/b&gt;), or a specific &lt;b&gt;value&lt;/b&gt;, on the specified &lt;b&gt;
bar&lt;/b&gt;.&amp;nbsp; Specifically, CorssUnder returns true if the current value is 
below the target value at the specified &lt;b&gt;bar&lt;/b&gt;, and the previous value was 
greater than or equal to the target value at the previous bar.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;StochPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;50&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;D&lt;/span&gt; = &lt;span class='wlnet03'&gt;StochD&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet04'&gt;3&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;Signal&lt;/span&gt; = &lt;span class='wlnet03'&gt;EMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet03'&gt;D&lt;/span&gt;, &lt;span class='wlnet04'&gt;9&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Indicators&lt;/span&gt;.&lt;span class='wlnet03'&gt;EMACalculation&lt;/span&gt;.&lt;span class='wlnet03'&gt;Modern&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;StochPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;D&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;StochPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;Signal&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Gray&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );

    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;30&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
            &lt;span class='wlnet01'&gt;// It closes all positions when Stochastic &lt;/span&gt;
            &lt;span class='wlnet01'&gt;// crosses below the signal line from above 80.&lt;/span&gt;
            
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( ( &lt;span class='wlnet07'&gt;ActivePositions&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; &amp;gt; &lt;span class='wlnet04'&gt;0&lt;/span&gt; ) &amp;amp;&amp;amp; 
                &lt;span class='wlnet06'&gt;CrossUnder&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;D&lt;/span&gt;, &lt;span class='wlnet03'&gt;Signal&lt;/span&gt; ) &amp;amp;&amp;amp; ( &lt;span class='wlnet03'&gt;D&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] &amp;gt; &lt;span class='wlnet04'&gt;80&lt;/span&gt; ) )
            {
                &lt;span class='wlnet01'&gt;// Let's work directly with the list of active positions, introduced in WL5&lt;/span&gt;
                &lt;span class='wlnet05'&gt;for&lt;/span&gt;( &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; = &lt;span class='wlnet07'&gt;ActivePositions&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; - &lt;span class='wlnet04'&gt;1&lt;/span&gt;; &lt;span class='wlnet03'&gt;p&lt;/span&gt; &amp;gt; -&lt;span class='wlnet04'&gt;1&lt;/span&gt; ; &lt;span class='wlnet03'&gt;p&lt;/span&gt;-- )
                    &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;ActivePositions&lt;/span&gt;[&lt;span class='wlnet03'&gt;p&lt;/span&gt;] );
            }
        
            &lt;span class='wlnet01'&gt;// This system opens a new position whenever Stochastic &lt;/span&gt;
            &lt;span class='wlnet01'&gt;// crosses above its signal line from below 20. &lt;/span&gt;

            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;CrossOver&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;D&lt;/span&gt;, &lt;span class='wlnet03'&gt;Signal&lt;/span&gt; ) )
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;D&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] &amp;lt; &lt;span class='wlnet04'&gt;20&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Stoch&amp;quot;&lt;/span&gt; );
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>TurnDown</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;TurnDown&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;bool TurnDown(int bar, DataSeries series);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns true if the specified DataSeries has &amp;quot;turned down&amp;quot; as of the 
specified &lt;b&gt;bar&lt;/b&gt;.&amp;nbsp; The &lt;b&gt;series&lt;/b&gt; has turned down if the value at &lt;b&gt;
bar&lt;/b&gt; is less than the value at &lt;b&gt;bar&lt;/b&gt; - 1, and the next most recent 
change in value in the &lt;b&gt;series&lt;/b&gt; was an increase.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Buy when Williams %R turns down and is above 80&lt;/span&gt;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;PctR&lt;/span&gt; = &lt;span class='wlnet03'&gt;WilliamsR&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet04'&gt;30&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;PctRPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;25&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeriesOscillator&lt;/span&gt;( &lt;span class='wlnet03'&gt;PctRPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;PctR&lt;/span&gt;, &lt;span class='wlnet04'&gt;90&lt;/span&gt;, &lt;span class='wlnet04'&gt;10&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;LightCoral&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;LightBlue&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Gray&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );

    &lt;span class='wlnet01'&gt;// Time-based exit&lt;/span&gt;
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;days&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;;
    
    &lt;span class='wlnet01'&gt;// Start trading loop with the first &amp;quot;valid&amp;quot; value of %R&lt;/span&gt;
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet03'&gt;PctR&lt;/span&gt;.&lt;span class='wlnet03'&gt;FirstValidValue&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; - &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryBar&lt;/span&gt; &amp;gt;= &lt;span class='wlnet03'&gt;days&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;SellAtClose&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet01'&gt;// Color turndowns&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;TurnDown&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;PctR&lt;/span&gt; ) )
            {
                &lt;span class='wlnet06'&gt;SetSeriesBarColor&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;PctR&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt; );
                &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;PctR&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;gt; &lt;span class='wlnet04'&gt;80&lt;/span&gt; )
                {
                    &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;WR&amp;quot;&lt;/span&gt; );
                }
            }
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>TurnUp</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;TurnUp&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;bool TurnUp(int bar, DataSeries series);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns true if the specified DataSeries has &amp;quot;turned up&amp;quot; as of the specified
&lt;b&gt;bar&lt;/b&gt;.&amp;nbsp; The &lt;b&gt;series&lt;/b&gt; has turned up if the value at &lt;b&gt;bar&lt;/b&gt; is 
greater than the value at &lt;b&gt;bar&lt;/b&gt; - 1, and the next most recent change in 
value in the &lt;b&gt;series&lt;/b&gt; was a decrease.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Enter the market when the slow stochastic turns up from below 15&lt;/span&gt;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;stoch&lt;/span&gt; = &lt;span class='wlnet03'&gt;StochD&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet04'&gt;5&lt;/span&gt;, &lt;span class='wlnet04'&gt;60&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;StochPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;30&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;StochPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;stoch&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;2&lt;/span&gt; );

    &lt;span class='wlnet01'&gt;// Start trading loop with the first &amp;quot;valid&amp;quot; value of StochD&lt;/span&gt;
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet03'&gt;stoch&lt;/span&gt;.&lt;span class='wlnet03'&gt;FirstValidValue&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;(  &lt;span class='wlnet06'&gt;CrossOver&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;stoch&lt;/span&gt;, &lt;span class='wlnet04'&gt;80&lt;/span&gt; ) )
            &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;StochD Crosses 80&amp;quot;&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {                    
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;stoch&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] &amp;lt; &lt;span class='wlnet04'&gt;15&lt;/span&gt; )
            {
            &lt;span class='wlnet01'&gt;// Color TurnUps&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;TurnUp&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;stoch&lt;/span&gt; ) )
                {                    
                &lt;span class='wlnet06'&gt;SetSeriesBarColor&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;stoch&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt; );
                &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;StochasticD Turns Up&amp;quot;&lt;/span&gt; );
                }
            }
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
    </Entries>
    <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Common Signals&lt;/h1&gt;
&lt;p&gt;The Common Signal category contains methods that are commonly used to produce 
trading signals.&lt;/p&gt;
&lt;/html&gt;
</Description>
  </QuickRefCategory>
  <QuickRefCategory>
    <Name>Cosmetic Chart</Name>
    <CategoryType>Functional</CategoryType>
    <Entries>
      <QuickRefEntry>
        <Name>AnnotateBar</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;AnnotateBar&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000ff"&gt;void AnnotateBar(string text, int bar, bool aboveBar, 
Color color, Color backgroundColor, Font font);&lt;br&gt;
void AnnotateBar(string text, int bar, bool aboveBar, Color color, Color 
backgroundColor);&lt;br&gt;
void AnnotateBar(string text, int bar, bool aboveBar, Color color);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Annotates the specified &lt;b&gt;bar&lt;/b&gt; with the string passed in the &lt;b&gt;text&lt;/b&gt; 
parameter, using the specified &lt;b&gt;color&lt;/b&gt; for the font.&amp;nbsp; Use the &lt;b&gt;aboveBar&lt;/b&gt; 
parameter to control if the &lt;b&gt;text&lt;/b&gt; is displayed above or below the &lt;b&gt;bar&lt;/b&gt;.&amp;nbsp; 
Using the version that accepts a &lt;b&gt;backgroundColor&lt;/b&gt; parameter causes the &lt;b&gt;
text&lt;/b&gt; to be displayed over a filled background.&amp;nbsp; Calling AnnotateBar multiple 
times causes the annotations to be stacked one on top of another either above or 
below the &lt;b&gt;bar&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Use the version of the method that accept a &lt;b&gt;Font&lt;/b&gt; parameter to draw the 
text using a custom font.&amp;nbsp; If you use this version and do not want a 
colored background, specify Color.Empty for the &lt;b&gt;backgroundColor&lt;/b&gt; 
parameter.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet03'&gt;Font&lt;/span&gt; &lt;span class='wlnet03'&gt;font&lt;/span&gt; = &lt;span class='wlnet05'&gt;new&lt;/span&gt; &lt;span class='wlnet03'&gt;Font&lt;/span&gt;(&lt;span class='wlnet10'&gt;&amp;quot;Arial&amp;quot;&lt;/span&gt;, &lt;span class='wlnet04'&gt;12&lt;/span&gt;, &lt;span class='wlnet03'&gt;FontStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Bold&lt;/span&gt;);
    &lt;span class='wlnet01'&gt;// Demonstrates operation overload&lt;/span&gt;
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;200&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet01'&gt;// Annotate a bar if it's a 200 day closing high&lt;/span&gt;
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] == &lt;span class='wlnet03'&gt;Highest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;200&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] )
            &lt;span class='wlnet06'&gt;AnnotateBar&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;High&amp;quot;&lt;/span&gt;, &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;DarkGreen&lt;/span&gt; );
        &lt;span class='wlnet01'&gt;// Annotate a bar if it's a 200 day closing low&lt;/span&gt;
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] == &lt;span class='wlnet03'&gt;Lowest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;200&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] )
            &lt;span class='wlnet06'&gt;AnnotateBar&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Low&amp;quot;&lt;/span&gt;, &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet05'&gt;false&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;DarkRed&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;White&lt;/span&gt; );
        &lt;span class='wlnet01'&gt;// Annotate the last bar &lt;/span&gt;
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;bar&lt;/span&gt; == &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt; )
            &lt;span class='wlnet06'&gt;AnnotateBar&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Last&amp;quot;&lt;/span&gt;, &lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;3&lt;/span&gt;, &lt;span class='wlnet05'&gt;false&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;DarkRed&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;White&lt;/span&gt;, &lt;span class='wlnet03'&gt;font&lt;/span&gt; );
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>AnnotateChart</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;AnnotateChart&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000ff"&gt;void AnnotateChart(ChartPane pane, string text, int 
bar, double value, Color color, Color backgroundColor, Font font, 
HorizontalAlignment alignment);&lt;br&gt;
void AnnotateChart(ChartPane pane, string text, int bar, double value, Color 
color, Color backgroundColor, Font font);&lt;br&gt;
void AnnotateChart(ChartPane pane, string text, int bar, double value, Color 
color, Color backgroundColor);&lt;br&gt;
void AnnotateChart(ChartPane pane, string text, int bar, double value, Color 
color);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Annotates the chart with the specified &lt;b&gt;text&lt;/b&gt; using the specified &lt;b&gt;
color&lt;/b&gt; at a location provided by the &lt;b&gt;bar&lt;/b&gt; and &lt;b&gt;value&lt;/b&gt; parameters.&amp;nbsp; 
The &lt;b&gt;pane&lt;/b&gt; parameter determines which chart pane is annotated.&amp;nbsp; If you call 
the version of AnnotateChart that accepts a &lt;b&gt;backgroundColor&lt;/b&gt; parameter, 
the text will be displayed over a filled background.&lt;/p&gt;
&lt;p&gt;Use the version of the method that accept a &lt;b&gt;Font&lt;/b&gt; parameter to draw the 
text using a custom font.&amp;nbsp; If you use this version and do not want a colored 
background, specify Color.Empty for the &lt;b&gt;backgroundColor&lt;/b&gt; parameter.&lt;/p&gt;
&lt;p&gt;Use the first overloaded version of the method, with the &lt;b&gt;alignment&lt;/b&gt; 
parameter, to control the alignment of the text, relative to the &lt;b&gt;bar&lt;/b&gt;.&amp;nbsp; 
Possible values are Left, Center or Right.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;To annotate the price pane, use PricePane for the &lt;b&gt;pane&lt;/b&gt; parameter.
  &lt;/li&gt;
  &lt;li&gt;To annotate the volume pane, use VolumePane for the &lt;b&gt;pane&lt;/b&gt; parameter.
  &lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Define new font style&lt;/span&gt;
    &lt;span class='wlnet03'&gt;Font&lt;/span&gt; &lt;span class='wlnet03'&gt;font&lt;/span&gt; = &lt;span class='wlnet05'&gt;new&lt;/span&gt; &lt;span class='wlnet03'&gt;Font&lt;/span&gt;(&lt;span class='wlnet10'&gt;&amp;quot;Arial&amp;quot;&lt;/span&gt;, &lt;span class='wlnet04'&gt;7&lt;/span&gt;, &lt;span class='wlnet03'&gt;FontStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Regular&lt;/span&gt;);
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;smaVolume&lt;/span&gt; = &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Volume&lt;/span&gt;, &lt;span class='wlnet04'&gt;50&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;VolumePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;smaVolume&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;LightSalmon&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;2&lt;/span&gt; );
    &lt;span class='wlnet01'&gt;// Demonstrates operator overload&lt;/span&gt;
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;50&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet01'&gt;// Annotate the last bar if it demonstrates unusual volatility&lt;/span&gt;
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;bar&lt;/span&gt; == &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt; )
        {
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;ATR&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;gt;= &lt;span class='wlnet04'&gt;2&lt;/span&gt; * &lt;span class='wlnet03'&gt;ATR&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet04'&gt;14&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] )
                &lt;span class='wlnet06'&gt;AnnotateChart&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Volatile!&amp;quot;&lt;/span&gt;, &lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;5&lt;/span&gt;, &lt;span class='wlnet07'&gt;High&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Green&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;White&lt;/span&gt;, &lt;span class='wlnet03'&gt;font&lt;/span&gt;, &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Windows&lt;/span&gt;.&lt;span class='wlnet03'&gt;Forms&lt;/span&gt;.&lt;span class='wlnet03'&gt;HorizontalAlignment&lt;/span&gt;.&lt;span class='wlnet03'&gt;Left&lt;/span&gt; );
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet07'&gt;Volume&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;gt;= &lt;span class='wlnet04'&gt;1.5&lt;/span&gt; * &lt;span class='wlnet03'&gt;smaVolume&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] ) 
                &lt;span class='wlnet06'&gt;AnnotateChart&lt;/span&gt;( &lt;span class='wlnet07'&gt;VolumePane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Volume is High&amp;quot;&lt;/span&gt;, &lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;10&lt;/span&gt;, &lt;span class='wlnet07'&gt;Volume&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Green&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;White&lt;/span&gt;, &lt;span class='wlnet03'&gt;font&lt;/span&gt;, &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Windows&lt;/span&gt;.&lt;span class='wlnet03'&gt;Forms&lt;/span&gt;.&lt;span class='wlnet03'&gt;HorizontalAlignment&lt;/span&gt;.&lt;span class='wlnet03'&gt;Left&lt;/span&gt; );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>ChartStyle</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;ChartStyle Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;ChartStyle ChartStyle&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the instance of the ChartStyle object that is currently being used to 
render the chart.&amp;nbsp; This is an object that derives from the base ChartStyle 
class, and is responsible for rendering the actual bars of the chart.&amp;nbsp; Some 
ChartStyle objects contain additional data structures and information that can 
be used in your Strategy.&amp;nbsp; Consult the specific ChartStyle documentation 
for any additional value that might be obtained.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;To access any methods or properties that are specific to a ChartStyle 
  derived object, you will need to cast the ChartStyle object returned here to 
  the specific type you are expecting.&amp;nbsp; For this to work, you will need to 
  ensure that the desired chart style is actually selected in the toolbar.&lt;/li&gt;
  &lt;li&gt;If the Strategy is run in a context where there is no chart (such as the 
  Strategy Monitor or a Multi-Symbol Backtest), this property returns null.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>&lt;pre class='wlnetcode'&gt;&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Collections&lt;/span&gt;.&lt;span class='wlnet03'&gt;Generic&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Text&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Drawing&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Indicators&lt;/span&gt;;

&lt;span class='wlnet05'&gt;namespace&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Strategies&lt;/span&gt;
{
    &lt;span class='wlnet05'&gt;public&lt;/span&gt; &lt;span class='wlnet05'&gt;class&lt;/span&gt; &lt;span class='wlnet03'&gt;MyStrategy&lt;/span&gt; : &lt;span class='wlnet03'&gt;WealthScript&lt;/span&gt;
    {
        &lt;span class='wlnet05'&gt;bool&lt;/span&gt; &lt;span class='wlnet03'&gt;IsStrategyMonitor&lt;/span&gt;()
        {
            &lt;span class='wlnet05'&gt;return&lt;/span&gt; &lt;span class='wlnet07'&gt;ChartStyle&lt;/span&gt; == &lt;span class='wlnet05'&gt;null&lt;/span&gt;;
        }
        
        &lt;span class='wlnet05'&gt;protected&lt;/span&gt; &lt;span class='wlnet05'&gt;override&lt;/span&gt; &lt;span class='wlnet05'&gt;void&lt;/span&gt; &lt;span class='wlnet03'&gt;Execute&lt;/span&gt;()
        {
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( !&lt;span class='wlnet03'&gt;IsStrategyMonitor&lt;/span&gt;() )
                &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Windows&lt;/span&gt;.&lt;span class='wlnet03'&gt;Forms&lt;/span&gt;.&lt;span class='wlnet03'&gt;MessageBox&lt;/span&gt;.&lt;span class='wlnet03'&gt;Show&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Operating in Strategy window&amp;quot;&lt;/span&gt; ); &lt;span class='wlnet05'&gt;else&lt;/span&gt;
                &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Windows&lt;/span&gt;.&lt;span class='wlnet03'&gt;Forms&lt;/span&gt;.&lt;span class='wlnet03'&gt;MessageBox&lt;/span&gt;.&lt;span class='wlnet03'&gt;Show&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Running in Strategy Monitor&amp;quot;&lt;/span&gt; );
        }
    }
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>CreatePane</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;CreatePane&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;ChartPane CreatePane(int height, bool abovePricePane, 
bool displayGrid);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Creates a new pane on the chart and returns the new pane as a ChartPane 
object.&amp;nbsp; The &lt;b&gt;height&lt;/b&gt; parameter controls the height of the pane, which 
fluctuates as the chart is resized.&amp;nbsp; A value of 40 for &lt;b&gt;height&lt;/b&gt; 
creates a pane with a standard height.&amp;nbsp; You can create panes either above 
or below the price pane through the &lt;b&gt;abovePricePane&lt;/b&gt; parameter.&amp;nbsp; The
&lt;b&gt;displayGrid&lt;/b&gt; parameter controls whether the pane will display grid lines.&amp;nbsp; 
You can plot indicators in the pane using PlotSeries and the various other 
plotting methods.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;See the ChartPane object reference for more information about the 
  properties and methods of ChartPanes.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;//Create and plot Williams %R indicator&lt;/span&gt;
    &lt;span class='wlnet03'&gt;WilliamsR&lt;/span&gt; &lt;span class='wlnet03'&gt;wr&lt;/span&gt; = &lt;span class='wlnet03'&gt;WilliamsR&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;wrPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;40&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeriesOscillator&lt;/span&gt;( &lt;span class='wlnet03'&gt;wrPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;wr&lt;/span&gt;, &lt;span class='wlnet04'&gt;90&lt;/span&gt;, &lt;span class='wlnet04'&gt;10&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;LightGreen&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;LightCoral&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;CadetBlue&lt;/span&gt;, &lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt;);
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>DrawCircle</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;DrawCircle&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void DrawCircle(ChartPane pane, int radius, int bar, 
double value, Color color, Color fillColor, LineStyle style, int width, bool 
behindBars);&lt;br&gt;
void DrawCircle(ChartPane pane, int radius, int bar, double value, Color color, 
LineStyle style, int width, bool behindBars);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;protected void DrawCircle(ChartPane pane, int bar1, 
double value1, int bar2, double value2, Color color, Color fillColor, LineStyle 
style, int width, bool behindBars);&lt;br&gt;
protected void DrawCircle(ChartPane pane, int bar1, double value1, int bar2, 
double value2, Color color, LineStyle style, int width, bool behindBars);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;The DrawCircle method provides two ways to draw (and optionally fill) circles 
on a chart, in the specified &lt;b&gt;pane&lt;/b&gt;.&amp;nbsp; Each method accepts an optional
&lt;b&gt;fillColor&lt;/b&gt; parameter, that (if specified) causes the circle to be filled 
with a color.&amp;nbsp; The final parameter, &lt;b&gt;behindBars&lt;/b&gt;, determines whether 
the circle will be plotted behind or in front of the bars of the chart.&amp;nbsp; 
The circle will be drawn using the specified &lt;b&gt;color&lt;/b&gt;, &lt;b&gt;style&lt;/b&gt;, and &lt;b&gt;
width&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;The first method draws a circle with a &lt;b&gt;radius&lt;/b&gt; specified in pixels, at 
the coordinates specified by the &lt;b&gt;bar&lt;/b&gt; (X) and &lt;b&gt;value&lt;/b&gt; (Y) parameters.&lt;/p&gt;
&lt;p&gt;The second method draws a circle whose radius is a line specified by two 
points, &lt;b&gt;bar1&lt;/b&gt;/&lt;b&gt;value1&lt;/b&gt; and &lt;b&gt;bar2&lt;/b&gt;/&lt;b&gt;value2&lt;/b&gt;.&amp;nbsp; In this 
way, your circles can be bound to actual bars/prices on the chart.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Operator overload&lt;/span&gt;
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;200&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet01'&gt;// Circle any 200 day High&lt;/span&gt;
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet07'&gt;High&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] == &lt;span class='wlnet03'&gt;Highest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet04'&gt;200&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] )
            &lt;span class='wlnet06'&gt;DrawCircle&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet04'&gt;4&lt;/span&gt;, &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;High&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Green&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;DarkGreen&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
        &lt;span class='wlnet01'&gt;// Circle any 200 day Low&lt;/span&gt;
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet07'&gt;Low&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] == &lt;span class='wlnet03'&gt;Lowest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Low&lt;/span&gt;, &lt;span class='wlnet04'&gt;200&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] )
            &lt;span class='wlnet06'&gt;DrawCircle&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;Low&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;], &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Low&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;], &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;DarkRed&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet05'&gt;false&lt;/span&gt; );
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>DrawEllipse</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;DrawEllipse&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void DrawEllipse(ChartPane pane, int bar1, double 
value1, int bar2, double value2, Color color, Color fillColor, LineStyle style, 
int width, bool behindBars);&lt;br&gt;
void DrawEllipse(ChartPane pane, int bar1, double value1, int bar2, double 
value2, Color color, LineStyle style, int width, bool behindBars);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Plots an ellipse on the &lt;b&gt;pane&lt;/b&gt; using the specified &lt;b&gt;color&lt;/b&gt;, &lt;b&gt;
style&lt;/b&gt; and &lt;b&gt;width&lt;/b&gt;.&amp;nbsp; If the version using &lt;b&gt;fillColor&lt;/b&gt; is 
called, also fills the ellipse using the specified &lt;b&gt;fillColor&lt;/b&gt;.&amp;nbsp; The 
ellipse is bound by a rectangle defined by the points &lt;b&gt;bar1&lt;/b&gt;, &lt;b&gt;value1&lt;/b&gt; 
and &lt;b&gt;bar2&lt;/b&gt;, &lt;b&gt;value2&lt;/b&gt;.&amp;nbsp; The &lt;b&gt;behindBars&lt;/b&gt; parameter controls 
whether the ellipse is plotted behind, or in front of the bars of the chart.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;Bar&lt;/span&gt; = (&lt;span class='wlnet05'&gt;int&lt;/span&gt;)&lt;span class='wlnet03'&gt;TroughBar&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;Low&lt;/span&gt;, &lt;span class='wlnet04'&gt;5&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Indicators&lt;/span&gt;.&lt;span class='wlnet03'&gt;PeakTroughMode&lt;/span&gt;.&lt;span class='wlnet03'&gt;Percent&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;Price&lt;/span&gt; = &lt;span class='wlnet07'&gt;Low&lt;/span&gt;[&lt;span class='wlnet03'&gt;Bar&lt;/span&gt;];
    &lt;span class='wlnet06'&gt;DrawEllipse&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;Bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;4&lt;/span&gt;, &lt;span class='wlnet03'&gt;Price&lt;/span&gt;*&lt;span class='wlnet04'&gt;1.02&lt;/span&gt;, &lt;span class='wlnet03'&gt;Bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;4&lt;/span&gt;, &lt;span class='wlnet03'&gt;Price&lt;/span&gt;*&lt;span class='wlnet04'&gt;0.98&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;LightCoral&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet05'&gt;false&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;Bar&lt;/span&gt; = (&lt;span class='wlnet05'&gt;int&lt;/span&gt;)&lt;span class='wlnet03'&gt;PeakBar&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet04'&gt;5&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Indicators&lt;/span&gt;.&lt;span class='wlnet03'&gt;PeakTroughMode&lt;/span&gt;.&lt;span class='wlnet03'&gt;Percent&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;Price&lt;/span&gt; = &lt;span class='wlnet07'&gt;High&lt;/span&gt;[&lt;span class='wlnet03'&gt;Bar&lt;/span&gt;];
    &lt;span class='wlnet06'&gt;DrawEllipse&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;Bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;4&lt;/span&gt;, &lt;span class='wlnet03'&gt;Price&lt;/span&gt;*&lt;span class='wlnet04'&gt;1.02&lt;/span&gt;, &lt;span class='wlnet03'&gt;Bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;4&lt;/span&gt;, &lt;span class='wlnet03'&gt;Price&lt;/span&gt;*&lt;span class='wlnet04'&gt;0.98&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Green&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;LightGreen&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>DrawHorzLine</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;DrawHorzLine&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void DrawHorzLine(ChartPane pane, double value, Color 
color, LineStyle style, int width);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Draws a horizontal line on a &lt;b&gt;pane&lt;/b&gt;, and plots an accompanying label 
marking the value in the right margin of the chart.&amp;nbsp; The line is drawn 
using the specified &lt;b&gt;color&lt;/b&gt;, &lt;b&gt;style&lt;/b&gt; and &lt;b&gt;width&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Plot RSI and draw horizontal lines at 30/70 levels&lt;/span&gt;
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;rsiPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;50&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;false&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;rsiPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;RSI&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;(&lt;span class='wlnet07'&gt;Close&lt;/span&gt;,&lt;span class='wlnet04'&gt;20&lt;/span&gt;), &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Brown&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;DrawHorzLine&lt;/span&gt;( &lt;span class='wlnet03'&gt;rsiPane&lt;/span&gt;, &lt;span class='wlnet04'&gt;30&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Green&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;DrawHorzLine&lt;/span&gt;( &lt;span class='wlnet03'&gt;rsiPane&lt;/span&gt;, &lt;span class='wlnet04'&gt;70&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>DrawImage</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;DrawImage&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void DrawImage(ChartPane pane, Image image, int bar, 
double value, bool behindBars);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Draws the passed &lt;b&gt;image&lt;/b&gt; object onto the specified &lt;b&gt;pane&lt;/b&gt;.&amp;nbsp; 
The &lt;b&gt;image&lt;/b&gt; is centered on the specified &lt;b&gt;bar&lt;/b&gt; and &lt;b&gt;value&lt;/b&gt; in the
&lt;b&gt;pane&lt;/b&gt;.&amp;nbsp; The &lt;b&gt;behindBars&lt;/b&gt; parameter controls whether the image is 
rendered behind or in front of the chart bars and plotted indicators.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet03'&gt;Image&lt;/span&gt; &lt;span class='wlnet03'&gt;image&lt;/span&gt; = &lt;span class='wlnet03'&gt;Image&lt;/span&gt;.&lt;span class='wlnet03'&gt;FromFile&lt;/span&gt;(&lt;span class='wlnet10'&gt;&amp;quot;C:\\temp\\image.jpg&amp;quot;&lt;/span&gt;);
    &lt;span class='wlnet06'&gt;DrawImage&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;image&lt;/span&gt;, &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;50&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;50&lt;/span&gt;], &lt;span class='wlnet05'&gt;false&lt;/span&gt; );
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>DrawLabel</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;DrawLabel&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void DrawLabel(ChartPane pane, string text, Color 
color);&lt;br&gt;
void DrawLabel(ChartPane pane, string text);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Draw a &lt;b&gt;text&lt;/b&gt; label on the chart, on the specified &lt;b&gt;pane&lt;/b&gt;.&amp;nbsp; 
Optionally, you can provide a &lt;b&gt;color&lt;/b&gt; for the font of the &lt;b&gt;text&lt;/b&gt;.&amp;nbsp; 
The label will be displayed in the upper left corner of the &lt;b&gt;pane&lt;/b&gt; (below 
the security name if drawn on the price pane.)&amp;nbsp; Calling DrawLabel multiple 
times will cause the labels to be stacked one on top of another.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;0&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet01'&gt;// Check for negative price values&lt;/span&gt;
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( ( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;lt; &lt;span class='wlnet04'&gt;0&lt;/span&gt; ) | ( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;lt; &lt;span class='wlnet04'&gt;0&lt;/span&gt; ) |
        ( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;lt; &lt;span class='wlnet04'&gt;0&lt;/span&gt; ) | ( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;lt; &lt;span class='wlnet04'&gt;0&lt;/span&gt; ) )
            &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;(&lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Date&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;].&lt;span class='wlnet06'&gt;ToString&lt;/span&gt;());
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>DrawLine</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;DrawLine&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void DrawLine(ChartPane pane, int bar1, double value1, 
int bar2, double value2, Color color, LineStyle style, int width);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Draws a line on the specified &lt;b&gt;pane&lt;/b&gt;, between the two points identified 
by &lt;b&gt;bar1&lt;/b&gt;, &lt;b&gt;value1&lt;/b&gt; and &lt;b&gt;bar2&lt;/b&gt;, &lt;b&gt;value2&lt;/b&gt;.&amp;nbsp; The line is 
drawn using the specified &lt;b&gt;color&lt;/b&gt;, &lt;b&gt;style&lt;/b&gt; and &lt;b&gt;width&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Draw a line between the last 2 peaks&lt;/span&gt;
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;Bar&lt;/span&gt; = &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;;
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;p1&lt;/span&gt; = &lt;span class='wlnet03'&gt;Peak&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;( &lt;span class='wlnet03'&gt;Bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet04'&gt;4&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Indicators&lt;/span&gt;.&lt;span class='wlnet03'&gt;PeakTroughMode&lt;/span&gt;.&lt;span class='wlnet03'&gt;Percent&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;pb1&lt;/span&gt; = (&lt;span class='wlnet05'&gt;int&lt;/span&gt;) &lt;span class='wlnet03'&gt;PeakBar&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;( &lt;span class='wlnet03'&gt;Bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet04'&gt;4&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Indicators&lt;/span&gt;.&lt;span class='wlnet03'&gt;PeakTroughMode&lt;/span&gt;.&lt;span class='wlnet03'&gt;Percent&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;p2&lt;/span&gt; = &lt;span class='wlnet03'&gt;Peak&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;( &lt;span class='wlnet03'&gt;pb1&lt;/span&gt;, &lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet04'&gt;4&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Indicators&lt;/span&gt;.&lt;span class='wlnet03'&gt;PeakTroughMode&lt;/span&gt;.&lt;span class='wlnet03'&gt;Percent&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;pb2&lt;/span&gt; = (&lt;span class='wlnet05'&gt;int&lt;/span&gt;) &lt;span class='wlnet03'&gt;PeakBar&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;( &lt;span class='wlnet03'&gt;pb1&lt;/span&gt;, &lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet04'&gt;4&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Indicators&lt;/span&gt;.&lt;span class='wlnet03'&gt;PeakTroughMode&lt;/span&gt;.&lt;span class='wlnet03'&gt;Percent&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;DrawLine&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;pb1&lt;/span&gt;, &lt;span class='wlnet03'&gt;p1&lt;/span&gt;, &lt;span class='wlnet03'&gt;pb2&lt;/span&gt;, &lt;span class='wlnet03'&gt;p2&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Dotted&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>DrawPolygon</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;DrawPolygon&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void DrawPolygon(ChartPane pane, Color color, Color 
fillColor, LineStyle style, int width, bool behindBars, params double[] coords);&lt;br&gt;
void DrawPolygon(ChartPane pane, Color color, LineStyle style, int width, bool 
behindBars, params double[] coords);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;The DrawPolygon allows you to draw a variety of shapes on the chart, 
optionally filled if you call the version that accepts a &lt;b&gt;fillColor&lt;/b&gt; 
parameter.&amp;nbsp; The shape will be drawn on the specified &lt;b&gt;pane&lt;/b&gt;, using the
&lt;b&gt;color&lt;/b&gt;, &lt;b&gt;style&lt;/b&gt;, and &lt;b&gt;width&lt;/b&gt; that you pass as parameters.&amp;nbsp; 
The &lt;b&gt;behindBars&lt;/b&gt; parameter controls whether the shape will be drawn in 
front of or behind the bars of the chart.&lt;/p&gt;
&lt;p&gt;The actual shape that will be drawn is defined in the &lt;b&gt;coords&lt;/b&gt; 
parameter.&amp;nbsp; You should pass a series of pairs of doubles, bar/value, that 
define the points of the polygon.&amp;nbsp; For example, to draw a triangle, you 
would pass a total of 6 values, logically representing bar1, value1, bar2, 
value2, bar3, value3.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Draw a rectangle outlining recent 10% peak and trough&lt;/span&gt;
     
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;Bar&lt;/span&gt; = &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;;
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;b1&lt;/span&gt; = (&lt;span class='wlnet05'&gt;int&lt;/span&gt;)&lt;span class='wlnet03'&gt;PeakBar&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;( &lt;span class='wlnet03'&gt;Bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;10&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Indicators&lt;/span&gt;.&lt;span class='wlnet03'&gt;PeakTroughMode&lt;/span&gt;.&lt;span class='wlnet03'&gt;Percent&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;b2&lt;/span&gt; = (&lt;span class='wlnet05'&gt;int&lt;/span&gt;)&lt;span class='wlnet03'&gt;TroughBar&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;( &lt;span class='wlnet03'&gt;Bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;10&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Indicators&lt;/span&gt;.&lt;span class='wlnet03'&gt;PeakTroughMode&lt;/span&gt;.&lt;span class='wlnet03'&gt;Percent&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;p1&lt;/span&gt; = &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;b1&lt;/span&gt;];
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;p2&lt;/span&gt; = &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;b2&lt;/span&gt;];
    &lt;span class='wlnet05'&gt;double&lt;/span&gt;[] &lt;span class='wlnet03'&gt;rectangle&lt;/span&gt; = { &lt;span class='wlnet03'&gt;b1&lt;/span&gt;, &lt;span class='wlnet03'&gt;p1&lt;/span&gt;, &lt;span class='wlnet03'&gt;b1&lt;/span&gt;, &lt;span class='wlnet03'&gt;p2&lt;/span&gt;, &lt;span class='wlnet03'&gt;b2&lt;/span&gt;, &lt;span class='wlnet03'&gt;p2&lt;/span&gt;, &lt;span class='wlnet03'&gt;b2&lt;/span&gt;, &lt;span class='wlnet03'&gt;p1&lt;/span&gt; }; &lt;span class='wlnet01'&gt;// counter-clockwise&lt;/span&gt;
    
    &lt;span class='wlnet06'&gt;DrawPolygon&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;LightSteelBlue&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;2&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet03'&gt;rectangle&lt;/span&gt; );
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>DrawText</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;DrawText&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void DrawText(ChartPane pane, string text, int x, int 
y, Color color, Color backgroundColor, Font font);&lt;br&gt;
void DrawText(ChartPane pane, string text, int x, int y, Color color, Color 
backgroundColor);&lt;br&gt;
void DrawText(ChartPane pane, string text, int x, int y, Color color);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Draws the specified text in the chart &lt;b&gt;pane&lt;/b&gt;, at the &lt;b&gt;x&lt;/b&gt;, &lt;b&gt;y&lt;/b&gt; 
pixel coordinates.&amp;nbsp; The coordinates are expressed as the number of pixels 
from the upper left corner of the &lt;b&gt;pane&lt;/b&gt;.&amp;nbsp; The &lt;b&gt;text&lt;/b&gt; is drawn 
using the specified &lt;b&gt;color&lt;/b&gt;.&amp;nbsp; If you use the version that accepts a &lt;b&gt;
backgroundColor&lt;/b&gt; parameter, the &lt;b&gt;text&lt;/b&gt; is drawn over a rectangle filled 
with that color.&lt;/p&gt;
&lt;p&gt;Use the version of the method that accept a &lt;b&gt;Font&lt;/b&gt; parameter to draw the
&lt;b&gt;text&lt;/b&gt; using a custom font.&amp;nbsp; If you use this version and do not want a 
colored background, specify Color.Empty for the &lt;b&gt;backgroundColor&lt;/b&gt; 
parameter.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;To draw text on the price pane, use PricePane for the &lt;b&gt;pane&lt;/b&gt; 
  parameter. &lt;/li&gt;
  &lt;li&gt;To draw text on the volume pane, use VolumePane for the &lt;b&gt;pane&lt;/b&gt; 
  parameter.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Prints RSI value over the PricePane&lt;/span&gt;
    &lt;span class='wlnet06'&gt;DrawText&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;14-period RSI is &amp;quot;&lt;/span&gt; + ( &lt;span class='wlnet03'&gt;RSI&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;14&lt;/span&gt; )[&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] ), &lt;span class='wlnet04'&gt;0&lt;/span&gt;, &lt;span class='wlnet04'&gt;40&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Black&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Empty&lt;/span&gt; );
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>EnableTradeNotes</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;EnableTradeNotes&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000ff"&gt;void EnableTradeNotes(bool Text, bool Arrow, bool Circle);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Controls the visibility of a trade tooltip, buy/sell arrows and intrabar entry/exit points on the chart.&lt;br&gt;
&lt;p&gt;The &lt;b&gt;Text&lt;/b&gt; parameter controls whether or not a trade tooltip and a line to connect a trade's entry point to its associated exit point (if applicable) are drawn on the chart.
&lt;b&gt;Arrow&lt;/b&gt; controls whether or not buy and sell arrows appear above/below the bar where trades are opened and closed. &lt;b&gt;Circle &lt;/b&gt; controls whether the circles are drawn at the exact spot where trades occur on the bar.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Disabling arrows will also make trade notes disappear even if &lt;b&gt;Text&lt;/b&gt; is true.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
&lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;1&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
            {
                &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
                    &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt; );
                &lt;span class='wlnet05'&gt;else&lt;/span&gt;
                    &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; );
            }
            
            &lt;span class='wlnet01'&gt;/* Turn off those pesky notes if there &lt;/span&gt;
            &lt;span class='wlnet03'&gt;are&lt;/span&gt; &lt;span class='wlnet03'&gt;many&lt;/span&gt; &lt;span class='wlnet03'&gt;trades&lt;/span&gt;, &lt;span class='wlnet03'&gt;show&lt;/span&gt; &lt;span class='wlnet03'&gt;arrows&lt;/span&gt; &lt;span class='wlnet03'&gt;only&lt;/span&gt; *&lt;span class='wlnet01'&gt;/&lt;/span&gt;
            
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet07'&gt;Positions&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; &amp;gt; &lt;span class='wlnet04'&gt;20&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;EnableTradeNotes&lt;/span&gt;( &lt;span class='wlnet05'&gt;false&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;false&lt;/span&gt; );
        }
    }
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>HidePaneLines</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;HidePaneLines&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void HidePaneLines();&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Causes the lines separating the panes in a chart to not be displayed.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet06'&gt;HidePaneLines&lt;/span&gt;();
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>HideVolume</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;HideVolume&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void HidePaneLines();&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Renders the volume pane invisible, providing more room to the Prices Pane in the chart.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Some cosmetics&lt;/span&gt;
    &lt;span class='wlnet06'&gt;HideVolume&lt;/span&gt;(); 
    &lt;span class='wlnet06'&gt;HidePaneLines&lt;/span&gt;();
    &lt;span class='wlnet01'&gt;//Plot Microsoft data on the same pane as the symbol being charted&lt;/span&gt;
    &lt;span class='wlnet07'&gt;Bars&lt;/span&gt; &lt;span class='wlnet03'&gt;msft&lt;/span&gt; = &lt;span class='wlnet06'&gt;GetExternalSymbol&lt;/span&gt;(&lt;span class='wlnet10'&gt;&amp;quot;MSFT&amp;quot;&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;);
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;msftPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;100&lt;/span&gt;, &lt;span class='wlnet05'&gt;false&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;);
    &lt;span class='wlnet06'&gt;PlotSymbol&lt;/span&gt;( &lt;span class='wlnet03'&gt;msftPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;msft&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Silver&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Silver&lt;/span&gt;);
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>PadBars</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;PadBars&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void PadBars(int numberOfBars);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Pads the right of the chart with empty space.&amp;nbsp; The amount of space 
padded is based on the number specified in the &lt;b&gt;numberOfBars&lt;/b&gt; parameter.&amp;nbsp; 
New &amp;quot;pseudo-bars&amp;quot; are not created, but the current bar spacing selected and the
&lt;b&gt;numberOfBars&lt;/b&gt; determines how much empty space is padded to the right of 
the chart.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet06'&gt;PadBars&lt;/span&gt;( &lt;span class='wlnet04'&gt;10&lt;/span&gt; );
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>PlotFundamentalItems</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;PlotFundamentalItems&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void PlotFundamentalItems(ChartPane pane, string 
symbol, string itemName, Color color, LineStyle style, int width);&lt;br&gt;
void PlotFundamentalItems(ChartPane pane, string itemName, Color color, 
LineStyle style, int width)&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Plots historical fundamental data items onto the chart, on the specified &lt;b&gt;
pane&lt;/b&gt;.&amp;nbsp; The desired items to plot are specified by the &lt;b&gt;itemName&lt;/b&gt; 
parameter.&amp;nbsp; If the desired items are symbol-specific, then use the version 
of the method that accepts a &lt;b&gt;symbol&lt;/b&gt; parameter, and pass the stock symbol 
whose items you want to plot.&amp;nbsp; The fundamental data is plotted in a special 
filled style, where the demarcation of each item is outlined in the specified &lt;b&gt;
color&lt;/b&gt;.&amp;nbsp; When a new fundamental data item occurs, it can be clearly seen 
because this range is outlined using the &lt;b&gt;color&lt;/b&gt;.&amp;nbsp; The interior of the 
plotted area is filled with semi-transparent version of the &lt;b&gt;color&lt;/b&gt; 
specified.&amp;nbsp; Finally, plotted ranges are outlined using the indicated &lt;b&gt;
width&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;fPane1&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;25&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;false&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;fPane2&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;25&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;false&lt;/span&gt; );

    &lt;span class='wlnet01'&gt;// Plot IBM dividends on the chart of another stock&lt;/span&gt;
    
    &lt;span class='wlnet05'&gt;if&lt;/span&gt;( (&lt;span class='wlnet05'&gt;string&lt;/span&gt;)&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Symbol&lt;/span&gt; != &lt;span class='wlnet10'&gt;&amp;quot;IBM&amp;quot;&lt;/span&gt; )
    {
        &lt;span class='wlnet06'&gt;PlotFundamentalItems&lt;/span&gt;( &lt;span class='wlnet03'&gt;fPane1&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;IBM&amp;quot;&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;dividend&amp;quot;&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; ); 
    } &lt;span class='wlnet05'&gt;else&lt;/span&gt;
    &lt;span class='wlnet06'&gt;Abort&lt;/span&gt;();
    
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;divIBM&lt;/span&gt; = &lt;span class='wlnet06'&gt;FundamentalDataSeries&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;IBM&amp;quot;&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;dividend&amp;quot;&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;fPane2&lt;/span&gt;, &lt;span class='wlnet03'&gt;divIBM&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>PlotSeries</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;PlotSeries&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void PlotSeries(ChartPane pane, DataSeries series, 
Color color, LineStyle style, int width);&lt;/font&gt;&lt;br&gt;
&lt;font color="#0000FF"&gt;void PlotSeries(ChartPane pane, DataSeries series, 
Color color, LineStyle style, int width, string label);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Plots the specified DataSeries (&lt;b&gt;series&lt;/b&gt;) in the specified &lt;b&gt;pane&lt;/b&gt; 
of the chart.&amp;nbsp; The cosmetic appearance of the plotted DataSeries is 
controlled by the &lt;b&gt;color&lt;/b&gt;, &lt;b&gt;style&lt;/b&gt;, and &lt;b&gt;width&lt;/b&gt; parameters.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;When using the Histogram LineStyle, the &lt;b&gt;width&lt;/b&gt; parameter determines 
  the maximum width that each histogram bar is allowed to grow to.&amp;nbsp; So, 
  specify large values (such as 20) to allow the histogram bars to grow as you 
  increase bar spacing.&lt;/li&gt;
  &lt;li&gt;By default, the Description of the DataSeries is drawn as a label in the upper left corner of the pane.&amp;nbsp; You can set the DataSeries' Description property to change this label, or use the overloaded version of the method.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Plots KAMA series of Average prices&lt;/span&gt;
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;KAMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( ((&lt;span class='wlnet07'&gt;High&lt;/span&gt;+&lt;span class='wlnet07'&gt;Low&lt;/span&gt;)&lt;span class='wlnet01'&gt;/2), 20 ), Color.Chocolate, WealthLab.LineStyle.Solid, 2 );&lt;/span&gt;
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>PlotSeriesDualFillBand</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;PlotSeriesDualFillBand&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void PlotSeriesDualFillBand(ChartPane pane, DataSeries 
series1, DataSeries series2, Color fillColor1, Color fillColor2, Color color, 
LineStyle style, int width);&lt;br&gt;
void PlotSeriesDualFillBand(ChartPane pane, DataSeries series1, DataSeries 
series2, Brush brush1, Brush brush2, Color color, LineStyle style, int width);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Plots and fills bands composed of two DataSeries (&lt;b&gt;series1&lt;/b&gt; and &lt;b&gt;
series2&lt;/b&gt;) that periodically cross over each other, on the specified &lt;b&gt;pane&lt;/b&gt;.&amp;nbsp; 
Each individual DataSeries is plotted using the specified &lt;b&gt;color&lt;/b&gt;, &lt;b&gt;style&lt;/b&gt;, 
and &lt;b&gt;width&lt;/b&gt;.&amp;nbsp; The band between each DataSeries is filled with 
alternating colors (or brushes).&amp;nbsp; &lt;b&gt;fillColor1&lt;/b&gt; (or &lt;b&gt;brush1&lt;/b&gt;) is 
used when &lt;b&gt;series1&lt;/b&gt; is above &lt;b&gt;series2&lt;/b&gt;, and &lt;b&gt;fillColor2&lt;/b&gt; (or &lt;b&gt;
brush2&lt;/b&gt;) when &lt;b&gt;series2&lt;/b&gt; is above &lt;b&gt;series1&lt;/b&gt;.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Use &lt;b&gt;fillColors&lt;/b&gt; and &lt;b&gt;brushes&lt;/b&gt; that are semi-transparent, so 
  that the chart bars can show up behind the filled bands.&lt;/li&gt;
  &lt;li&gt;Histogram &lt;b&gt;style&lt;/b&gt; does not make sense for filled bands, this &lt;b&gt;style&lt;/b&gt; 
  is treated as Solid by PlotSeriesDualFillBand.&lt;/li&gt;
  &lt;li&gt;By default, the Description of the DataSeries is drawn as a label in the 
  upper left corner of the pane.&amp;nbsp; You can set the DataSeries' Description 
  property to change this label.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Plots and fills bands composed of Average Price and KAMA series that cross over each other. &lt;/span&gt;
    &lt;span class='wlnet06'&gt;PlotSeriesDualFillBand&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;KAMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;10&lt;/span&gt; ), ((&lt;span class='wlnet07'&gt;High&lt;/span&gt;+&lt;span class='wlnet07'&gt;Low&lt;/span&gt;)&lt;span class='wlnet01'&gt;/2), Color.Red, Color.Blue, Color.Black, LineStyle.Solid, 1 );&lt;/span&gt;
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>PlotSeriesFillBand</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;PlotSeriesFillBand&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void PlotSeriesFillBand(ChartPane pane, DataSeries 
upper, DataSeries lower, Color color, Color fillColor, LineStyle style, int 
width);&lt;br&gt;
void PlotSeriesFillBand(ChartPane pane, DataSeries upper, DataSeries lower, 
Color color, Brush fillBrush, LineStyle style, int width);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Plots and fills an &lt;b&gt;upper&lt;/b&gt; and &lt;b&gt;lower&lt;/b&gt; band of two DataSeries, in 
the specified chart &lt;b&gt;pane&lt;/b&gt;.&amp;nbsp; The &lt;b&gt;upper&lt;/b&gt; and &lt;b&gt;lower&lt;/b&gt; bands 
are plotted using the specified &lt;b&gt;color&lt;/b&gt;, &lt;b&gt;style&lt;/b&gt; and &lt;b&gt;width&lt;/b&gt;.&amp;nbsp; 
The interior of the band is filled using the specified &lt;b&gt;fillColor&lt;/b&gt;, or the 
specified &lt;b&gt;fillBrush&lt;/b&gt;.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Use &lt;b&gt;fillColors&lt;/b&gt; and &lt;b&gt;fillBrushes&lt;/b&gt; that are semi-transparent, so 
  that the chart bars can show up behind the filled band.&lt;/li&gt;
  &lt;li&gt;Histogram &lt;b&gt;style&lt;/b&gt; does not make sense for filled bands, this &lt;b&gt;style&lt;/b&gt; 
  is treated as Solid by PlotSeriesFillBand.&lt;/li&gt;
  &lt;li&gt;By default, the Description of the DataSeries is drawn as a label in the 
  upper left corner of the pane.&amp;nbsp; You can set the DataSeries' Description 
  property to change this label.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet03'&gt;BBandLower&lt;/span&gt; &lt;span class='wlnet03'&gt;bbL&lt;/span&gt; = &lt;span class='wlnet03'&gt;BBandLower&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt;, &lt;span class='wlnet04'&gt;2&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;BBandUpper&lt;/span&gt; &lt;span class='wlnet03'&gt;bbU&lt;/span&gt; = &lt;span class='wlnet03'&gt;BBandUpper&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt;, &lt;span class='wlnet04'&gt;2&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;SolidBrush&lt;/span&gt; &lt;span class='wlnet03'&gt;shadowBrush&lt;/span&gt; = &lt;span class='wlnet05'&gt;new&lt;/span&gt; &lt;span class='wlnet03'&gt;SolidBrush&lt;/span&gt;(&lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;FromArgb&lt;/span&gt;(&lt;span class='wlnet04'&gt;50&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Violet&lt;/span&gt;));
    &lt;span class='wlnet06'&gt;PlotSeriesFillBand&lt;/span&gt;(&lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;bbU&lt;/span&gt;, &lt;span class='wlnet03'&gt;bbL&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Silver&lt;/span&gt;, &lt;span class='wlnet03'&gt;shadowBrush&lt;/span&gt;, &lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;2&lt;/span&gt;);
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>PlotSeriesOscillator</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;PlotSeriesOscillator&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void PlotSeriesOscillator(ChartPane pane, DataSeries 
source, double overbought, double oversold, Color overboughtColor, Color 
oversoldColor, Color color, LineStyle style, int width);&lt;br&gt;
void PlotSeriesOscillator(ChartPane pane, DataSeries source, double overbought, 
double oversold, Brush overboughtBrush, Brush oversoldBrush, Color color, 
LineStyle style, int width);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Plots the specified DataSeries (&lt;b&gt;source&lt;/b&gt;) in the specified &lt;b&gt;pane&lt;/b&gt;, 
using the provided &lt;b&gt;color&lt;/b&gt;, &lt;b&gt;style&lt;/b&gt; and &lt;b&gt;width&lt;/b&gt;.&amp;nbsp; 
Additionally, it allows you to define &lt;b&gt;overbought&lt;/b&gt; and &lt;b&gt;oversold&lt;/b&gt; 
levels.&amp;nbsp; When the &lt;b&gt;source&lt;/b&gt; moves below the &lt;b&gt;oversold&lt;/b&gt; area, this 
area of the chart is filled using the &lt;b&gt;oversoldColor&lt;/b&gt; (or &lt;b&gt;oversoldBrush&lt;/b&gt;).&amp;nbsp; 
Conversely, when the &lt;b&gt;source&lt;/b&gt; moves above the &lt;b&gt;overbought&lt;/b&gt; area, that 
area of the chart is filled with the &lt;b&gt;overboughtColor&lt;/b&gt; (or &lt;b&gt;
overboughtBrush&lt;/b&gt;).&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;By default, the Description of the DataSeries is drawn as a label in the 
  upper left corner of the pane.&amp;nbsp; You can set the DataSeries' Description 
  property to change this label.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;//Create and plot RSI indicator&lt;/span&gt;
    &lt;span class='wlnet03'&gt;RSI&lt;/span&gt; &lt;span class='wlnet03'&gt;rsi&lt;/span&gt; = &lt;span class='wlnet03'&gt;RSI&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;14&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;rsiPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;40&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeriesOscillator&lt;/span&gt;( &lt;span class='wlnet03'&gt;rsiPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;rsi&lt;/span&gt;, &lt;span class='wlnet04'&gt;70&lt;/span&gt;, &lt;span class='wlnet04'&gt;30&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Green&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;CadetBlue&lt;/span&gt;, &lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>PlotStops</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;PlotStops&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void PlotStops();&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Call &lt;b&gt;PlotStops&lt;/b&gt; to cause stop and limit orders to be plotted on the 
chart.&amp;nbsp; Stop and limit orders will appear as small colored dots on the 
chart, drawn at the appropriate bar and price levels.&amp;nbsp; The stop/limit plots 
are color coded by order type:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Buy = &lt;font color="#0000FF"&gt;blue&lt;/font&gt;&lt;/li&gt;
  &lt;li&gt;Sell = &lt;font color="#FF0000"&gt;red&lt;/font&gt;&lt;/li&gt;
  &lt;li&gt;Short = &lt;font color="#FF00FF"&gt;fuchsia&lt;/font&gt;&lt;/li&gt;
  &lt;li&gt;Cover = &lt;font color="#008000"&gt;green&lt;/font&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Displays Stop and Limit orders&lt;/span&gt;
    &lt;span class='wlnet06'&gt;PlotStops&lt;/span&gt;();
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;SellAtLimit&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet03'&gt;Highest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] ) == &lt;span class='wlnet05'&gt;null&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;SellAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet03'&gt;Lowest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Low&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;BuyAtLimit&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;Low&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]-&lt;span class='wlnet03'&gt;ATR&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;(&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;,&lt;span class='wlnet04'&gt;5&lt;/span&gt;)[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] ) == &lt;span class='wlnet05'&gt;null&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;BuyAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;High&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]+&lt;span class='wlnet03'&gt;ATR&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;(&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;,&lt;span class='wlnet04'&gt;5&lt;/span&gt;)[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>PlotSymbol</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;PlotSymbol&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void PlotSymbol(ChartPane pane, Bars bars, Color 
upColor, Color downColor);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Plots the Bars object specified in the &lt;b&gt;bars&lt;/b&gt; parameter onto the chart, 
in the indicated pane.&amp;nbsp; To superimpose another symbol onto the price pane, 
use the &lt;b&gt;PricePane&lt;/b&gt; property as the value of the &lt;b&gt;pane&lt;/b&gt; parameter.&amp;nbsp; 
The &lt;b&gt;pane&lt;/b&gt; that is selected is automatically rescaled to support the range 
of the plotted data.&amp;nbsp; The &lt;b&gt;upColor&lt;/b&gt; and &lt;b&gt;downColor&lt;/b&gt; parameters 
determine the colors that will be used to plot &amp;quot;up&amp;quot; bars (close greater than 
open) and &amp;quot;down&amp;quot; bars (close less than or equal to open).&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;The Bars object that is being plotted must be synchronized to the symbol being charted, or &lt;b&gt;PlotSymbol&lt;/b&gt; will fail.&lt;/li&gt;
  &lt;li&gt;Since it's not possible to align the x-axis for multiple charts, &lt;b&gt;PlotSymbol&lt;/b&gt; will not work with the Trending Chart Styles.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>    &lt;span class='wlnet01'&gt;// Some cosmetics&lt;/span&gt;
    &lt;span class='wlnet06'&gt;HideVolume&lt;/span&gt;(); 
    &lt;span class='wlnet06'&gt;HidePaneLines&lt;/span&gt;();
    
    &lt;span class='wlnet01'&gt;//Plot Microsoft data in a new pane&lt;/span&gt;
    &lt;span class='wlnet07'&gt;Bars&lt;/span&gt; &lt;span class='wlnet03'&gt;msft&lt;/span&gt; = &lt;span class='wlnet06'&gt;GetExternalSymbol&lt;/span&gt;(&lt;span class='wlnet10'&gt;&amp;quot;MSFT&amp;quot;&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;);
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;msftPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;100&lt;/span&gt;, &lt;span class='wlnet05'&gt;false&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;);
    &lt;span class='wlnet06'&gt;PlotSymbol&lt;/span&gt;( &lt;span class='wlnet03'&gt;msftPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;msft&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Silver&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Silver&lt;/span&gt;);

}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>PlotSyntheticSymbol</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;PlotSyntheticSymbol&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void PlotSyntheticSymbol(ChartPane pane, string symbol, 
DataSeries open, DataSeries high, DataSeries low, DataSeries close, DataSeries 
volume, Color upBarColor, Color downBarColor);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Allows you to plot a synthetic symbol on the chart, in the specified &lt;b&gt;pane&lt;/b&gt;.&amp;nbsp; 
A synthetic symbol is composed of a group of DataSeries that represent the 
symbol's &lt;b&gt;open&lt;/b&gt;, &lt;b&gt;high&lt;/b&gt;, &lt;b&gt;low&lt;/b&gt;, &lt;b&gt;close&lt;/b&gt; and &lt;b&gt;volume&lt;/b&gt;.&amp;nbsp; 
The &lt;b&gt;symbol&lt;/b&gt; parameter indicates a string that represents the name that 
should be applied to the synthetic symbol, this is plotted as a label on the 
chart.&amp;nbsp; The &lt;b&gt;upBarColor&lt;/b&gt; and &lt;b&gt;downBarColor&lt;/b&gt; parameters determine 
the color to use when plotting up bars (close greater than open) and down bars 
(close less than or equal to open).&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;In order to plot a synthetic symbol, its constituent DataSeries must by 
  synchronized to the main chart data that is already being plotted.&amp;nbsp; If 
  this is not the case, call Synchronize on each of the underlying DataSeries to 
  synchronize them before plotting.&lt;/li&gt;
  &lt;li&gt;Since it's not possible to align the x-axis for multiple charts, &lt;b&gt;PlotSyntheticSymbol&lt;/b&gt; will not work with the Trending Chart Styles.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Plot candle which consists of average Open/High/Low/Close values&lt;/span&gt;
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;SMAPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;100&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;O&lt;/span&gt; = &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Open&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;H&lt;/span&gt; = &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;L&lt;/span&gt; = &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Low&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;C&lt;/span&gt; = &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSyntheticSymbol&lt;/span&gt;( &lt;span class='wlnet03'&gt;SMAPane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;SMACandle&amp;quot;&lt;/span&gt;, &lt;span class='wlnet03'&gt;O&lt;/span&gt;, &lt;span class='wlnet03'&gt;H&lt;/span&gt;, &lt;span class='wlnet03'&gt;L&lt;/span&gt;, &lt;span class='wlnet03'&gt;C&lt;/span&gt;, &lt;span class='wlnet05'&gt;null&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt; );
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>PricePane</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;PricePane Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;ChartPane PricePane&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the ChartPane where the Bars of the chart are plotted.&amp;nbsp; You can use this pane to plot other indicators, such as moving averages and Bollinger Bands, or as a parameter to many other WealthScript cosmetic chart methods such 
as AnnotateBar and DrawPolygon.&lt;/p&gt;
&lt;p&gt;&lt;h2&gt;Remarks&lt;/h2&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Even if the Strategy is operating in a context that is not charted (such as the Strategy Monitor), this property will &lt;b&gt;not&lt;/b&gt; return null.&lt;/li&gt;
&lt;li&gt;See the documentation on the ChartPane object for more information about its properties and methods.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example />
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>SetBackgroundColor</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;SetBackgroundColor&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;SetBackgroundColor(int bar, Color color);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Sets the &lt;b&gt;color&lt;/b&gt; that will be used to render the background of the chart 
at the individual &lt;b&gt;bar&lt;/b&gt;.&amp;nbsp; The background is colored from top to 
bottom, encompassing all panes on the chart.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Use SetPaneBackgroundColor to color the background of individual panes.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Plot the weekly MACD in our daily chart&lt;/span&gt;
    &lt;span class='wlnet06'&gt;SetScaleWeekly&lt;/span&gt;();
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;smaWeekly&lt;/span&gt; = &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;52&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;RestoreScale&lt;/span&gt;();
    &lt;span class='wlnet03'&gt;smaWeekly&lt;/span&gt; = &lt;span class='wlnet06'&gt;Synchronize&lt;/span&gt;( &lt;span class='wlnet03'&gt;smaWeekly&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;52&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;gt; &lt;span class='wlnet03'&gt;smaWeekly&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] )
        {
            &lt;span class='wlnet06'&gt;SetBackgroundColor&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;LightGreen&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet06'&gt;SetBackgroundColor&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;LightPink&lt;/span&gt; );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>SetBarColor</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;SetBarColor&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;SetBarColor(int bar, Color color);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Sets the &lt;b&gt;color&lt;/b&gt; that will be used to render the individual bar on the 
chart that is specified by the &lt;b&gt;bar&lt;/b&gt; parameter.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Color bars green when RSI &amp;lt; 20, otherwise&lt;/span&gt;
    &lt;span class='wlnet01'&gt;// color up days blue and down days red }&lt;/span&gt;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;hRSI&lt;/span&gt; = &lt;span class='wlnet03'&gt;RSI&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;14&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;50&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;hRSI&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;lt; &lt;span class='wlnet04'&gt;60&lt;/span&gt; )
            &lt;span class='wlnet06'&gt;SetBarColor&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Green&lt;/span&gt; );
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;gt; &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] )
        &lt;span class='wlnet06'&gt;SetBarColor&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt; );
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        &lt;span class='wlnet06'&gt;SetBarColor&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt; );
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>SetBarColors</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;SetBarColors&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void SetBarColors(Color colorUpBars, Color 
colorDownBars);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Changes that colors that will be used to plot the bars of the chart.&amp;nbsp; 
&amp;quot;Up&amp;quot; bars are defined as close greater than open, and these bars will be colored 
using &lt;b&gt;colorUpBars&lt;/b&gt;.&amp;nbsp; Bars where close is less than or equal to open 
will be colored using &lt;b&gt;colorDownBars&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet06'&gt;SetBarColors&lt;/span&gt;( &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Navy&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Maroon&lt;/span&gt; );
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>SetLogScale</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;SetLogScale&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void SetLogScale(ChartPane pane, bool logScale);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Turns semi-log scaling on or off for the specified &lt;b&gt;pane&lt;/b&gt;.&amp;nbsp; The &lt;b&gt;
logScale&lt;/b&gt; parameter indicates whether semi-logarithmic scaling should be 
applied to the &lt;b&gt;pane&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet06'&gt;SetLogScale&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>SetPaneBackgroundColor</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;SetPaneBackgroundColor&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void SetPaneBackgroundColor(ChartPane pane, int bar, 
Color color);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Changes the background color of the specified &lt;b&gt;pane&lt;/b&gt;, for the specified
&lt;b&gt;bar&lt;/b&gt;, to the &lt;b&gt;color&lt;/b&gt; indicated.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Plot RSI and CMO, color backgrounds to show overbought/oversold levels&lt;/span&gt;
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;RSIPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;30&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;CMOPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;30&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;RSIPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;RSI&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;14&lt;/span&gt; ), &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;DarkBlue&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;2&lt;/span&gt; ); 
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;CMOPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;CMO&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;14&lt;/span&gt; ), &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;2&lt;/span&gt; ); 
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;RSI&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;14&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;lt; &lt;span class='wlnet04'&gt;30&lt;/span&gt; )
            &lt;span class='wlnet06'&gt;SetPaneBackgroundColor&lt;/span&gt;( &lt;span class='wlnet03'&gt;RSIPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;LightGreen&lt;/span&gt; );
        &lt;span class='wlnet05'&gt;else&lt;/span&gt; &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;RSI&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;14&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;gt; &lt;span class='wlnet04'&gt;70&lt;/span&gt; )
            &lt;span class='wlnet06'&gt;SetPaneBackgroundColor&lt;/span&gt;( &lt;span class='wlnet03'&gt;RSIPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;LightPink&lt;/span&gt; );
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;CMO&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;14&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;lt; -&lt;span class='wlnet04'&gt;50&lt;/span&gt; )
            &lt;span class='wlnet06'&gt;SetPaneBackgroundColor&lt;/span&gt;( &lt;span class='wlnet03'&gt;CMOPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;LightGreen&lt;/span&gt; );
        &lt;span class='wlnet05'&gt;else&lt;/span&gt; &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;CMO&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;14&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;gt; &lt;span class='wlnet04'&gt;50&lt;/span&gt; )
            &lt;span class='wlnet06'&gt;SetPaneBackgroundColor&lt;/span&gt;( &lt;span class='wlnet03'&gt;CMOPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;LightPink&lt;/span&gt; );
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>SetPaneMinMax</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;SetPaneMinMax&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void SetPaneMinMax(ChartPane pane, double min, double 
max);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Allows you to set the scale of a particular &lt;b&gt;pane&lt;/b&gt; manually.&amp;nbsp; The 
minimum and maximum (&lt;b&gt;min&lt;/b&gt; and &lt;b&gt;max&lt;/b&gt;) values that you supply will be 
used to define the visible range of the pane.&amp;nbsp; The actual visible scale of 
the pane will still dynamically adjust if the chart or plotted indicators extend 
beyond the range that you specify.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Make sure a certain RSI range is always visible in the pane&lt;/span&gt;
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;RSIPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;60&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;RSIPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;RSI&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;14&lt;/span&gt; ), &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Navy&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;SetPaneMinMax&lt;/span&gt;( &lt;span class='wlnet03'&gt;RSIPane&lt;/span&gt;, &lt;span class='wlnet04'&gt;30&lt;/span&gt;, &lt;span class='wlnet04'&gt;70&lt;/span&gt; );
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>SetSeriesBarColor</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;SetSeriesBarColor&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void SetSeriesBarColor(int bar, DataSeries ds, Color 
color);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Allows you to specify &lt;b&gt;colors&lt;/b&gt; for individual &lt;b&gt;bars&lt;/b&gt; of a specific 
DataSeries (&lt;b&gt;ds&lt;/b&gt;) that is plotted on the chart.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Color Bars of the indicator based on oversold/overbought levels&lt;/span&gt;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;rsi&lt;/span&gt; = &lt;span class='wlnet03'&gt;RSI&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;14&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;rsiPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;60&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;rsiPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;rsi&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Gray&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;2&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;50&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;rsi&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;gt; &lt;span class='wlnet04'&gt;60&lt;/span&gt; )
            &lt;span class='wlnet06'&gt;SetSeriesBarColor&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;rsi&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt; );
        &lt;span class='wlnet05'&gt;else&lt;/span&gt; &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;rsi&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;lt; &lt;span class='wlnet04'&gt;40&lt;/span&gt; )
            &lt;span class='wlnet06'&gt;SetSeriesBarColor&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;rsi&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt; );
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>VolumePane</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;VolumePane Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;ChartPane VolumePane&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the ChartPane that the volume is being plotted in.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Even if the Strategy is operating in a context that is not charted (such as the Strategy Monitor), this property will &lt;b&gt;not&lt;/b&gt; return null.&lt;/li&gt;
  &lt;li&gt;See the documentation on the ChartPane object for more information about its properties and methods.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example />
        <EntryType>Property</EntryType>
      </QuickRefEntry>
    </Entries>
    <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Cosmetic Chart&lt;/h1&gt;
&lt;p&gt;The Cosmetic Chart category consists of methods you can use to plot shapes, 
images and various other annotations on the chart.&amp;nbsp; It also contains 
methods to control the colors of the bars and chart background.&lt;/p&gt;
&lt;/html&gt;
</Description>
  </QuickRefCategory>
  <QuickRefCategory>
    <Name>Data Access</Name>
    <CategoryType>Functional</CategoryType>
    <Entries>
      <QuickRefEntry>
        <Name>Bars</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Bars Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;Bars Bars&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the Bars object that the Strategy is currently operating on.&amp;nbsp; 
Initially, this is the symbol being charted in the chart.&amp;nbsp; But the Bars 
object can be changed via calls to SetContext, and the various SetScale methods 
to work in different time scales.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;See the Bars object reference for a listing of available properties and 
  methods on the Bars object.&lt;/li&gt;
&lt;/ul&gt;
&lt;/body&gt;
&lt;/html&gt;
</Description>
        <Example />
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>ClearExternalSymbols</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;ClearExternalSymbols&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;int ClearExternalSymbols();&lt;br&gt;
int ClearExternalSymbols(string symbol);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Clears any external (secondary) symbol data.  External symbols are obtained from calls to either 
GetExternalSymbol, SetContext, and from changing the data scale in the script.&amp;nbsp; 
When external symbol data is requested in a script, Wealth-Lab caches the symbol 
data so that it does not have to be loaded again if the same symbol is requested 
later.&amp;nbsp; This method allows you to clear this internal cache.&amp;nbsp;  The &lt;b&gt;
symbol&lt;/b&gt; parameter is optional.  If it is specified, only that specific 
external symbol will be cleared.  ClearExternalSymbols returns the number of symbols that were cleared from memory.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet07'&gt;Bars&lt;/span&gt; &lt;span class='wlnet03'&gt;msft&lt;/span&gt; = &lt;span class='wlnet06'&gt;GetExternalSymbol&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;MSFT&amp;quot;&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;msftPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;50&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSymbol&lt;/span&gt;( &lt;span class='wlnet03'&gt;msftPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;msft&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt; ( &lt;span class='wlnet10'&gt;&amp;quot;Cleared ext. symbols: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet06'&gt;ClearExternalSymbols&lt;/span&gt;() );
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Close</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Close Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;DataSeries Close&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns a DataSeries object that represents the closing prices of the Bars 
object that the Strategy is currently operating on.&amp;nbsp; You can also access 
the closing prices via the Bars.Close property.&amp;nbsp; Access individual closing 
prices via the square bracket syntax:&lt;/p&gt;
&lt;p&gt;&lt;font color="#008000"&gt;//Access the close of the last bar&lt;/font&gt;&lt;br&gt;
double lastClose = Close[Bars.Count - 1];&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;See the DataSeries object reference for a listing of available properties 
  and methods on the DataSeries object.&lt;/li&gt;
&lt;/ul&gt;
&lt;/body&gt;
&lt;/html&gt;
</Description>
        <Example>    &lt;span class='wlnet01'&gt;//Access closing price of the last bar&lt;/span&gt;
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;lastClose&lt;/span&gt; = &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;];
    &lt;span class='wlnet01'&gt;// The string is output with 2 digits&lt;/span&gt;
    &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Last close: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet05'&gt;String&lt;/span&gt;.&lt;span class='wlnet03'&gt;Format&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;{0:f}&amp;quot;&lt;/span&gt;, &lt;span class='wlnet03'&gt;lastClose&lt;/span&gt; ), &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Black&lt;/span&gt; );
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>DataSetSymbols</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;DataSetSymbols Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;IList&amp;lt;string&amp;gt; DataSetSymbols&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns a list of strings that contain the symbols in the DataSet that 
contains the symbol currently being processed by the Strategy.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>&lt;pre class='wlnetcode'&gt;&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Collections&lt;/span&gt;.&lt;span class='wlnet03'&gt;Generic&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Text&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Drawing&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Indicators&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Collections&lt;/span&gt;;

&lt;span class='wlnet05'&gt;namespace&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Strategies&lt;/span&gt;
{
    &lt;span class='wlnet05'&gt;public&lt;/span&gt; &lt;span class='wlnet05'&gt;class&lt;/span&gt; &lt;span class='wlnet03'&gt;AboveMA&lt;/span&gt; : &lt;span class='wlnet03'&gt;WealthScript&lt;/span&gt;
    {
        &lt;span class='wlnet05'&gt;private&lt;/span&gt; &lt;span class='wlnet03'&gt;StrategyParameter&lt;/span&gt; &lt;span class='wlnet03'&gt;paramPeriod&lt;/span&gt;;
        
        &lt;span class='wlnet05'&gt;public&lt;/span&gt; &lt;span class='wlnet03'&gt;AboveMA&lt;/span&gt;()
        {
            &lt;span class='wlnet03'&gt;paramPeriod&lt;/span&gt; = &lt;span class='wlnet03'&gt;CreateParameter&lt;/span&gt;(&lt;span class='wlnet10'&gt;&amp;quot;MA Period&amp;quot;&lt;/span&gt;, &lt;span class='wlnet04'&gt;200&lt;/span&gt;, &lt;span class='wlnet04'&gt;10&lt;/span&gt;, &lt;span class='wlnet04'&gt;200&lt;/span&gt;, &lt;span class='wlnet04'&gt;5&lt;/span&gt;);
        }
        
        &lt;span class='wlnet05'&gt;protected&lt;/span&gt; &lt;span class='wlnet05'&gt;override&lt;/span&gt; &lt;span class='wlnet05'&gt;void&lt;/span&gt; &lt;span class='wlnet03'&gt;Execute&lt;/span&gt;()
        {
            &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;period&lt;/span&gt; = &lt;span class='wlnet03'&gt;paramPeriod&lt;/span&gt;.&lt;span class='wlnet03'&gt;ValueInt&lt;/span&gt;;
            &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;OverMA&lt;/span&gt; = &lt;span class='wlnet05'&gt;new&lt;/span&gt; &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet05'&gt;String&lt;/span&gt;.&lt;span class='wlnet03'&gt;Concat&lt;/span&gt;(&lt;span class='wlnet10'&gt;&amp;quot;Number above MA (&amp;quot;&lt;/span&gt;,&lt;span class='wlnet03'&gt;period&lt;/span&gt;,&lt;span class='wlnet10'&gt;&amp;quot;)&amp;quot;&lt;/span&gt;) );
            
            &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;ds&lt;/span&gt; = &lt;span class='wlnet04'&gt;0&lt;/span&gt;; &lt;span class='wlnet03'&gt;ds&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;DataSetSymbols&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;ds&lt;/span&gt;++)
            {
                &lt;span class='wlnet06'&gt;SetContext&lt;/span&gt;( &lt;span class='wlnet07'&gt;DataSetSymbols&lt;/span&gt;[&lt;span class='wlnet03'&gt;ds&lt;/span&gt;], &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
                &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet03'&gt;period&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
                    &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;gt; &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;,&lt;span class='wlnet03'&gt;period&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] )
                        &lt;span class='wlnet03'&gt;OverMA&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]++;
                &lt;span class='wlnet06'&gt;RestoreContext&lt;/span&gt;();
            }

            &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;omaPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;(&lt;span class='wlnet04'&gt;20&lt;/span&gt;,&lt;span class='wlnet05'&gt;true&lt;/span&gt;,&lt;span class='wlnet05'&gt;true&lt;/span&gt;);
            &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;omapctPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;(&lt;span class='wlnet04'&gt;20&lt;/span&gt;,&lt;span class='wlnet05'&gt;true&lt;/span&gt;,&lt;span class='wlnet05'&gt;true&lt;/span&gt;);
            &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;PctOverMA&lt;/span&gt; = &lt;span class='wlnet03'&gt;OverMA&lt;/span&gt;/&lt;span class='wlnet07'&gt;DataSetSymbols&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;*&lt;span class='wlnet04'&gt;100&lt;/span&gt;;
            &lt;span class='wlnet03'&gt;PctOverMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Description&lt;/span&gt; = &lt;span class='wlnet05'&gt;String&lt;/span&gt;.&lt;span class='wlnet03'&gt;Concat&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Pct above MA (&amp;quot;&lt;/span&gt;,&lt;span class='wlnet03'&gt;period&lt;/span&gt;,&lt;span class='wlnet10'&gt;&amp;quot; )&amp;quot;&lt;/span&gt; );
            &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;omaPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;OverMA&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Histogram&lt;/span&gt;,&lt;span class='wlnet04'&gt;2&lt;/span&gt; );
            &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;omapctPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;PctOverMA&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;DarkGreen&lt;/span&gt;, &lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;,&lt;span class='wlnet04'&gt;2&lt;/span&gt; );
        }
    }
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Date</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Date Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;IList&amp;lt;DateTime&amp;gt; Date&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns a list of DateTime values that represents the historical date/times 
of the Bars object that the Strategy is currently operating on.&amp;nbsp; You can 
also access the Dates via the Bars.Dates property.&amp;nbsp; Access individual date 
values via the square bracket syntax:&lt;/p&gt;
&lt;p&gt;&lt;font color="#008000"&gt;//Access the last date being charted&lt;/font&gt;&lt;br&gt;
DateTime lastDate = Date[Bars.Count - 1];&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>    &lt;span class='wlnet01'&gt;//Access the last date being charted&lt;/span&gt;
    &lt;span class='wlnet03'&gt;DateTime&lt;/span&gt; &lt;span class='wlnet03'&gt;lastDate&lt;/span&gt; = &lt;span class='wlnet07'&gt;Date&lt;/span&gt;[&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; - &lt;span class='wlnet04'&gt;1&lt;/span&gt;];
    &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Last trading date: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet05'&gt;String&lt;/span&gt;.&lt;span class='wlnet03'&gt;Format&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;{0:d}&amp;quot;&lt;/span&gt;, &lt;span class='wlnet03'&gt;lastDate&lt;/span&gt; ), &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Black&lt;/span&gt; );
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>DateTimeToBar</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;DateTimeToBar&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;int DateTimeToBar(DateTime date, bool exactMatch);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the bar number (in the Bars object that the Strategy is currently 
operating on) that matches the DateTime provided in the &lt;b&gt;date&lt;/b&gt; parameter.&amp;nbsp; 
If &lt;b&gt;exactMatch&lt;/b&gt; is true, the precise DateTime value must be located in the 
Bars object.&amp;nbsp; Otherwise, the first bar whose DateTime is greater than or 
equal to the specified &lt;b&gt;date&lt;/b&gt; is returned.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet06'&gt;ClearDebug&lt;/span&gt;();
    &lt;span class='wlnet03'&gt;DateTime&lt;/span&gt; &lt;span class='wlnet03'&gt;d&lt;/span&gt; = &lt;span class='wlnet05'&gt;new&lt;/span&gt; &lt;span class='wlnet03'&gt;DateTime&lt;/span&gt;( &lt;span class='wlnet04'&gt;2008&lt;/span&gt;, &lt;span class='wlnet04'&gt;07&lt;/span&gt;, &lt;span class='wlnet04'&gt;15&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;Bar&lt;/span&gt; = &lt;span class='wlnet06'&gt;DateTimeToBar&lt;/span&gt;( &lt;span class='wlnet03'&gt;d&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );

    &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet03'&gt;Bar&lt;/span&gt; == -&lt;span class='wlnet04'&gt;1&lt;/span&gt; )
        &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;This bar does not exist in the chart&amp;quot;&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;else&lt;/span&gt;
    {
        &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;1&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;bar&lt;/span&gt; == &lt;span class='wlnet03'&gt;Bar&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;BuyAtClose&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Buy&amp;quot;&lt;/span&gt; );
    }
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>GetExternalSymbol</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;GetExternalSymbol&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;Bars GetExternalSymbol(string symbol, bool synchronize);&lt;br&gt;
Bars GetExternalSymbol(string dataSetName, string symbol, bool synchronize);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns a Bars object for the specified stock/futures &lt;b&gt;symbol&lt;/b&gt;.&amp;nbsp; 
The Bars object will be returned in the same data scale as the Bars object that the Strategy is currently operating on.&amp;nbsp; If data for the specified symbol is not available, this method will raise an error.&amp;nbsp; The synchronize method controls whether the returned Bars object will be automatically synchronized to the current Bars object.&amp;nbsp; This is important if you want to plot the Bars, or indicators that are created from it.&amp;nbsp; You can defer the synchronization 
by calling the Synchronize method at some later time.&lt;/p&gt;
&lt;p&gt;Optional parameter &lt;b&gt;dataSetName&lt;/b&gt; allows to specify the DataSet that will be searched when an external symbol is requested, which can differ from the DataSet of the symbol on which the Strategy is being executed. &lt;/p&gt;
&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; By specifying a DataSet with &lt;b&gt;dataSetName&lt;/b&gt;, you are essentially specifying the associated Provider. If symbol is missing in the specified DataSet, but it's possible to find it in another DataSet of the same Provider, then it can be returned. This is in contrast to not specifying a DataSet in which case an alphabetical search through DataSets of any Provider is used to return the data.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
&lt;span class='wlnet05'&gt;try&lt;/span&gt;
    {
        &lt;span class='wlnet01'&gt;// Create a DataSeries with the relative strength of the current symbol vs. S&amp;amp;P 500&lt;/span&gt;
        &lt;span class='wlnet07'&gt;Bars&lt;/span&gt; &lt;span class='wlnet03'&gt;spy&lt;/span&gt; = &lt;span class='wlnet06'&gt;GetExternalSymbol&lt;/span&gt;(&lt;span class='wlnet10'&gt;&amp;quot;SPY&amp;quot;&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;);
        &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;rs&lt;/span&gt; = &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt;.&lt;span class='wlnet03'&gt;Abs&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt; &lt;span class='wlnet01'&gt;/ spy.Close );&lt;/span&gt;
        &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;rs3&lt;/span&gt; = &lt;span class='wlnet03'&gt;rs&lt;/span&gt;&amp;gt;&amp;gt;(&lt;span class='wlnet04'&gt;21&lt;/span&gt; * &lt;span class='wlnet04'&gt;3&lt;/span&gt;);
        &lt;span class='wlnet03'&gt;rs&lt;/span&gt;.&lt;span class='wlnet03'&gt;Description&lt;/span&gt; = &lt;span class='wlnet10'&gt;&amp;quot;Relative strength &amp;quot;&lt;/span&gt; + &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Symbol&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot;/&amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;spy&lt;/span&gt;.&lt;span class='wlnet03'&gt;Symbol&lt;/span&gt;;
        &lt;span class='wlnet03'&gt;rs3&lt;/span&gt;.&lt;span class='wlnet03'&gt;Description&lt;/span&gt; = &lt;span class='wlnet10'&gt;&amp;quot;Relative strength &amp;quot;&lt;/span&gt; + &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Symbol&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot;/&amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;spy&lt;/span&gt;.&lt;span class='wlnet03'&gt;Symbol&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot; (3 months ago)&amp;quot;&lt;/span&gt;;

        &lt;span class='wlnet06'&gt;HideVolume&lt;/span&gt;();
        &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;spyPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;40&lt;/span&gt;, &lt;span class='wlnet05'&gt;false&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
        &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;rsPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;40&lt;/span&gt;, &lt;span class='wlnet05'&gt;false&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
        &lt;span class='wlnet06'&gt;PlotSymbol&lt;/span&gt;( &lt;span class='wlnet03'&gt;spyPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;spy&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;,&lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt;);
        &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;rsPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;rs&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Black&lt;/span&gt;, &lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
        &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;rsPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;rs3&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
    
        &lt;span class='wlnet01'&gt;// Compare relative strength today and then 3 months ago&lt;/span&gt;
        &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;21&lt;/span&gt; * &lt;span class='wlnet04'&gt;3&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
        {
            &lt;span class='wlnet01'&gt;// Highlight when the ratio today is greater than 3 months ago &lt;/span&gt;
            &lt;span class='wlnet01'&gt;// and is also breaking a new 3 month relative high&lt;/span&gt;
            
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet03'&gt;rs&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] == &lt;span class='wlnet03'&gt;Highest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet03'&gt;rs&lt;/span&gt;, &lt;span class='wlnet04'&gt;21&lt;/span&gt; * &lt;span class='wlnet04'&gt;3&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] )
                &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet03'&gt;rs&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;gt; &lt;span class='wlnet03'&gt;rs3&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] )
                {
                    &lt;span class='wlnet06'&gt;SetBarColor&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt; );
                    &lt;span class='wlnet03'&gt;rsPane&lt;/span&gt;.&lt;span class='wlnet06'&gt;SetBackgroundColor&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;FromArgb&lt;/span&gt;(&lt;span class='wlnet04'&gt;30&lt;/span&gt;,&lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;) );
                }
        }
    }
    &lt;span class='wlnet05'&gt;catch&lt;/span&gt;
    {
        &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;No data or could not find series&amp;quot;&lt;/span&gt; );
    }            
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>GetSessionOpen</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;GetSessionOpen&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;GetSessionOpen Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;double GetSessionOpen(string symbol)&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns current trading session's opening price for the specifed &lt;b&gt;symbol&lt;/b&gt;. Returns 0 if the session's open price is not available or if the method is not supported by the DataSet's Data Provider.&lt;/p&gt;
&lt;p&gt;GetSessionOpen() is designed primarily for EOD Strategies that require action based on the trading session's opening price (see Example).  While it's still recommended to perform a Daily price update beforehand, you can schedule the Strategy Monitor to execute on the open of the market session.  If you require a short delay to ensure all stocks have opened, you can right click the Strategy and choose "Run this Strategy now" or run the backtest in a Strategy Window.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;GetSessionOpen() employs the Static Data Provider to return the session's opening price; implementations vary by Provider.  For example, in response to the first call to GetSessionOpen(), the Fidelity Static Provider requests and caches the opening prices for all symbols in the DataSet.  If the DataSet is large, processing the first symbol in the DataSet will appear slow while opening prices are collected. &lt;/li&gt;
  &lt;li&gt;Intraday Strategies can directly obtain the opening price by finding the open price of the first bar of the current day, given by Open[bar - Bars.IntradayBarNumber(bar)] in a bar-indexed loop.  Nonetheless, if the open price is required prior to the completion of the first intraday bar, consider using GetSessionOpen().&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;p&gt;This example shows how to employ GetSessionOpen() in a trading Strategy.  For all bars prior to the last bar of the chart, the Strategy can access the opening price of the next bar.  However, when processing the final bar of the chart, the open is obtained by calling GetSessionOpen().  If the value returned is not greater than 0, then the result is invalid and a trading Alert will not be processed.  Otherwise, the Strategy will enable the BuyAtLimit order if the opening price of the "trade bar" is below the low of the last complete bar.&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</Description>
        <Example>
&lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;openTradeBar&lt;/span&gt; = &lt;span class='wlnet04'&gt;0&lt;/span&gt;;
            &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;lastCompleteBar&lt;/span&gt; = &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; - &lt;span class='wlnet04'&gt;1&lt;/span&gt;;
   
            &lt;span class='wlnet05'&gt;for&lt;/span&gt; (&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;0&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
            {
                &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
                {
                    &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; = &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;;
                    &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet03'&gt;bar&lt;/span&gt; - &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryBar&lt;/span&gt; &amp;gt; &lt;span class='wlnet04'&gt;1&lt;/span&gt;)
                        &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;(&lt;span class='wlnet03'&gt;bar&lt;/span&gt; + &lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;);
                }
                &lt;span class='wlnet05'&gt;else&lt;/span&gt;
                {                   
                    &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet03'&gt;bar&lt;/span&gt; == &lt;span class='wlnet03'&gt;lastCompleteBar&lt;/span&gt;)
                    {
                        &lt;span class='wlnet03'&gt;openTradeBar&lt;/span&gt; = &lt;span class='wlnet06'&gt;GetSessionOpen&lt;/span&gt;(&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Symbol&lt;/span&gt;);
                        &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;(&lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;,&lt;span class='wlnet10'&gt;&amp;quot;Today's Opening Price = &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;openTradeBar&lt;/span&gt;.&lt;span class='wlnet06'&gt;ToString&lt;/span&gt;(&lt;span class='wlnet10'&gt;&amp;quot;0.00&amp;quot;&lt;/span&gt;));
                    }
                    &lt;span class='wlnet05'&gt;else&lt;/span&gt;
                        &lt;span class='wlnet03'&gt;openTradeBar&lt;/span&gt; = &lt;span class='wlnet07'&gt;Open&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;];
                               
                    &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet03'&gt;openTradeBar&lt;/span&gt; &amp;gt; &lt;span class='wlnet04'&gt;0&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class='wlnet03'&gt;openTradeBar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Low&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;])
                        &lt;span class='wlnet06'&gt;BuyAtLimit&lt;/span&gt;(&lt;span class='wlnet03'&gt;bar&lt;/span&gt; + &lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;Low&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] * &lt;span class='wlnet04'&gt;0.95&lt;/span&gt;);
                }
            }
        }
    }
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>High</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;High Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;DataSeries High&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns a DataSeries object that represents the high prices of the Bars 
object that the Strategy is currently operating on.&amp;nbsp; You can also access 
the high prices via the Bars.High property.&amp;nbsp; Access individual high prices 
via the square bracket syntax:&lt;/p&gt;
&lt;p&gt;&lt;font color="#008000"&gt;//Access high price of the last bar&lt;/font&gt;&lt;br&gt;
double lastHigh = High[Bars.Count - 1];&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;See the DataSeries object reference for a listing of available properties 
  and methods on the DataSeries object.&lt;/li&gt;
&lt;/ul&gt;
&lt;/body&gt;
&lt;/html&gt;
</Description>
        <Example>    &lt;span class='wlnet01'&gt;// Print high price of the last bar&lt;/span&gt;
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet07'&gt;high&lt;/span&gt; = &lt;span class='wlnet07'&gt;High&lt;/span&gt;[&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;];
    &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;High: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet05'&gt;String&lt;/span&gt;.&lt;span class='wlnet03'&gt;Format&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;{0:f}&amp;quot;&lt;/span&gt;, &lt;span class='wlnet07'&gt;high&lt;/span&gt; ), &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Black&lt;/span&gt; );
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Low</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Low Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;DataSeries Low&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns a DataSeries object that represents the low prices of the Bars object 
that the Strategy is currently operating on.&amp;nbsp; You can also access the low 
prices via the Bars.Low property.&amp;nbsp; Access individual low prices via the 
square bracket syntax:&lt;/p&gt;
&lt;p&gt;&lt;font color="#008000"&gt;//Access low price of the last bar&lt;/font&gt;&lt;br&gt;
double lastLow = Low[Bars.Count - 1];&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;See the DataSeries object reference for a listing of available properties 
  and methods on the DataSeries object.&lt;/li&gt;
&lt;/ul&gt;
&lt;/body&gt;
&lt;/html&gt;
</Description>
        <Example>    &lt;span class='wlnet01'&gt;// Print low price of the last bar&lt;/span&gt;
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet07'&gt;low&lt;/span&gt; = &lt;span class='wlnet07'&gt;Low&lt;/span&gt;[&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;];
    &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Low: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet05'&gt;String&lt;/span&gt;.&lt;span class='wlnet03'&gt;Format&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;{0:f}&amp;quot;&lt;/span&gt;, &lt;span class='wlnet07'&gt;low&lt;/span&gt; ), &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Black&lt;/span&gt; );
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Open</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Open Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;DataSeries Open&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns a DataSeries object that represents the open prices of the Bars 
object that the Strategy is currently operating on.&amp;nbsp; You can also access 
the open prices via the Bars.Open property.&amp;nbsp; Access individual open prices 
via the square bracket syntax:&lt;/p&gt;
&lt;p&gt;&lt;font color="#008000"&gt;//Access open price of the last bar&lt;/font&gt;&lt;br&gt;
double lastOpen = Open[Bars.Count - 1];&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;See the DataSeries object reference for a listing of available properties 
  and methods on the DataSeries object.&lt;/li&gt;
&lt;/ul&gt;
&lt;/body&gt;
&lt;/html&gt;
</Description>
        <Example>    &lt;span class='wlnet01'&gt;// Print open price of the last bar&lt;/span&gt;
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet07'&gt;open&lt;/span&gt; = &lt;span class='wlnet07'&gt;Open&lt;/span&gt;[&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;];
    &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Open price: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet05'&gt;String&lt;/span&gt;.&lt;span class='wlnet03'&gt;Format&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;{0:f}&amp;quot;&lt;/span&gt;, &lt;span class='wlnet07'&gt;open&lt;/span&gt; ), &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Black&lt;/span&gt; );
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>RestoreContext</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;RestoreContext&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void RestoreContext();&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Changes the context of the Strategy back to the Bars object that it was 
originally invoked on.&amp;nbsp; In a Strategy window, this is the symbol that you 
are charting.&amp;nbsp; The context can change to a different symbol by calling 
SetContext.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;RestoreContext restores the context symbol only, but preserves changes in 
  data scale that were made by calling the various SetScale methods.&lt;/li&gt;
  &lt;li&gt;After you are through using an external symbol, you should call 
  RestoreContext to restore the Strategy back to the original symbol.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Compare the RSI of the stock with the RSI of QQQQ&lt;/span&gt;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;QQQQ_RSI&lt;/span&gt;;
    &lt;span class='wlnet06'&gt;SetContext&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;QQQQ&amp;quot;&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;QQQQ_RSI&lt;/span&gt; = &lt;span class='wlnet03'&gt;RSI&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;30&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;RestoreContext&lt;/span&gt;();
    &lt;span class='wlnet06'&gt;HideVolume&lt;/span&gt;();
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;qqqq&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;50&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;rsi&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;50&lt;/span&gt;, &lt;span class='wlnet05'&gt;false&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;qqqq&lt;/span&gt;, &lt;span class='wlnet03'&gt;QQQQ_RSI&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;2&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;rsi&lt;/span&gt;, &lt;span class='wlnet03'&gt;RSI&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;30&lt;/span&gt; ), &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;2&lt;/span&gt; );
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>SetContext</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;SetContext&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void SetContext(string symbol, bool synchronize);&lt;br&gt;void SetContext(Bars bars);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Sets the &amp;quot;context&amp;quot; of the Strategy to the &lt;b&gt;symbol&lt;/b&gt; specified.&amp;nbsp; This 
means that subsequent Positions (BuyAtMarket, ShortAtMarket, etc.) will be 
entered on the new &lt;b&gt;symbol&lt;/b&gt;.&amp;nbsp; Use this technique to backtest pairs 
trading Strategies, for example.&amp;nbsp; The &lt;b&gt;synchronize&lt;/b&gt; parameter 
specifies whether the data for the new &lt;b&gt;symbol&lt;/b&gt; will be automatically 
date-synchronized with the primary symbol (the one that the Strategy was 
originally executed on, and charted.)&amp;nbsp; If you defer synchronization, you 
can synchronize at a future point using the Synchronize function.&amp;nbsp; This is 
required if you want to plot the &lt;b&gt;symbol&lt;/b&gt;, or indicators produced from it.&amp;nbsp; 
If data for the specified &lt;b&gt;symbol&lt;/b&gt; is not available, SetContext will throw 
an error.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Call the method without the optional &lt;b&gt;synchronize&lt;/b&gt; parameter for automatic synchronization.&lt;/li&gt;
  &lt;li&gt;Call RestoreContext to restore the context to the original symbol.&lt;/li&gt;
  &lt;li&gt;The SetContext(&lt;i&gt;Bars&lt;/i&gt;) overload was introduced to allow trades on the synthetic option symbol (but is not limited to this scenario). It's always synchronized to the primary symbol.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>&lt;pre class='wlnetcode'&gt;&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Collections&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Text&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Drawing&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;;

&lt;span class='wlnet05'&gt;namespace&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Strategies&lt;/span&gt;
{
    &lt;span class='wlnet05'&gt;public&lt;/span&gt; &lt;span class='wlnet05'&gt;class&lt;/span&gt; &lt;span class='wlnet03'&gt;MyStrategy&lt;/span&gt; : &lt;span class='wlnet03'&gt;WealthScript&lt;/span&gt;
    {
        &lt;span class='wlnet05'&gt;protected&lt;/span&gt; &lt;span class='wlnet05'&gt;override&lt;/span&gt; &lt;span class='wlnet05'&gt;void&lt;/span&gt; &lt;span class='wlnet03'&gt;Execute&lt;/span&gt;()
        {
            &lt;span class='wlnet03'&gt;SortedList&lt;/span&gt; &lt;span class='wlnet03'&gt;Vlst&lt;/span&gt; = &lt;span class='wlnet05'&gt;new&lt;/span&gt; &lt;span class='wlnet03'&gt;SortedList&lt;/span&gt;( &lt;span class='wlnet07'&gt;DataSetSymbols&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; );
            
            &lt;span class='wlnet01'&gt;// Collect turnover values for the DataSet&lt;/span&gt;
            &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;ds&lt;/span&gt; = &lt;span class='wlnet04'&gt;0&lt;/span&gt;; &lt;span class='wlnet03'&gt;ds&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;DataSetSymbols&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;ds&lt;/span&gt;++)
            {
                &lt;span class='wlnet06'&gt;SetContext&lt;/span&gt;( &lt;span class='wlnet07'&gt;DataSetSymbols&lt;/span&gt;[&lt;span class='wlnet03'&gt;ds&lt;/span&gt;], &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
                &lt;span class='wlnet03'&gt;Vlst&lt;/span&gt;.&lt;span class='wlnet03'&gt;Add&lt;/span&gt;( &lt;span class='wlnet03'&gt;ds&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] * &lt;span class='wlnet07'&gt;Volume&lt;/span&gt;[&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] );
                &lt;span class='wlnet06'&gt;RestoreContext&lt;/span&gt;();
            }
            
            &lt;span class='wlnet03'&gt;ICollection&lt;/span&gt; &lt;span class='wlnet03'&gt;v&lt;/span&gt; = &lt;span class='wlnet03'&gt;Vlst&lt;/span&gt;.&lt;span class='wlnet03'&gt;Keys&lt;/span&gt;;
            &lt;span class='wlnet05'&gt;foreach&lt;/span&gt;( &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;str&lt;/span&gt; &lt;span class='wlnet05'&gt;in&lt;/span&gt; &lt;span class='wlnet03'&gt;v&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet07'&gt;DataSetSymbols&lt;/span&gt;[&lt;span class='wlnet03'&gt;str&lt;/span&gt;] + &lt;span class='wlnet10'&gt;&amp;quot; -- $&amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;Vlst&lt;/span&gt;[&lt;span class='wlnet03'&gt;str&lt;/span&gt;] );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Synchronize</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Synchronize&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;DataSeries Synchronize(DataSeries source);&lt;br&gt;
Bars Synchronize(Bars source);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns a new DataSeries or Bars object, based on the &lt;b&gt;source&lt;/b&gt; 
DataSeries or Bars object.&amp;nbsp; The new DataSeries or Bars object is 
date-synchronized to the primary symbol that the Strategy was executed on.&amp;nbsp; 
Use this method when you need to synchronize an external symbol acquired by 
calling SetContext or GetExternalSymbol, or any indicators created from them, 
for plotting.&amp;nbsp; Also, use this method to expand a compressed DataSeries or 
Bars object, such as those obtained after calls to SetScaleWeekly or 
SetScaleMonthly.&amp;nbsp; You must synchronize DataSeries and Bars objects if you 
want to plot them on the chart, or use them in operations with the primary Bars 
object, or indicators created from it.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;If the primary symbol contains dates that occur before the first date in 
  the &lt;b&gt;source&lt;/b&gt; DataSeries or Bars, the new DataSeries or Bars will contain 
  zero values for these dates.&lt;/li&gt;
  &lt;li&gt;If the primary symbol contains dates that do not occur within the &lt;b&gt;
  source&lt;/b&gt; DataSeries or Bars, they will be inserted, and the previous 
  available value used for these dates.&lt;/li&gt;
  &lt;li&gt;If the &lt;b&gt;source&lt;/b&gt; contains dates that do not occur in the primary 
  symbol, these values will be eliminated from the new DataSeries or Bars.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet07'&gt;Bars&lt;/span&gt; &lt;span class='wlnet03'&gt;msft&lt;/span&gt; = &lt;span class='wlnet05'&gt;new&lt;/span&gt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;MSFT&amp;quot;&lt;/span&gt;, &lt;span class='wlnet03'&gt;BarScale&lt;/span&gt;.&lt;span class='wlnet03'&gt;Daily&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;try&lt;/span&gt;
    {
        &lt;span class='wlnet03'&gt;msft&lt;/span&gt; = &lt;span class='wlnet06'&gt;GetExternalSymbol&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;MSFT&amp;quot;&lt;/span&gt;, &lt;span class='wlnet05'&gt;false&lt;/span&gt; );
    }
    &lt;span class='wlnet05'&gt;catch&lt;/span&gt;
    {
        &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;No MSFT data?&amp;quot;&lt;/span&gt; );
    }

    &lt;span class='wlnet03'&gt;msft&lt;/span&gt; = &lt;span class='wlnet06'&gt;Synchronize&lt;/span&gt;( &lt;span class='wlnet03'&gt;msft&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;msftPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;50&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSymbol&lt;/span&gt;( &lt;span class='wlnet03'&gt;msftPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;msft&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;msftPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet03'&gt;msft&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;,&lt;span class='wlnet04'&gt;10&lt;/span&gt; ), &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );            
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>TrendlineValue</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;TrendlineValue&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;double TrendlineValue(int bar, string trendlineName);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Provides access to the specified manually drawn trendline by name, and 
returns the value of that trendline at the specified bar on the chart.&amp;nbsp; If 
the named trendline could not be found for the current symbol and time scale, 
the method returns 0.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;p&gt;In a Strategy that loops through DataSet symbols using &lt;b&gt;SetContext&lt;/b&gt;, &lt;b&gt;TrendlineValue&lt;/b&gt; is not working. If you click on the symbol with the trendline, TrendlineValue code is executed whereas when you click on another symbol to start the Strategy, &lt;b&gt;TrendlineValue&lt;/b&gt; returns zero.&lt;/p&gt;
&lt;p&gt;This is by design, and the reason is that it's not possible to access a Trendline Value for other symbols through &lt;b&gt;SetContext&lt;/b&gt; since the TrendLine(s) don't exist in the current chart.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;res&lt;/span&gt;;
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;1&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet03'&gt;res&lt;/span&gt; = &lt;span class='wlnet06'&gt;TrendlineValue&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Resistance&amp;quot;&lt;/span&gt; );
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] &amp;lt; &lt;span class='wlnet03'&gt;res&lt;/span&gt; )
        {
            &lt;span class='wlnet03'&gt;res&lt;/span&gt; = &lt;span class='wlnet06'&gt;TrendlineValue&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Resistance&amp;quot;&lt;/span&gt; );
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;gt;= &lt;span class='wlnet03'&gt;res&lt;/span&gt; )
            {
                &lt;span class='wlnet06'&gt;SetBarColor&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Green&lt;/span&gt; );
                &lt;span class='wlnet06'&gt;DrawCircle&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet04'&gt;5&lt;/span&gt;, &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;res&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;5&lt;/span&gt;, &lt;span class='wlnet05'&gt;false&lt;/span&gt; );
            }
        }

    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Volume</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Volume Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;DataSeries Volume&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns a DataSeries object that represents the volume of the Bars object 
that the Strategy is currently operating on.&amp;nbsp; You can also access the 
volume via the Bars.Volume property.&amp;nbsp; Access individual volume values via 
the square bracket syntax:&lt;/p&gt;
&lt;p&gt;&lt;font color="#008000"&gt;//Access the volume of the first bar&lt;/font&gt;&lt;br&gt;
double firstBarVolume = Volume[0];&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;See the DataSeries object reference for a listing of available properties 
  and methods on the DataSeries object.&lt;/li&gt;
&lt;/ul&gt;
&lt;/body&gt;
&lt;/html&gt;
</Description>
        <Example>    &lt;span class='wlnet01'&gt;// Get turnover on the last bar ( close * volume )&lt;/span&gt;
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;turnover&lt;/span&gt; = &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] * &lt;span class='wlnet07'&gt;Volume&lt;/span&gt;[&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;];
    &lt;span class='wlnet01'&gt;// Print stock turnover&lt;/span&gt;
    &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Turnover: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet05'&gt;String&lt;/span&gt;.&lt;span class='wlnet03'&gt;Format&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;${0:0,0}&amp;quot;&lt;/span&gt;, &lt;span class='wlnet03'&gt;turnover&lt;/span&gt; ), &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Black&lt;/span&gt; );
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
    </Entries>
    <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Data Access&lt;/h1&gt;
&lt;p&gt;The Data Access category contains methods you can use to access the data that 
the Strategy is currently operating on, and additional data that it might need.&lt;/p&gt;
&lt;/html&gt;
</Description>
  </QuickRefCategory>
  <QuickRefCategory>
    <Name>DataSeries Object</Name>
    <CategoryType>Object</CategoryType>
    <Entries>
      <QuickRefEntry>
        <Name>[] indexer</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;[] indexer Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;double this[int i]&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Allows you to access one of the values in the DataSeries.&amp;nbsp; The 
DataSeries contains a number of values, indexed between 0 and Count - 1.&amp;nbsp; 
Provide the index number of the value you want to access in the&lt;b&gt; i &lt;/b&gt;
parameter.&lt;/p&gt;
&lt;p&gt;&lt;font color="#008000"&gt;//Access the first and last values of a DataSeries (ds)&lt;/font&gt;&lt;br&gt;
double firstValue = ds[0];&lt;br&gt;
double lastValue = ds[ds.Count - 1];&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example />
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Abs</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Abs&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;static DataSeries Abs(DataSeries source);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;This class level (static) method returns a new DataSeries that is the 
absolute value of the specified &lt;b&gt;source&lt;/b&gt; DataSeries.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>    &lt;span class='wlnet01'&gt;//Return the absolute value of Rate of Change&lt;/span&gt;
    &lt;span class='wlnet01'&gt;//DataSeries roc = ROC.Series( Close, 20 );&lt;/span&gt;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;absRoc&lt;/span&gt; = &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt;.&lt;span class='wlnet03'&gt;Abs&lt;/span&gt;( &lt;span class='wlnet03'&gt;ROC&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; ) );
    &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Abs(ROC) value on last bar: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet05'&gt;String&lt;/span&gt;.&lt;span class='wlnet03'&gt;Format&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;{0:f}&amp;quot;&lt;/span&gt;, &lt;span class='wlnet03'&gt;absRoc&lt;/span&gt;[&lt;span class='wlnet03'&gt;absRoc&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] ), &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;RoyalBlue&lt;/span&gt; );
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Count</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Count Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;int Count&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the number of values contained in the DataSeries.&amp;nbsp; The values 
are accessed by index, starting at index 0 and ending at index Count - 1.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet01'&gt;// Your trading system rules&lt;/span&gt;
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Date</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Date Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;IList&amp;lt;DateTime&amp;gt; Date&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the list of DateTimes that are associated with the values contained 
in the DataSeries.&amp;nbsp; The number of DateTimes in the Date list is always 
equal to the number of values contained in the DataSeries.&lt;/p&gt;
&lt;p&gt;&lt;font color="#008000"&gt;//Access the first and last dates contained in the 
DataSeries (ds)&lt;br&gt;
&lt;/font&gt;DateTime dtFirst = ds.Date[0];&lt;br&gt;
DateTime dsLast = ds.Date[ds.Count - 1];&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;//Access the first and last dates&lt;/span&gt;
    &lt;span class='wlnet03'&gt;DateTime&lt;/span&gt; &lt;span class='wlnet03'&gt;firstDate&lt;/span&gt;     = &lt;span class='wlnet07'&gt;Date&lt;/span&gt;[&lt;span class='wlnet04'&gt;0&lt;/span&gt;];
    &lt;span class='wlnet03'&gt;DateTime&lt;/span&gt; &lt;span class='wlnet03'&gt;lastDate&lt;/span&gt;     = &lt;span class='wlnet07'&gt;Date&lt;/span&gt;[&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;];
    &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;First trading date: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet05'&gt;String&lt;/span&gt;.&lt;span class='wlnet03'&gt;Format&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;{0:d}&amp;quot;&lt;/span&gt;, &lt;span class='wlnet03'&gt;firstDate&lt;/span&gt; ), &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Black&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Last trading date: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet05'&gt;String&lt;/span&gt;.&lt;span class='wlnet03'&gt;Format&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;{0:d}&amp;quot;&lt;/span&gt;, &lt;span class='wlnet03'&gt;lastDate&lt;/span&gt; ), &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Black&lt;/span&gt; );
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Description</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Description Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;string Description&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Represents the description associated with the DataSeries.&amp;nbsp; You can 
change the description by assigning a different string value to this property.&amp;nbsp; 
The Description is shown as a label in charts when the DataSeries is plotted, 
and appears in the tooltip that is visible when you move the mouse over an 
indicator on the chart.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Average price series&lt;/span&gt;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;average&lt;/span&gt; = (&lt;span class='wlnet07'&gt;High&lt;/span&gt; + &lt;span class='wlnet07'&gt;Low&lt;/span&gt;) &lt;span class='wlnet01'&gt;/ 2;&lt;/span&gt;
    &lt;span class='wlnet03'&gt;average&lt;/span&gt;.&lt;span class='wlnet03'&gt;Description&lt;/span&gt; = &lt;span class='wlnet10'&gt;&amp;quot;Average Price&amp;quot;&lt;/span&gt; ;
    &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt; ( &lt;span class='wlnet03'&gt;average&lt;/span&gt;.&lt;span class='wlnet03'&gt;Description&lt;/span&gt; );
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>FirstValidValue</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;FirstValidValue Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;int FirstValidValue&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the bar number of the first &amp;quot;valid&amp;quot; value contained in the 
DataSeries.&amp;nbsp; When an indicator (all indicators are DataSeries) is plotted, 
the plotting actually begins at the FirstValidValue.&amp;nbsp; For previous bars, the 
indicator is not plotted.&amp;nbsp; For example, the FirstValidValue of a 30 bar 
moving average would be bar number 29.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Some price series&lt;/span&gt;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;mySeries&lt;/span&gt; = &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;100&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;mySeries&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;2&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;ClearDebug&lt;/span&gt;();
    &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet03'&gt;mySeries&lt;/span&gt;.&lt;span class='wlnet03'&gt;FirstValidValue&lt;/span&gt; );
    
    &lt;span class='wlnet01'&gt;// Sets the trading loop to the first &amp;quot;valid&amp;quot; value of the DataSeries&lt;/span&gt;
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet03'&gt;mySeries&lt;/span&gt;.&lt;span class='wlnet03'&gt;FirstValidValue&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet06'&gt;CrossUnder&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet03'&gt;mySeries&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] ) )
                &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Exit Long&amp;quot;&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet06'&gt;CrossOver&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Low&lt;/span&gt;, &lt;span class='wlnet03'&gt;mySeries&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] ) )
            &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Enter Long&amp;quot;&lt;/span&gt; );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>MaxValue</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;MaxValue Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;double MaxValue&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the maximum (highest) value that exists in the entire DataSeries.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Show highest price&lt;/span&gt;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;mySeries&lt;/span&gt; = &lt;span class='wlnet03'&gt;Highest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Highest price registered = &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;mySeries&lt;/span&gt;.&lt;span class='wlnet03'&gt;MaxValue&lt;/span&gt; );
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>MinValue</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;MinValue Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;double MinValue&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the minimum (lowest) value that exists in the entire DataSeries.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Show lowest price&lt;/span&gt;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;mySeries&lt;/span&gt; = &lt;span class='wlnet03'&gt;Lowest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Low&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Lowest price registered = &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;mySeries&lt;/span&gt;.&lt;span class='wlnet03'&gt;MinValue&lt;/span&gt; );
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>PartialValue</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Partial Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;double PartialValue&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Contains the value based on the partial bar in a streaming chart.&amp;nbsp; In a 
streaming chart, a partial bar is visible at the far right end of the chart, 
containing the partial values for open, high, low, and close.&amp;nbsp; Certain 
indicators can also update based on partial values.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;If the DataSeries does not have a partial value available, the 
  PartialValue property returns Double.NaN (not a number).&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
&lt;span class='wlnet01'&gt;// How to access the opening price of an incomplete (Ghost) bar&lt;/span&gt;
    &lt;span class='wlnet01'&gt;// Helpful when trading gaps and in Opening Range Breakout strategies etc.&lt;/span&gt;
    
    &lt;span class='wlnet01'&gt;// Run this Strategy on Daily scale shortly after market opens in Streaming mode&lt;/span&gt;
    &lt;span class='wlnet01'&gt;// Your Streaming data provider should support partial values (e.g. Fidelity, Yahoo)&lt;/span&gt;
    
    &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Scale&lt;/span&gt; != &lt;span class='wlnet03'&gt;BarScale&lt;/span&gt;.&lt;span class='wlnet03'&gt;Daily&lt;/span&gt; )    {
        &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;(&lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;To be used on Daily scale&amp;quot;&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt;);
        &lt;span class='wlnet05'&gt;return&lt;/span&gt;;
    }

    &lt;span class='wlnet05'&gt;if&lt;/span&gt; (!&lt;span class='wlnet07'&gt;IsStreaming&lt;/span&gt;)    {
        &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Enable Streaming first&amp;quot;&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt;);
    }
    &lt;span class='wlnet05'&gt;else&lt;/span&gt; {
        &lt;span class='wlnet05'&gt;for&lt;/span&gt; (&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;1&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
        {
            &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;OpenPrice&lt;/span&gt; = (&lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; - &lt;span class='wlnet04'&gt;1&lt;/span&gt; ? &lt;span class='wlnet07'&gt;Open&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt; + &lt;span class='wlnet04'&gt;1&lt;/span&gt;] : &lt;span class='wlnet07'&gt;Open&lt;/span&gt;.&lt;span class='wlnet03'&gt;PartialValue&lt;/span&gt;);
            
            &lt;span class='wlnet01'&gt;// Open.PartialValue equals double.NaN if streaming is not enabled&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet03'&gt;OpenPrice&lt;/span&gt; == &lt;span class='wlnet05'&gt;double&lt;/span&gt;.&lt;span class='wlnet03'&gt;NaN&lt;/span&gt;)
                &lt;span class='wlnet05'&gt;continue&lt;/span&gt;;

            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt; == &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;OpenPrice&lt;/span&gt;.&lt;span class='wlnet06'&gt;ToString&lt;/span&gt;() );
        }
    }
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
    </Entries>
    <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;DataSeries Object&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;DataSeries(string description)&lt;/font&gt;&lt;br&gt;
&lt;font color="#0000FF"&gt;DataSeries(Bars bars, string description)&lt;/font&gt;&lt;br&gt;
&lt;font color="#0000FF"&gt;DataSeries(DataSeries source, string description)&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;The DataSeries object represents a series of values (double type) with 
corresponding dates.&amp;nbsp; You can perform mathematical operations on DataSeries 
as if they were primary types:&lt;/p&gt;
&lt;p&gt;&lt;font color="#008000"&gt;//Get average of high and low price&lt;br&gt;
&lt;/font&gt;DataSeries avg = (High + Low) / 2;&lt;/p&gt;
&lt;p&gt;You can also create offset copies of a DataSeries by using the shift 
operators, &amp;gt;&amp;gt; and &amp;lt;&amp;lt;:&lt;/p&gt;
&lt;p&gt;&lt;font color="#008000"&gt;//Shift a moving average 2 bars to the right&lt;br&gt;
&lt;/font&gt;DataSeries shiftedMA = SMA.Series(Close, 14) &amp;gt;&amp;gt; 2;&lt;/p&gt;
&lt;p&gt;
The most practical use of the &lt;font color="#0000FF"&gt;DataSeries&lt;/font&gt; function is to return a new zero-filled DataSeries that has the same number of elements as the Bars parameter. Use the result to fill the series bar by bar with calculated values:
&lt;/p&gt;
&lt;/html&gt;
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"&gt;&lt;html xmlns='http://www.w3.org/1999/xhtml'&gt;
&lt;head&gt;
	&lt;meta http-equiv='Content-Type' content='text/html; charset=iso-8859-1' /&gt;
	&lt;title&gt;&lt;/title&gt;
	&lt;style type='text/css' media='all'&gt;
pre.wlnetcode
{
	background: #FFFFFF;
	color: #000000;;
	font: 8pt "Courier New";
}
.wlnet01{
	color: #007F00;
}
.wlnet03{
}
.wlnet04{
	color: #007F7F;
}
.wlnet05{
	color: #0000FF;
	font-weight: bold;
}
.wlnet06{
	color: #DC143C;
}
.wlnet07{
	color: #A52A00;
}
.wlnet10{
	color: #7F007F;
}
.wlnet12{
	color: #7F7F00;
}
.wlnet13{
	color: #478698;
}
.wlnet32{
}
.wlnet34{
	color: #0000EE;
	font-weight: bold;
}
.wlnet35{
	color: #EE0000;
	font-weight: bold;
}
.wlnet36{
	color: #808080;
}
	&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;pre class='wlnetcode'&gt;&lt;span class='wlnet05'&gt;protected&lt;/span&gt; &lt;span class='wlnet05'&gt;override&lt;/span&gt; &lt;span class='wlnet05'&gt;void&lt;/span&gt; &lt;span class='wlnet03'&gt;Execute&lt;/span&gt;()
{    
    &lt;span class='wlnet01'&gt;// Create a zero-filled series&lt;/span&gt;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;binSeries&lt;/span&gt; = &lt;span class='wlnet05'&gt;new&lt;/span&gt; &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt;(&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Binary Series&amp;quot;&lt;/span&gt;);
    &lt;span class='wlnet01'&gt;// Fill the series with values based on some logic&lt;/span&gt;
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;1&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet07'&gt;High&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;gt; &lt;span class='wlnet07'&gt;High&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] )
            &lt;span class='wlnet03'&gt;binSeries&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] = &lt;span class='wlnet04'&gt;1&lt;/span&gt;;
        &lt;span class='wlnet05'&gt;else&lt;/span&gt; &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet07'&gt;Low&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;lt; &lt;span class='wlnet07'&gt;Low&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt; - &lt;span class='wlnet04'&gt;1&lt;/span&gt;] )
            &lt;span class='wlnet03'&gt;binSeries&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] = -&lt;span class='wlnet04'&gt;1&lt;/span&gt;;
    }            
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;cp&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;(&lt;span class='wlnet04'&gt;40&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;false&lt;/span&gt;);
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;(&lt;span class='wlnet03'&gt;cp&lt;/span&gt;, &lt;span class='wlnet03'&gt;binSeries&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Black&lt;/span&gt;, &lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Histogram&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt;);
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;
</Description>
  </QuickRefCategory>
  <QuickRefCategory>
    <Name>Fundamental Data</Name>
    <CategoryType>Functional</CategoryType>
    <Entries>
      <QuickRefEntry>
        <Name>FundamentalDataItems</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;FundamentalDataItems&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;IList&amp;lt;FundamentalItem&amp;gt; FundamentalDataItems(string itemName);&lt;br&gt;
IList&amp;lt;FundamentalItem&amp;gt; FundamentalDataItems(string symbol, string itemName);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;The FundamentalDataItems object represents a collection of FundamentalItem objects.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Show the list of the fundamental data item &amp;quot;assets&amp;quot;&lt;/span&gt;

    &lt;span class='wlnet05'&gt;const&lt;/span&gt; &lt;span class='wlnet05'&gt;char&lt;/span&gt; &lt;span class='wlnet03'&gt;tab&lt;/span&gt; = '\&lt;span class='wlnet03'&gt;u0009&lt;/span&gt;';                                      
    &lt;span class='wlnet05'&gt;string&lt;/span&gt; &lt;span class='wlnet03'&gt;item&lt;/span&gt; = &lt;span class='wlnet10'&gt;&amp;quot;assets&amp;quot;&lt;/span&gt;;
    &lt;span class='wlnet03'&gt;IList&lt;/span&gt;&amp;lt;&lt;span class='wlnet03'&gt;FundamentalItem&lt;/span&gt;&amp;gt; &lt;span class='wlnet03'&gt;fList&lt;/span&gt; = &lt;span class='wlnet06'&gt;FundamentalDataItems&lt;/span&gt;(&lt;span class='wlnet03'&gt;item&lt;/span&gt;);            
    &lt;span class='wlnet06'&gt;ClearDebug&lt;/span&gt;();
    &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;(&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Symbol&lt;/span&gt; + &lt;span class='wlnet03'&gt;tab&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot;Item Count: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;fList&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;);
    &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;(&lt;span class='wlnet10'&gt;&amp;quot;FY&amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;tab&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot;FQ&amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;tab&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot;Bar&amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;tab&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot;Date      &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;tab&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot;Value&amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;tab&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot;FormatValue&amp;quot;&lt;/span&gt;);
    &lt;span class='wlnet05'&gt;foreach&lt;/span&gt; (&lt;span class='wlnet03'&gt;FundamentalItem&lt;/span&gt; &lt;span class='wlnet03'&gt;fi&lt;/span&gt; &lt;span class='wlnet05'&gt;in&lt;/span&gt; &lt;span class='wlnet03'&gt;fList&lt;/span&gt;)
    {
        &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;(&lt;span class='wlnet03'&gt;fi&lt;/span&gt;.&lt;span class='wlnet03'&gt;GetDetail&lt;/span&gt;(&lt;span class='wlnet10'&gt;&amp;quot;fiscal year&amp;quot;&lt;/span&gt;) + &lt;span class='wlnet03'&gt;tab&lt;/span&gt;
            + &lt;span class='wlnet03'&gt;fi&lt;/span&gt;.&lt;span class='wlnet03'&gt;GetDetail&lt;/span&gt;(&lt;span class='wlnet10'&gt;&amp;quot;current quarter&amp;quot;&lt;/span&gt;) + &lt;span class='wlnet03'&gt;tab&lt;/span&gt;
            + &lt;span class='wlnet03'&gt;fi&lt;/span&gt;.&lt;span class='wlnet03'&gt;Bar&lt;/span&gt;.&lt;span class='wlnet06'&gt;ToString&lt;/span&gt;() + &lt;span class='wlnet03'&gt;tab&lt;/span&gt; 
            + &lt;span class='wlnet03'&gt;fi&lt;/span&gt;.&lt;span class='wlnet07'&gt;Date&lt;/span&gt;.&lt;span class='wlnet03'&gt;ToShortDateString&lt;/span&gt;() + &lt;span class='wlnet03'&gt;tab&lt;/span&gt; 
            + &lt;span class='wlnet03'&gt;fi&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;.&lt;span class='wlnet06'&gt;ToString&lt;/span&gt;(&lt;span class='wlnet10'&gt;&amp;quot;$#,0.00&amp;quot;&lt;/span&gt;)
            + &lt;span class='wlnet03'&gt;tab&lt;/span&gt; + &lt;span class='wlnet03'&gt;fi&lt;/span&gt;.&lt;span class='wlnet03'&gt;FormatValue&lt;/span&gt;().&lt;span class='wlnet03'&gt;Replace&lt;/span&gt;(&lt;span class='wlnet10'&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot; &amp;quot;&lt;/span&gt;) );
    }                                              
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>FundamentalDataSeries</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;FundamentalDataSeries&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;
DataSeries FundamentalDataSeries(string itemName);&lt;br&gt;
DataSeries FundamentalDataSeries(string itemName, int offset);&lt;br&gt;
DataSeries FundamentalDataSeries(string itemName, int aggregate, int offset);&lt;br&gt;
DataSeries FundamentalDataSeries(string itemName, int aggregate, bool average, int offset);&lt;br&gt;
DataSeries FundamentalDataSeries(string symbol, string itemName);&lt;br&gt;
DataSeries FundamentalDataSeries(string symbol, string itemName, int aggregate, bool average, int offset);&lt;br&gt;
&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;
Returns a DataSeries that represents the fundamental data for the specified "fundamental &lt;b&gt;itemName&lt;/b&gt;".  To access symbol-specific fundamental data without calling SetContext, use one of the last two overload signatures to pass the stock &lt;b&gt;symbol&lt;/b&gt;.  The individual fundamental data items are synchronized to the Bars object that the Strategy is currently operating on, and the fundamental data values become the values of the resulting DataSeries.  Bars that do not contain any fundamental data items at their specific date will carry over the value of the previous, most recent fundamental data item.  The resulting DataSeries can be plotted on the chart and manipulated as any other normal DataSeries.
&lt;/p&gt;&lt;p&gt;
Aggregate, average, and offset parameters perform those operations on the itemName Fundamental DataSeries in the order in which they appear in the parameter list.  For example, a Fundamental DataSeries will first be aggregated by the number of integer aggregate periods specified.  Then, if average is true, the average of the aggregate series is returned.  Finally, the series is offset forward in time by the number of offset periods, where the period depends on the specified itemName.  (Generally, the period  is quarterly for corporate fundamental items.)  By offsetting, it's easy to determine quarter-over-quarter or year-over-year changes. 
&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;See the documentation for the DataSeries object for more information about its properties and methods.&lt;/li&gt;
&lt;li&gt;See the Fundamental Data Guide under the Help menu for a list of fundamental data &lt;b&gt;itemNames&lt;/b&gt; available.&lt;/li&gt;
&lt;li&gt;Use 0 or a positive number for aggregate and offset parameters.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;//  55/34 Breakout strategy with an asset twist&lt;/span&gt;
    
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;fundPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;(&lt;span class='wlnet04'&gt;40&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;false&lt;/span&gt;);
    &lt;span class='wlnet01'&gt;// Preferred plot method for Fundamental data items&lt;/span&gt;
    &lt;span class='wlnet06'&gt;PlotFundamentalItems&lt;/span&gt;(&lt;span class='wlnet03'&gt;fundPane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;assets&amp;quot;&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Green&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Invisible&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt;);               

    &lt;span class='wlnet01'&gt;// Plot &amp;quot;assets&amp;quot; in a time series&lt;/span&gt;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;assets&lt;/span&gt; = &lt;span class='wlnet06'&gt;FundamentalDataSeries&lt;/span&gt;(&lt;span class='wlnet10'&gt;&amp;quot;assets&amp;quot;&lt;/span&gt;);
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;(&lt;span class='wlnet03'&gt;fundPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;assets&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Black&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt;);

    &lt;span class='wlnet01'&gt;// Delay highest and lowest series by 1 bar to check Closing crossovers/unders&lt;/span&gt;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;highest&lt;/span&gt; = &lt;span class='wlnet03'&gt;Highest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;(&lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet04'&gt;55&lt;/span&gt;) &amp;gt;&amp;gt; &lt;span class='wlnet04'&gt;1&lt;/span&gt;;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;lowest&lt;/span&gt; = &lt;span class='wlnet03'&gt;Lowest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;(&lt;span class='wlnet07'&gt;Low&lt;/span&gt;, &lt;span class='wlnet04'&gt;34&lt;/span&gt;) &amp;gt;&amp;gt; &lt;span class='wlnet04'&gt;1&lt;/span&gt;;

    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;(&lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;highest&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Green&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Dashed&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;(&lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;lowest&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Dashed&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );

    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;) {
            &lt;span class='wlnet01'&gt;// exit if assets drop below $50M&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet06'&gt;CrossUnder&lt;/span&gt;(&lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;assets&lt;/span&gt;, &lt;span class='wlnet04'&gt;50000d&lt;/span&gt;))
                &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;(&lt;span class='wlnet03'&gt;bar&lt;/span&gt; + &lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;assets &amp;lt; $50M&amp;quot;&lt;/span&gt;);
            &lt;span class='wlnet05'&gt;else&lt;/span&gt; &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet06'&gt;CrossUnder&lt;/span&gt;(&lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet03'&gt;lowest&lt;/span&gt;))
                &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;(&lt;span class='wlnet03'&gt;bar&lt;/span&gt; + &lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;lowest 34&amp;quot;&lt;/span&gt;);
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt; { 
            &lt;span class='wlnet01'&gt;// Trade this instrument only if assets are over $50M                         &lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet03'&gt;assets&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;gt; &lt;span class='wlnet04'&gt;50000d&lt;/span&gt;)
                &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet06'&gt;CrossOver&lt;/span&gt;(&lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet03'&gt;highest&lt;/span&gt;))
                    &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;(&lt;span class='wlnet03'&gt;bar&lt;/span&gt; + &lt;span class='wlnet04'&gt;1&lt;/span&gt;);                                       
        }     
    }
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>FundamentalDataSeriesAnnual</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;FundamentalDataSeriesAnnual&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;
DataSeries FundamentalDataSeriesAnnual (string itemName, int offset);&lt;br&gt;
DataSeries FundamentalDataSeriesAnnual (string  symbol, string itemName, int offset);&lt;br&gt;
&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;
Returns a DataSeries that sums the 4 quarters of the Fiscal Year.  This function is used in the ratio rules that are based on annual growth rates.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;//Calculate and plot the percentage annual earning growth&lt;/span&gt;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;income&lt;/span&gt; = &lt;span class='wlnet06'&gt;FundamentalDataSeriesAnnual&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;net income&amp;quot;&lt;/span&gt;, &lt;span class='wlnet04'&gt;0&lt;/span&gt; );                                               
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;income2&lt;/span&gt; = &lt;span class='wlnet06'&gt;FundamentalDataSeriesAnnual&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;net income&amp;quot;&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;EG&lt;/span&gt; = &lt;span class='wlnet04'&gt;100&lt;/span&gt; * (&lt;span class='wlnet03'&gt;income&lt;/span&gt; - &lt;span class='wlnet03'&gt;income2&lt;/span&gt;) &lt;span class='wlnet01'&gt;/ DataSeries.Abs(income2);&lt;/span&gt;

    &lt;span class='wlnet01'&gt;// Plot the annualized income&lt;/span&gt;
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;annualIncomePane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;(&lt;span class='wlnet04'&gt;40&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;);
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;annualIncomePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;income&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;2&lt;/span&gt;);

    &lt;span class='wlnet01'&gt;// Plot the earnings growth&lt;/span&gt;
    &lt;span class='wlnet03'&gt;EG&lt;/span&gt;.&lt;span class='wlnet03'&gt;Description&lt;/span&gt; = &lt;span class='wlnet10'&gt;&amp;quot;Annual Earnings Growth %&amp;quot;&lt;/span&gt;;
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;egPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;(&lt;span class='wlnet04'&gt;40&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;(&lt;span class='wlnet03'&gt;egPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;EG&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Green&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Histogram&lt;/span&gt;, &lt;span class='wlnet04'&gt;2&lt;/span&gt;);                                                                                           
}

&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>GetFundamentalItem</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;GetFundamentalItem&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;FundamentalItem GetFundamentalItem (int bar, string symbol, string itemName);&lt;/font&gt;&lt;br&gt;
&lt;/p&gt;
&lt;p&gt;Returns the FundamentalItem object for itemName that corresponds to the specified bar and symbol.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;To avoid runtime errors, test for a null object before using the result.&lt;/li&gt;
&lt;li&gt;A FundamentalItem "off the chart" can be returned, and in this case the its &lt;i&gt;Bar&lt;/i&gt; property will be set to -1.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; - &lt;span class='wlnet04'&gt;1&lt;/span&gt;;
    &lt;span class='wlnet03'&gt;FundamentalItem&lt;/span&gt; &lt;span class='wlnet03'&gt;fi&lt;/span&gt; = &lt;span class='wlnet06'&gt;GetFundamentalItem&lt;/span&gt;(&lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Symbol&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;assets&amp;quot;&lt;/span&gt;);
    &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet03'&gt;fi&lt;/span&gt; != &lt;span class='wlnet05'&gt;null&lt;/span&gt;)
        &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;(&lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Current assets: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;fi&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;.&lt;span class='wlnet06'&gt;ToString&lt;/span&gt;(&lt;span class='wlnet10'&gt;&amp;quot;$#,0&amp;quot;&lt;/span&gt;) + &lt;span class='wlnet10'&gt;&amp;quot; (millions)&amp;quot;&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;);
    &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;(&lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Current assets: not available&amp;quot;&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;);                                                      
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt; </Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>GetNextFundamentalItem</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;GetNextFundamentalItem&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;FundamentalItem GetNextFundamentalItem (int bar, string symbol, string itemName);&lt;br&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;p&gt;Returns the FundamentalItem object for itemName following the one that corresponds to the specified bar and symbol.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;To avoid runtime errors, test for a null object before using the result.&lt;/li&gt;
&lt;li&gt;A FundamentalItem "off the chart" can be returned, and in this case the its &lt;i&gt;Bar&lt;/i&gt; property will be set to -1.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;0&lt;/span&gt;;
    &lt;span class='wlnet03'&gt;FundamentalItem&lt;/span&gt; &lt;span class='wlnet03'&gt;fi&lt;/span&gt; = &lt;span class='wlnet06'&gt;GetNextFundamentalItem&lt;/span&gt;(&lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Symbol&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;assets&amp;quot;&lt;/span&gt;);
    &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet03'&gt;fi&lt;/span&gt; != &lt;span class='wlnet05'&gt;null&lt;/span&gt;)
        &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;(&lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;first assets report in chart range &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;fi&lt;/span&gt;.&lt;span class='wlnet07'&gt;Date&lt;/span&gt;.&lt;span class='wlnet03'&gt;ToShortDateString&lt;/span&gt;() + &lt;span class='wlnet10'&gt;&amp;quot;: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;fi&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;.&lt;span class='wlnet06'&gt;ToString&lt;/span&gt;(&lt;span class='wlnet10'&gt;&amp;quot;$#,0&amp;quot;&lt;/span&gt;) + &lt;span class='wlnet10'&gt;&amp;quot; (millions)&amp;quot;&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;);
    &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;(&lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;assets: not available&amp;quot;&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;);                                                     
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
    </Entries>
    <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Fundamental Data&lt;/h1&gt;
&lt;p&gt;The Fundamental Data category consists of methods you can use to access and 
manipulate fundamental data.&lt;/p&gt;



&lt;/html&gt;</Description>
  </QuickRefCategory>
  <QuickRefCategory>
    <Name>FundamentalItem Object</Name>
    <CategoryType>Object</CategoryType>
    <Entries>
      <QuickRefEntry>
        <Name>Bar</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Bar Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;
int Bar&lt;br&gt;
&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;
Returns the bar number of the chart to which the FundamentalItem is synchronized.
&lt;/p&gt;
&lt;p&gt;
Example (see FundamentalDataItems)
&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example />
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Date</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Date Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;
DateTime Date&lt;br&gt;
&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;
Returns the report Date corresponding to the FundamentalItem. 
&lt;/p&gt;
&lt;p&gt;
Example (see FundamentalDataItems)
&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example />
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>FormatValue</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;FormatValue Method&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;
string FormatValue&lt;br&gt;
&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;
Returns a string containing a summary of the FundamentalItem's data.
&lt;/p&gt;
&lt;p&gt;
Example (see FundamentalDataItems)
&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example />
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>GetDetail</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;GetDetail Method&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;
string GetDetail(string detailName);&lt;br&gt;
&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;
Returns a string value of the specified detailName.  Valid detailNames for the various fundamental types are as follows:&lt;br&gt;
&lt;br&gt;
Analyst Ratings:&lt;br&gt;
"firm name"; "normalized rating"; "action code"; "prev normalized rating"; "analyst name"; &lt;br&gt;
&lt;br&gt;
Economics&lt;br&gt;
"period"; "observation date"; "ref id";&lt;br&gt;
"period"; can be: "annual"; "yearly"; "monthly"; "quarterly"; "semi-annual"; "weekly";&lt;br&gt;
&lt;br&gt;
 Estimated Earnings&lt;br&gt;
"period"; "current quarter"; "fiscal year"; "calendar year"; "current qtr month";  "sum TTM mean value"; "sum FTM mean value"; &lt;br&gt;
"period"; can be: "annual"; "yearly"; "monthly"; "quarterly"; "semi-annual"; "weekly";&lt;br&gt;
&lt;br&gt;
 Fundamentals&lt;br&gt;
"period"; "current quarter"; "fiscal year";&lt;br&gt;
"period"; can be: "annual"; "yearly"; "monthly"; "quarterly"; "semi-annual"; "weekly";&lt;br&gt;
&lt;br&gt;
 Earnings per Share&lt;br&gt;
"period"; "current quarter"; "fiscal year";&lt;br&gt;
"period"; can be: "annual"; "yearly"; "monthly"; "quarterly"; "semi-annual"; "weekly";&lt;br&gt;
&lt;br&gt;
 Insider Transactions&lt;br&gt;
"transaction type"; "count"; "shares"; "insider"; "title";&lt;br&gt;
"transaction type" can be: "B"; "S"; "N";&lt;br&gt;
Since multiple transactions are stored per each item, if "transaction type" equals "B" or "S", then a count is appended to "shares", "insider", and "title"; e.g. "shares1", "insider1", and "title1"; up to "count". For "net insider transactions", "transaction type" has the same treatment.&lt;br&gt;
&lt;br&gt;
Splits and Dividends:&lt;br&gt;
"DPC"&lt;br&gt;
&lt;/p&gt;
&lt;p&gt;
Example (see FundamentalDataItems)
&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example />
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Name</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Name Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;
string Name&lt;br&gt;
&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;
Returns a string containing the itemName of the FundamentalItem. 
&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example />
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Value</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Value Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;
double Value&lt;br&gt;
&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;
Returns a unit-less floating point value associated with the FundamentalItem.  (Most FundamentalItem values are expressed in millions.)
&lt;/p&gt;
&lt;p&gt;
Example (see FundamentalDataItems)
&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example />
        <EntryType>Property</EntryType>
      </QuickRefEntry>
    </Entries>
    <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;FundamentalItem Object&lt;/h1&gt;
&lt;p&gt;The FundamentalItem object represents a single instance of a fundamental data 
point.&lt;/p&gt;



&lt;/html&gt;</Description>
  </QuickRefCategory>
  <QuickRefCategory>
    <Name>MarketInfo Object</Name>
    <CategoryType>Object</CategoryType>
    <Entries>
      <QuickRefEntry>
        <Name>CloseTimeNative</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;CloseTimeNative Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;DateTime CloseTimeNative&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Return the time that the market typically closes, in its native time zone.&lt;/p&gt;
&lt;p&gt;Example (see SpecialHours)&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example />
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Description</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Description Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;string Description&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Return a brief description of the market.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example />
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Holidays</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Holidays Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;List&amp;lt;DateTime&amp;gt; Holidays&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Return a list of DateTime objects that represent the market's holidays; days that it does not trade.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
&lt;span class='wlnet05'&gt;char&lt;/span&gt; &lt;span class='wlnet03'&gt;tab&lt;/span&gt; = '\&lt;span class='wlnet03'&gt;t&lt;/span&gt;';
            &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Total Holiday count: &amp;quot;&lt;/span&gt;+ &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;MarketInfo&lt;/span&gt;.&lt;span class='wlnet03'&gt;Holidays&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; );
            &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;------------------------&amp;quot;&lt;/span&gt; );
            &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Date&amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;tab&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot;Market Name&amp;quot;&lt;/span&gt; );
            &lt;span class='wlnet05'&gt;foreach&lt;/span&gt; (&lt;span class='wlnet03'&gt;DateTime&lt;/span&gt; &lt;span class='wlnet03'&gt;dt&lt;/span&gt; &lt;span class='wlnet05'&gt;in&lt;/span&gt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;MarketInfo&lt;/span&gt;.&lt;span class='wlnet03'&gt;Holidays&lt;/span&gt;)
                &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet03'&gt;dt&lt;/span&gt;.&lt;span class='wlnet03'&gt;ToShortDateString&lt;/span&gt;() + &lt;span class='wlnet03'&gt;tab&lt;/span&gt; + &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;MarketInfo&lt;/span&gt;.&lt;span class='wlnet03'&gt;Name&lt;/span&gt;.&lt;span class='wlnet06'&gt;ToString&lt;/span&gt;() );

        }
    }
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Name</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Name Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;string Name&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Return the name of the market.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example />
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>OpenTimeNative</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;OpenTimeNative Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;DateTime OpenTimeNative&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Return the standard time that the market opens for trading, in its native time zone.&lt;/p&gt;
&lt;p&gt;Example (see SpecialHours)&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example />
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>SpecialHours</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;SpecialHours Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;List&amp;lt;MarketSpecialHours&amp;gt; SpecialHours&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Return a list of MarketSpecialHours objects that represent days where the market has special trading hours.  The MarketSpecialHours class contains only three properties, all DateTimes: Date, OpenTimeNative, and CloseTimeNative.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
&lt;span class='wlnet05'&gt;char&lt;/span&gt; &lt;span class='wlnet03'&gt;tab&lt;/span&gt; = '\&lt;span class='wlnet03'&gt;t&lt;/span&gt;';
            &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Total Shortened Session count: &amp;quot;&lt;/span&gt;+ &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;MarketInfo&lt;/span&gt;.&lt;span class='wlnet03'&gt;SpecialHours&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; );
            &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;------------------------&amp;quot;&lt;/span&gt; );
            &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Date&amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;tab&lt;/span&gt; + &lt;span class='wlnet03'&gt;tab&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot;Open&amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;tab&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot;Close&amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;tab&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot;Market Name&amp;quot;&lt;/span&gt; );
            &lt;span class='wlnet05'&gt;foreach&lt;/span&gt; (&lt;span class='wlnet03'&gt;MarketSpecialHours&lt;/span&gt; &lt;span class='wlnet03'&gt;sh&lt;/span&gt; &lt;span class='wlnet05'&gt;in&lt;/span&gt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;MarketInfo&lt;/span&gt;.&lt;span class='wlnet03'&gt;SpecialHours&lt;/span&gt;)
                &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet03'&gt;sh&lt;/span&gt;.&lt;span class='wlnet07'&gt;Date&lt;/span&gt;.&lt;span class='wlnet03'&gt;ToShortDateString&lt;/span&gt;() + &lt;span class='wlnet03'&gt;tab&lt;/span&gt; + &lt;span class='wlnet03'&gt;sh&lt;/span&gt;.&lt;span class='wlnet03'&gt;OpenTimeNative&lt;/span&gt;.&lt;span class='wlnet06'&gt;ToString&lt;/span&gt;(&lt;span class='wlnet10'&gt;&amp;quot;t&amp;quot;&lt;/span&gt;) + &lt;span class='wlnet03'&gt;tab&lt;/span&gt; + 
                    &lt;span class='wlnet03'&gt;sh&lt;/span&gt;.&lt;span class='wlnet03'&gt;CloseTimeNative&lt;/span&gt;.&lt;span class='wlnet06'&gt;ToString&lt;/span&gt;(&lt;span class='wlnet10'&gt;&amp;quot;t&amp;quot;&lt;/span&gt;) + &lt;span class='wlnet03'&gt;tab&lt;/span&gt; + &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;MarketInfo&lt;/span&gt;.&lt;span class='wlnet03'&gt;Name&lt;/span&gt;.&lt;span class='wlnet06'&gt;ToString&lt;/span&gt;() );

        }
    }
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>TimeZoneName</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;TimeZoneName Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;string TimeZoneName&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Return the Windows string representing the time zone that the market trades in.  For example, for EST, return "Eastern Standard Time".&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example />
        <EntryType>Property</EntryType>
      </QuickRefEntry>
    </Entries>
    <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;MarketInfo Class&lt;/h1&gt;
&lt;p&gt;The MarketInfo class represents a single market, including its open and closing times, the time zone it trades in, and its holidays and days that have special open and close times.&lt;/p&gt;
&lt;/html&gt;</Description>
  </QuickRefCategory>
  <QuickRefCategory>
    <Name>Math</Name>
    <CategoryType>Functional</CategoryType>
    <Entries>
      <QuickRefEntry>
        <Name>LinearRegLine</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;LinearRegLine&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;double LinearRegLine(DataSeries series, int bar1, int bar2, double predict);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Allows you to perform ad-hoc linear regression analysis on the specified DataSeries. Specify the Start and End bars (&lt;b&gt;bar1&lt;/b&gt; and &lt;b&gt;bar2&lt;/b&gt;) for which to calculate the regression line.  Then, specify the bar, &lt;b&gt;predict&lt;/b&gt;, for which you want to predict a value.  This could be a bar that extends into the future.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;StBar&lt;/span&gt; = &lt;span class='wlnet04'&gt;0&lt;/span&gt;; &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;EndBar&lt;/span&gt; = &lt;span class='wlnet04'&gt;0&lt;/span&gt;; 
            &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;Diff&lt;/span&gt; = &lt;span class='wlnet04'&gt;0&lt;/span&gt;; &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;MaxDiff&lt;/span&gt; = &lt;span class='wlnet04'&gt;0&lt;/span&gt;;

            &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
            {
                &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
                {
                    &lt;span class='wlnet01'&gt;/* Exit after N days */
                    &lt;/span&gt;
                    &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; = &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;;
                    &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; - &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryBar&lt;/span&gt; &amp;gt;= &lt;span class='wlnet04'&gt;20&lt;/span&gt; )
                        &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Timed&amp;quot;&lt;/span&gt; ); 
                }
                &lt;span class='wlnet05'&gt;else&lt;/span&gt;
                {
                    &lt;span class='wlnet06'&gt;BuyAtLimit&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]*&lt;span class='wlnet04'&gt;0.95&lt;/span&gt; );
                }
            }

            &lt;span class='wlnet01'&gt;/* Highlight the regression channel of winning trades */
&lt;/span&gt;
            &lt;span class='wlnet05'&gt;foreach&lt;/span&gt;( &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; &lt;span class='wlnet05'&gt;in&lt;/span&gt; &lt;span class='wlnet07'&gt;Positions&lt;/span&gt; )
            {
                &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;NetProfit&lt;/span&gt; &amp;gt; &lt;span class='wlnet04'&gt;0&lt;/span&gt; )
                {
                    &lt;span class='wlnet03'&gt;StBar&lt;/span&gt; = &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryBar&lt;/span&gt;;
                    &lt;span class='wlnet03'&gt;EndBar&lt;/span&gt; = &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;ExitBar&lt;/span&gt;;
                    &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet03'&gt;EndBar&lt;/span&gt; == -&lt;span class='wlnet04'&gt;1&lt;/span&gt; )
                        &lt;span class='wlnet03'&gt;EndBar&lt;/span&gt; = &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; - &lt;span class='wlnet04'&gt;1&lt;/span&gt;;
                    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;StPnt&lt;/span&gt; = &lt;span class='wlnet06'&gt;LinearRegLine&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet03'&gt;StBar&lt;/span&gt;, &lt;span class='wlnet03'&gt;EndBar&lt;/span&gt;, (&lt;span class='wlnet05'&gt;double&lt;/span&gt;)&lt;span class='wlnet03'&gt;StBar&lt;/span&gt; );
                    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;EnPnt&lt;/span&gt; = &lt;span class='wlnet06'&gt;LinearRegLine&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet03'&gt;StBar&lt;/span&gt;, &lt;span class='wlnet03'&gt;EndBar&lt;/span&gt;, (&lt;span class='wlnet05'&gt;double&lt;/span&gt;)&lt;span class='wlnet03'&gt;EndBar&lt;/span&gt; );
                    &lt;span class='wlnet03'&gt;MaxDiff&lt;/span&gt; = &lt;span class='wlnet04'&gt;0&lt;/span&gt;;
                    
                    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet03'&gt;StBar&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt;= &lt;span class='wlnet03'&gt;EndBar&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
                    {
                        &lt;span class='wlnet03'&gt;Diff&lt;/span&gt; = &lt;span class='wlnet03'&gt;Math&lt;/span&gt;.&lt;span class='wlnet03'&gt;Abs&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] - &lt;span class='wlnet06'&gt;LinearRegLine&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet03'&gt;StBar&lt;/span&gt;, &lt;span class='wlnet03'&gt;EndBar&lt;/span&gt;, (&lt;span class='wlnet05'&gt;double&lt;/span&gt;)&lt;span class='wlnet03'&gt;bar&lt;/span&gt; ) );                        
                        &lt;span class='wlnet03'&gt;MaxDiff&lt;/span&gt; = &lt;span class='wlnet03'&gt;Math&lt;/span&gt;.&lt;span class='wlnet03'&gt;Max&lt;/span&gt;( &lt;span class='wlnet03'&gt;Diff&lt;/span&gt;, &lt;span class='wlnet03'&gt;MaxDiff&lt;/span&gt; );
                    }
                    
                    &lt;span class='wlnet05'&gt;double&lt;/span&gt;[] &lt;span class='wlnet03'&gt;rectangle&lt;/span&gt; = { &lt;span class='wlnet03'&gt;StBar&lt;/span&gt;, &lt;span class='wlnet03'&gt;StPnt&lt;/span&gt; - &lt;span class='wlnet03'&gt;MaxDiff&lt;/span&gt;, &lt;span class='wlnet03'&gt;StBar&lt;/span&gt;, &lt;span class='wlnet03'&gt;StPnt&lt;/span&gt; + &lt;span class='wlnet03'&gt;MaxDiff&lt;/span&gt;, &lt;span class='wlnet03'&gt;EndBar&lt;/span&gt;, &lt;span class='wlnet03'&gt;EnPnt&lt;/span&gt; + &lt;span class='wlnet03'&gt;MaxDiff&lt;/span&gt;, &lt;span class='wlnet03'&gt;EndBar&lt;/span&gt;, &lt;span class='wlnet03'&gt;EnPnt&lt;/span&gt; - &lt;span class='wlnet03'&gt;MaxDiff&lt;/span&gt; };
                    
                    &lt;span class='wlnet06'&gt;DrawPolygon&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;FromArgb&lt;/span&gt;( &lt;span class='wlnet04'&gt;80&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;LightGreen&lt;/span&gt; ), &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;FromArgb&lt;/span&gt;( &lt;span class='wlnet04'&gt;80&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;LightGreen&lt;/span&gt; ),
                        &lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet03'&gt;rectangle&lt;/span&gt; );
                }
            }
        }
    }
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>LineExtendX</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;LineExtendX&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;double LineExtendX(double x1, double y1, double x2, 
double y2, double y);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Extends the line specified by the x1, y1 and x2, y2 parameters, solving for x 
using the specified y parameter.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;The equation used in the solution assumes a linear (not logarithmic) 
  y-scale axis.&lt;/li&gt;
&lt;/ul&gt;
&lt;p class="MsoNormal"&gt;&amp;nbsp;&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Determine middle bar between last 2 peaks &lt;/span&gt;
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;;
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;rev&lt;/span&gt; = &lt;span class='wlnet04'&gt;5&lt;/span&gt;;
                
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar1&lt;/span&gt; = (&lt;span class='wlnet05'&gt;int&lt;/span&gt;)&lt;span class='wlnet03'&gt;PeakBar&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet03'&gt;rev&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Indicators&lt;/span&gt;.&lt;span class='wlnet03'&gt;PeakTroughMode&lt;/span&gt;.&lt;span class='wlnet03'&gt;Percent&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;price1&lt;/span&gt; = &lt;span class='wlnet03'&gt;Peak&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet03'&gt;rev&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Indicators&lt;/span&gt;.&lt;span class='wlnet03'&gt;PeakTroughMode&lt;/span&gt;.&lt;span class='wlnet03'&gt;Percent&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar2&lt;/span&gt; = (&lt;span class='wlnet05'&gt;int&lt;/span&gt;)&lt;span class='wlnet03'&gt;PeakBar&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar1&lt;/span&gt;, &lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet03'&gt;rev&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Indicators&lt;/span&gt;.&lt;span class='wlnet03'&gt;PeakTroughMode&lt;/span&gt;.&lt;span class='wlnet03'&gt;Percent&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;price2&lt;/span&gt; = &lt;span class='wlnet03'&gt;Peak&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar1&lt;/span&gt;, &lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet03'&gt;rev&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Indicators&lt;/span&gt;.&lt;span class='wlnet03'&gt;PeakTroughMode&lt;/span&gt;.&lt;span class='wlnet03'&gt;Percent&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;price3&lt;/span&gt; = ( &lt;span class='wlnet03'&gt;price1&lt;/span&gt; + &lt;span class='wlnet03'&gt;price2&lt;/span&gt; ) &lt;span class='wlnet01'&gt;/ 2;                        &lt;/span&gt;
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar3&lt;/span&gt; = (&lt;span class='wlnet05'&gt;int&lt;/span&gt;) &lt;span class='wlnet06'&gt;LineExtendX&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar1&lt;/span&gt;, &lt;span class='wlnet03'&gt;price1&lt;/span&gt;, &lt;span class='wlnet03'&gt;bar2&lt;/span&gt;, &lt;span class='wlnet03'&gt;price2&lt;/span&gt;, &lt;span class='wlnet03'&gt;price3&lt;/span&gt; );

    &lt;span class='wlnet06'&gt;SetBarColor&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar3&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;if&lt;/span&gt;( ( &lt;span class='wlnet03'&gt;bar2&lt;/span&gt; &amp;gt; -&lt;span class='wlnet04'&gt;1&lt;/span&gt; ) &amp;amp; ( &lt;span class='wlnet03'&gt;bar1&lt;/span&gt; &amp;gt; -&lt;span class='wlnet04'&gt;1&lt;/span&gt; ) )
        &lt;span class='wlnet06'&gt;DrawLine&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;bar1&lt;/span&gt;, &lt;span class='wlnet03'&gt;price1&lt;/span&gt;, &lt;span class='wlnet03'&gt;bar2&lt;/span&gt;, &lt;span class='wlnet03'&gt;price2&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>LineExtendY</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;LineExtendY&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;double LineExtendY(double x1, double y1, double x2, 
double y2, double x);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Extends the line specified by the x1, y1 and x2, y2 parameters, solving for y 
using the specified x parameter.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;The equation used in the solution assumes a linear (not logarithmic) 
  y-scale axis.&lt;/li&gt;
  &lt;li&gt;Use the &lt;b&gt;LineExtendYLog&lt;/b&gt; method for logarithmic y-scale axis.&lt;/li&gt;
&lt;/ul&gt;
&lt;p class="MsoNormal"&gt;&amp;nbsp;&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Extend recent resistance line to most current bar&lt;/span&gt;
    
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;;
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;rev&lt;/span&gt; = &lt;span class='wlnet04'&gt;5&lt;/span&gt;;
                
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar1&lt;/span&gt; = (&lt;span class='wlnet05'&gt;int&lt;/span&gt;)&lt;span class='wlnet03'&gt;PeakBar&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet03'&gt;rev&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Indicators&lt;/span&gt;.&lt;span class='wlnet03'&gt;PeakTroughMode&lt;/span&gt;.&lt;span class='wlnet03'&gt;Percent&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;price1&lt;/span&gt; = &lt;span class='wlnet03'&gt;Peak&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet03'&gt;rev&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Indicators&lt;/span&gt;.&lt;span class='wlnet03'&gt;PeakTroughMode&lt;/span&gt;.&lt;span class='wlnet03'&gt;Percent&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar2&lt;/span&gt; = (&lt;span class='wlnet05'&gt;int&lt;/span&gt;)&lt;span class='wlnet03'&gt;PeakBar&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar1&lt;/span&gt;, &lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet03'&gt;rev&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Indicators&lt;/span&gt;.&lt;span class='wlnet03'&gt;PeakTroughMode&lt;/span&gt;.&lt;span class='wlnet03'&gt;Percent&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;price2&lt;/span&gt; = &lt;span class='wlnet03'&gt;Peak&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar1&lt;/span&gt;, &lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet03'&gt;rev&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Indicators&lt;/span&gt;.&lt;span class='wlnet03'&gt;PeakTroughMode&lt;/span&gt;.&lt;span class='wlnet03'&gt;Percent&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;price3&lt;/span&gt; = &lt;span class='wlnet06'&gt;LineExtendY&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar1&lt;/span&gt;, &lt;span class='wlnet03'&gt;price1&lt;/span&gt;, &lt;span class='wlnet03'&gt;bar2&lt;/span&gt;, &lt;span class='wlnet03'&gt;price2&lt;/span&gt;, &lt;span class='wlnet03'&gt;bar&lt;/span&gt; );
                
    &lt;span class='wlnet06'&gt;DrawLine&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;bar1&lt;/span&gt;, &lt;span class='wlnet03'&gt;price1&lt;/span&gt;, &lt;span class='wlnet03'&gt;bar2&lt;/span&gt;, &lt;span class='wlnet03'&gt;price2&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;DrawLine&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;bar2&lt;/span&gt;, &lt;span class='wlnet03'&gt;price2&lt;/span&gt;, &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;price3&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>LineExtendYLog</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;LineExtendYLog&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;double LineExtendYLog(double x1, double y1, double x2, 
double y2, double x);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Extends the line specified by the x1, y1 and x2, y2 parameters, solving for y 
using the specified x parameter.&amp;nbsp; A logarithmic y-scale axis is assumed.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Extend recent resistance line to most current bar&lt;/span&gt;
    
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;;
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;rev&lt;/span&gt; = &lt;span class='wlnet04'&gt;5&lt;/span&gt;;
                
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar1&lt;/span&gt; = (&lt;span class='wlnet05'&gt;int&lt;/span&gt;)&lt;span class='wlnet03'&gt;PeakBar&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet03'&gt;rev&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Indicators&lt;/span&gt;.&lt;span class='wlnet03'&gt;PeakTroughMode&lt;/span&gt;.&lt;span class='wlnet03'&gt;Percent&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;price1&lt;/span&gt; = &lt;span class='wlnet03'&gt;Peak&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet03'&gt;rev&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Indicators&lt;/span&gt;.&lt;span class='wlnet03'&gt;PeakTroughMode&lt;/span&gt;.&lt;span class='wlnet03'&gt;Percent&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar2&lt;/span&gt; = (&lt;span class='wlnet05'&gt;int&lt;/span&gt;)&lt;span class='wlnet03'&gt;PeakBar&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar1&lt;/span&gt;, &lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet03'&gt;rev&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Indicators&lt;/span&gt;.&lt;span class='wlnet03'&gt;PeakTroughMode&lt;/span&gt;.&lt;span class='wlnet03'&gt;Percent&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;price2&lt;/span&gt; = &lt;span class='wlnet03'&gt;Peak&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar1&lt;/span&gt;, &lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet03'&gt;rev&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Indicators&lt;/span&gt;.&lt;span class='wlnet03'&gt;PeakTroughMode&lt;/span&gt;.&lt;span class='wlnet03'&gt;Percent&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;price3&lt;/span&gt; = &lt;span class='wlnet06'&gt;LineExtendYLog&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar1&lt;/span&gt;, &lt;span class='wlnet03'&gt;price1&lt;/span&gt;, &lt;span class='wlnet03'&gt;bar2&lt;/span&gt;, &lt;span class='wlnet03'&gt;price2&lt;/span&gt;, &lt;span class='wlnet03'&gt;bar&lt;/span&gt; );
                
    &lt;span class='wlnet06'&gt;DrawLine&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;bar1&lt;/span&gt;, &lt;span class='wlnet03'&gt;price1&lt;/span&gt;, &lt;span class='wlnet03'&gt;bar2&lt;/span&gt;, &lt;span class='wlnet03'&gt;price2&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;DrawLine&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;bar2&lt;/span&gt;, &lt;span class='wlnet03'&gt;price2&lt;/span&gt;, &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;price3&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
    </Entries>
    <Description />
  </QuickRefCategory>
  <QuickRefCategory>
    <Name>Options</Name>
    <CategoryType>Functional</CategoryType>
    <Entries>
      <QuickRefEntry>
        <Name>CreateSyntheticOption</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;CreateSyntheticOption&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;CreateSyntheticOption&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;Bars CreateSyntheticOption(DateTime startDate, DateTime expiryDate, double strikePrice, bool isCallOption);&lt;br&gt;
Bars CreateSyntheticOption(int asOfBar, int atLeastXDaysTilExpiration, int daysToPlotBeforeCreation, bool isCallOption);
&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Creates and returns a Bars object for a synthetic option contract of the symbol currently being processed with the specified parameters:&amp;nbsp;
&lt;ul&gt;
&lt;li&gt;start date, expiry date, strike price.&amp;nbsp;&lt;/&lt;li&gt;
&lt;li&gt;as of bar (creation date), number of calendar days to allow until expiration, number of calendar days to plot before creation date&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;
&lt;p&gt;The boolean parameter &lt;b&gt;isCallOption&lt;/b&gt; specifies whether the option will be a call (true) or a put (false) contract.&amp;nbsp; 
The resulting Bars object's symbol has the following components: &lt;i&gt;!_symbol_strike_YYMMDD_optionType&lt;/i&gt;,
where YYMMDD is the monthly expiry and type is either &lt;i&gt;CALL&lt;/i&gt; or &lt;i&gt;PUT&lt;/i&gt;.&amp;nbsp;&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;The first overload accepts any valid date for expiryDate&lt;/li&gt;
  &lt;li&gt;Unless specified by the first overload, monthly contract expiry dates are assumed&lt;/li&gt;
  &lt;li&gt;The Bars object will be returned in the same data scale as the Bars object that the Strategy is currently operating on.&lt;/li&gt;
  &lt;li&gt;When using the second overload method, the strike for both puts and calls is implicitly derived from the integer part of the closing price on the bar passed to the asOfBar parameter.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; Live options trading is not supported by Wealth-Lab. This method returns hypothetical data.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Disclaimer:&lt;/b&gt; Backtesting provides a hypothetical calculation of how a security or portfolio of securities, subject to a trading strategy, would have performed over a historical time period. You should not assume that backtesting of a trading strategy will provide any indication of how your portfolio of securities, or a new portfolio of securities, might perform over time. You should choose your own trading strategies based on your particular objectives and risk tolerances. Be sure to review your decisions periodically to make sure they are still consistent with your goals. Past performance is no guarantee of future results.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
            &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;optionPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;(&lt;span class='wlnet04'&gt;50&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;);
            
            &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;30&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
            {
                &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
                {
                    &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet03'&gt;CumUp&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; ) &amp;gt;= &lt;span class='wlnet04'&gt;2&lt;/span&gt; )
                    {
                        &lt;span class='wlnet01'&gt;// Sell the call&lt;/span&gt;
                        &lt;span class='wlnet07'&gt;Bars&lt;/span&gt; &lt;span class='wlnet03'&gt;contract&lt;/span&gt; = &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;;
                        &lt;span class='wlnet06'&gt;SetContext&lt;/span&gt;( &lt;span class='wlnet03'&gt;contract&lt;/span&gt; );
                        &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Sell call&amp;quot;&lt;/span&gt; );
                        &lt;span class='wlnet06'&gt;RestoreContext&lt;/span&gt;();                    
                    }
                }
                &lt;span class='wlnet05'&gt;else&lt;/span&gt;
                {
                    &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet03'&gt;CumDown&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; ) &amp;gt;= &lt;span class='wlnet04'&gt;4&lt;/span&gt; )
                    {
                        &lt;span class='wlnet01'&gt;// Buy the call contract that has at least 30 days to expiry. &lt;/span&gt;
                        &lt;span class='wlnet07'&gt;Bars&lt;/span&gt; &lt;span class='wlnet03'&gt;contract&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreateSyntheticOption&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet04'&gt;30&lt;/span&gt;, &lt;span class='wlnet04'&gt;30&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
                        &lt;span class='wlnet06'&gt;SetContext&lt;/span&gt;( &lt;span class='wlnet03'&gt;contract&lt;/span&gt; );
                        &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Buy call&amp;quot;&lt;/span&gt; );
                        &lt;span class='wlnet06'&gt;RestoreContext&lt;/span&gt;();
                        
                        &lt;span class='wlnet01'&gt;// Plot it if we haven't done so already&lt;/span&gt;
                        &lt;span class='wlnet03'&gt;Color&lt;/span&gt; &lt;span class='wlnet03'&gt;c&lt;/span&gt; = &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;FromArgb&lt;/span&gt;(&lt;span class='wlnet04'&gt;255&lt;/span&gt;, &lt;span class='wlnet04'&gt;128&lt;/span&gt;, &lt;span class='wlnet04'&gt;128&lt;/span&gt;);
                        &lt;span class='wlnet06'&gt;PlotSymbol&lt;/span&gt;(&lt;span class='wlnet03'&gt;optionPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;contract&lt;/span&gt;, &lt;span class='wlnet03'&gt;c&lt;/span&gt;, &lt;span class='wlnet03'&gt;c&lt;/span&gt;);
                    }
                }
            }
        }
    }
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>IsOptionExpiryDate</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;IsOptionExpiryDate&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;bool IsOptionExpiryDate(int bar);&lt;br&gt;DateTime NextOptionExpiryDate(int bar);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns true if the specified &lt;b&gt;bar&lt;/b&gt; falls on an options expiration date.&amp;nbsp; 
Options expiration dates typically fall on the third Friday of every month.&amp;nbsp; 
If that particular Friday falls on a holiday that the market is closed on, the 
following market day is the options expiration date.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>    
&lt;span class='wlnet01'&gt;// Annotate Option Expiry Dates on the Chart&lt;/span&gt;
    
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;1&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;IsOptionExpiryDate&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt; ) )
        {
            &lt;span class='wlnet06'&gt;DrawCircle&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet04'&gt;4&lt;/span&gt;, &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Open&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Navy&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Navy&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet05'&gt;false&lt;/span&gt;  ); 
            &lt;span class='wlnet06'&gt;DrawCircle&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet04'&gt;4&lt;/span&gt;, &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;  ); 
        }

    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>NextOptionExpiryDate</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;NextOptionExpiryDate&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;DateTime NextOptionExpiryDate(int bar);&lt;/font&gt;&lt;br&gt;
&lt;font color="#0000FF"&gt;DateTime NextOptionExpiryDate(DateTime dt);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns DateTime of the closest options expiration date as of the specified &lt;b&gt;bar&lt;/b&gt;.&amp;nbsp; 
Options expiration dates typically fall on the third Friday of every month.&amp;nbsp; 
If that particular Friday falls on a holiday that the market is closed on, the 
following market day is the options expiration date.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>&lt;span class='wlnet01'&gt;// Show next option expiration date    &lt;/span&gt;
            &lt;span class='wlnet03'&gt;DateTime&lt;/span&gt; &lt;span class='wlnet03'&gt;nextExpiry&lt;/span&gt; = &lt;span class='wlnet06'&gt;NextOptionExpiryDate&lt;/span&gt;(&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;);
            &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;(&lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Next options expiration date falls on &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;nextExpiry&lt;/span&gt;.&lt;span class='wlnet07'&gt;Date&lt;/span&gt;.&lt;span class='wlnet03'&gt;ToShortDateString&lt;/span&gt;());
        }
    }
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
    </Entries>
    <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Options&lt;/h1&gt;
&lt;p&gt;The Options category contains helper methods you can use for trading options.&lt;/p&gt;
&lt;/html&gt;
</Description>
  </QuickRefCategory>
  <QuickRefCategory>
    <Name>Position Management</Name>
    <CategoryType>Functional</CategoryType>
    <Entries>
      <QuickRefEntry>
        <Name>ActivePositions</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;ActivePositions Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;IList&amp;lt;Position&amp;gt; ActivePositions&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the number of Positions that are currently still active.&amp;nbsp; Use 
the Positions property to access the collection of actual Positions, and check 
the Active property of each Position to determine if it is active or not.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;RSIPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;(  &lt;span class='wlnet04'&gt;50&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeriesOscillator&lt;/span&gt;( &lt;span class='wlnet03'&gt;RSIPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;RSI&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; ), &lt;span class='wlnet04'&gt;70&lt;/span&gt;, &lt;span class='wlnet04'&gt;30&lt;/span&gt;,
        &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;MidnightBlue&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Dashed&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );

    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;60&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;CrossUnder&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;RSI&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; ), &lt;span class='wlnet04'&gt;30&lt;/span&gt; ) )
        {
            &lt;span class='wlnet01'&gt;// Here we limit the system to 3 active Positions max&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet07'&gt;ActivePositions&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; &amp;lt; &lt;span class='wlnet04'&gt;3&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; );
        }

        &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( ( &lt;span class='wlnet07'&gt;ActivePositions&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; &amp;gt; &lt;span class='wlnet04'&gt;0&lt;/span&gt; ) &amp;amp;&amp;amp; &lt;span class='wlnet06'&gt;CrossOver&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;RSI&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; ), &lt;span class='wlnet04'&gt;50&lt;/span&gt; ) )
        {
            &lt;span class='wlnet01'&gt;// Let's work directly with the list of active positions, introduced in WL5&lt;/span&gt;
            &lt;span class='wlnet05'&gt;for&lt;/span&gt;( &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; = &lt;span class='wlnet07'&gt;ActivePositions&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; - &lt;span class='wlnet04'&gt;1&lt;/span&gt;; &lt;span class='wlnet03'&gt;p&lt;/span&gt; &amp;gt; -&lt;span class='wlnet04'&gt;1&lt;/span&gt; ; &lt;span class='wlnet03'&gt;p&lt;/span&gt;-- )
                &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;ActivePositions&lt;/span&gt;[&lt;span class='wlnet03'&gt;p&lt;/span&gt;] );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Alerts</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Alerts Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;IList&amp;lt;Alert&amp;gt; Alerts&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns a list of Alerts objects that represent all of the alerts that have 
been triggered by the Strategy so far.&amp;nbsp; Use the Count proprety of the 
Alerts list to determine how many Alerts are in the list.&amp;nbsp; Access the 
individual Alerts via the [] indexer.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;See the Alert object section for information on the Alert object's 
  properties and methods.&lt;/li&gt;
&lt;/ul&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Alert generating code&lt;/span&gt;
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;3&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (!&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet01'&gt;// Two consecutive lower closes&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet03'&gt;CumDown&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;(&lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt;)[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;gt;= &lt;span class='wlnet04'&gt;2&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;BuyAtLimit&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;High&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet10'&gt;&amp;quot;Consecutive close lower&amp;quot;&lt;/span&gt; );
        } &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Exit next day&amp;quot;&lt;/span&gt; );
        }
    }
    
    &lt;span class='wlnet01'&gt;// Alert properties&lt;/span&gt;
    &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; &amp;gt; &lt;span class='wlnet04'&gt;0&lt;/span&gt; )
    {
        &lt;span class='wlnet05'&gt;for&lt;/span&gt;( &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;i&lt;/span&gt; = &lt;span class='wlnet04'&gt;0&lt;/span&gt;; &lt;span class='wlnet03'&gt;i&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;i&lt;/span&gt;++ )
        {
            &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Alert&lt;/span&gt; &lt;span class='wlnet03'&gt;a&lt;/span&gt; = &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;[&lt;span class='wlnet03'&gt;i&lt;/span&gt;];

            &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Account: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;Account&lt;/span&gt; );  &lt;span class='wlnet01'&gt;// blank string&lt;/span&gt;
            &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;AlertDate: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;AlertDate&lt;/span&gt; );                                                      
            &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;AlertType: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;AlertType&lt;/span&gt; );
            &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;BarInterval: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;BarInterval&lt;/span&gt; );  
            &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;BasisPrice: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;BasisPrice&lt;/span&gt; );
            &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;OrderType: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;OrderType&lt;/span&gt; ); 
            &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Last close: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] );  &lt;span class='wlnet01'&gt;// Access Bars object                                 &lt;/span&gt;
            &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;PositionType: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;PositionType&lt;/span&gt; );   
            &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Price: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;Price&lt;/span&gt; );
            &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;RiskStopLevel: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet07'&gt;RiskStopLevel&lt;/span&gt; );
            &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Symbol: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;Symbol&lt;/span&gt; );
            &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Scale: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;Scale&lt;/span&gt; );
            &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Shares: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;Shares&lt;/span&gt; );
            &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;SignalName: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;SignalName&lt;/span&gt; );

            &lt;span class='wlnet05'&gt;try&lt;/span&gt; 
            {
                &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Position: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;Position&lt;/span&gt; );
            }
            &lt;span class='wlnet05'&gt;catch&lt;/span&gt; 
            {
                &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Position: entry&amp;quot;&lt;/span&gt; );
            }
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>ClearPositions</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;ClearPositions&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void ClearPositions();&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Clears all of the trading system Positions that have been generated so far by 
the Strategy.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;p&gt;In Multi-Symbol Backtest mode, the &lt;b&gt;ClearPositions&lt;/b&gt; method clear trades for all symbols in a DataSet. On the Trades list, only the last symbol's trades are left.&lt;/p&gt;
&lt;p&gt;It is working by design of the new Wealth-Lab .NET, where all of the positions are stored in one list. That's why &lt;b&gt;ClearPositions&lt;/b&gt; clears them all and does not work as expected in Multi-Symbol Backtest mode. This problem is under investigation.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Calculate the win/loss ratio of the system taking all trades.&lt;/span&gt;
    &lt;span class='wlnet01'&gt;// Then re-run the system, but only take trades when the prior&lt;/span&gt;
    &lt;span class='wlnet01'&gt;// win/loss ratio was above 50%. }&lt;/span&gt;
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;Winners&lt;/span&gt;, &lt;span class='wlnet03'&gt;Trades&lt;/span&gt;;
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;WinLossPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;50&lt;/span&gt;, &lt;span class='wlnet05'&gt;false&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;CMOPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;40&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;CMOPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;CMO&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; ), &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;2&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;SetPaneMinMax&lt;/span&gt;( &lt;span class='wlnet03'&gt;WinLossPane&lt;/span&gt;, &lt;span class='wlnet04'&gt;0&lt;/span&gt;, &lt;span class='wlnet04'&gt;100&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;WinLoss&lt;/span&gt; = &lt;span class='wlnet05'&gt;new&lt;/span&gt; &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;WinLoss&amp;quot;&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;60&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet03'&gt;Winners&lt;/span&gt; = &lt;span class='wlnet04'&gt;0&lt;/span&gt;;
        &lt;span class='wlnet03'&gt;Trades&lt;/span&gt; = &lt;span class='wlnet04'&gt;0&lt;/span&gt;;
        &lt;span class='wlnet05'&gt;foreach&lt;/span&gt;( &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; &lt;span class='wlnet05'&gt;in&lt;/span&gt; &lt;span class='wlnet03'&gt;Positions&lt;/span&gt; )
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( !&lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;Active&lt;/span&gt; )
            {
                &lt;span class='wlnet03'&gt;Trades&lt;/span&gt;++;
                &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;NetProfit&lt;/span&gt; &amp;gt; &lt;span class='wlnet04'&gt;0&lt;/span&gt; )
                    &lt;span class='wlnet03'&gt;Winners&lt;/span&gt;++;
            }          
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;Trades&lt;/span&gt; &amp;gt; &lt;span class='wlnet04'&gt;0&lt;/span&gt; )
        {
            &lt;span class='wlnet03'&gt;WinLoss&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] = &lt;span class='wlnet03'&gt;Winners&lt;/span&gt; * &lt;span class='wlnet04'&gt;100&lt;/span&gt; &lt;span class='wlnet01'&gt;/ Trades;&lt;/span&gt;
        }
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;CrossOver&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;CMO&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; ), -&lt;span class='wlnet04'&gt;40&lt;/span&gt; ) )
            &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;CMO&amp;quot;&lt;/span&gt; ); &lt;span class='wlnet05'&gt;else&lt;/span&gt; 
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;CrossUnder&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;CMO&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; ), &lt;span class='wlnet04'&gt;40&lt;/span&gt; ) )
                &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;Position&lt;/span&gt;.&lt;span class='wlnet03'&gt;AllPositions&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;CMO&amp;quot;&lt;/span&gt; );
    }
    &lt;span class='wlnet01'&gt;// Plot the Win/Loss Ratio&lt;/span&gt;
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;WinLossPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;WinLoss&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Green&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Histogram&lt;/span&gt;, &lt;span class='wlnet04'&gt;5&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;( &lt;span class='wlnet03'&gt;WinLossPane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Win/Loss Ratio&amp;quot;&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Green&lt;/span&gt; );
    &lt;span class='wlnet01'&gt;// Clear the trades&lt;/span&gt;
    &lt;span class='wlnet06'&gt;ClearPositions&lt;/span&gt;();
    &lt;span class='wlnet01'&gt;// Execute the system again, but only take the trade if the win/loss ratio was above 50&lt;/span&gt;
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;60&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;CrossOver&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;CMO&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; ), -&lt;span class='wlnet04'&gt;40&lt;/span&gt; ) )
        {
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;WinLoss&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;gt; &lt;span class='wlnet04'&gt;50&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;CMO&amp;quot;&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt; &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;CrossUnder&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;CMO&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; ), &lt;span class='wlnet04'&gt;40&lt;/span&gt; ) )
            &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;Position&lt;/span&gt;.&lt;span class='wlnet03'&gt;AllPositions&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;CMO&amp;quot;&lt;/span&gt; );
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>IsLastPositionActive</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;IsLastPositionActive Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;bool IsLastPositionActive&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Indicates whether the most recently established Position (if any) is active 
or closed.&amp;nbsp; If there were no Positions created yet the property returns 
false.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;entryPrice&lt;/span&gt; = &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryPrice&lt;/span&gt;;
            &lt;span class='wlnet01'&gt;//code your exit rules here&lt;/span&gt;
            &lt;span class='wlnet06'&gt;SellAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastActivePosition&lt;/span&gt;, &lt;span class='wlnet03'&gt;entryPrice&lt;/span&gt;*&lt;span class='wlnet04'&gt;0.8&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;20% stop loss&amp;quot;&lt;/span&gt; );
            &lt;span class='wlnet06'&gt;SellAtLimit&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastActivePosition&lt;/span&gt;, &lt;span class='wlnet03'&gt;entryPrice&lt;/span&gt;*&lt;span class='wlnet04'&gt;1.07&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;7% profit target&amp;quot;&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;CrossOver&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;RSI&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( ( (&lt;span class='wlnet07'&gt;High&lt;/span&gt;+&lt;span class='wlnet07'&gt;Low&lt;/span&gt;)&lt;span class='wlnet01'&gt;/2), 40 ), 60 ) )&lt;/span&gt;
                &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Buy Strength&amp;quot;&lt;/span&gt; );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>LastActivePosition</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;LastActivePosition Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;Position LastActivePosition&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the most recently created Position object that is still active (has 
not yet been sold or covered).&amp;nbsp; If there are no open Positions, &lt;b&gt;
LastActivePosition&lt;/b&gt; returns null.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;See the documentation for the &lt;b&gt;Position&lt;/b&gt; object for more information 
  on its properties and methods.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;period&lt;/span&gt; = &lt;span class='wlnet04'&gt;14&lt;/span&gt;;
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;oversoldLevel&lt;/span&gt; = &lt;span class='wlnet04'&gt;30&lt;/span&gt;;
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;overboughtLevel&lt;/span&gt; = &lt;span class='wlnet04'&gt;70&lt;/span&gt;;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;rsi&lt;/span&gt; = &lt;span class='wlnet03'&gt;RSI&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet03'&gt;period&lt;/span&gt; );
    
    &lt;span class='wlnet01'&gt;//Trading system loop&lt;/span&gt;
    &lt;span class='wlnet05'&gt;for&lt;/span&gt; (&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet03'&gt;rsi&lt;/span&gt;.&lt;span class='wlnet03'&gt;FirstValidValue&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet07'&gt;LastActivePosition&lt;/span&gt; == &lt;span class='wlnet05'&gt;null&lt;/span&gt; )
        {
            &lt;span class='wlnet01'&gt;//Buy when RSI crosses above oversold level&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet06'&gt;CrossOver&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;rsi&lt;/span&gt;, &lt;span class='wlnet03'&gt;oversoldLevel&lt;/span&gt; ) )
                &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;RSI Oversold&amp;quot;&lt;/span&gt;);
        } &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet01'&gt;// Sell when it crosses below oversold level&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet06'&gt;CrossUnder&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;rsi&lt;/span&gt;, &lt;span class='wlnet03'&gt;overboughtLevel&lt;/span&gt; ) )
                &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastActivePosition&lt;/span&gt; );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>LastPosition</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;LastPosition Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;Position LastPosition&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the most recently created Position object.&amp;nbsp; If there were no 
Positions created yet, the property returns null.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;See the Position object documentation for information about its properties 
  and methods.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; ), &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;10&lt;/span&gt; ), &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;CrossOver&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;10&lt;/span&gt; ), &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; ) ) )
            &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; ); &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;CrossOver&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; ), &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;10&lt;/span&gt; ) ) )
            &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt; );
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>MarketPosition</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;MarketPosition Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;double MarketPosition&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the net number of shares that the Strategy has in open Positions.&amp;nbsp; 
Long Positions add their shares to this value, and short Positions subtract 
their shares.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;In portfolio testing mode, Strategies are pre-executed using a 1 share per 
  Position sizing strategy, then position sizing is applied after the fact.&amp;nbsp; 
  For this reason, MarketPosition will always count a Position's shares as 1 
  when testing in this mode.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;hMA&lt;/span&gt; = &lt;span class='wlnet03'&gt;WMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;30&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;mp&lt;/span&gt; = &lt;span class='wlnet05'&gt;new&lt;/span&gt; &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Market Position&amp;quot;&lt;/span&gt; );

    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet03'&gt;hMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;FirstValidValue&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet01'&gt;// Record the number of shares in open positions at each bar as a Data Series.&lt;/span&gt;
        &lt;span class='wlnet03'&gt;mp&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] = &lt;span class='wlnet07'&gt;MarketPosition&lt;/span&gt;;

        {
            &lt;span class='wlnet01'&gt;// Buy on a crossover of a 30-period weighted moving average&lt;/span&gt;
            &lt;span class='wlnet01'&gt;// Hold up to 5 positions&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet06'&gt;CrossOver&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet03'&gt;hMA&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] ) )
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet07'&gt;ActivePositions&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; &amp;lt; &lt;span class='wlnet04'&gt;5&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;(&lt;span class='wlnet03'&gt;bar&lt;/span&gt; + &lt;span class='wlnet04'&gt;1&lt;/span&gt;);
        }
        {
             &lt;span class='wlnet01'&gt;// Sell all positions on a crossunder of a 30-period WMA&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet06'&gt;CrossUnder&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet03'&gt;hMA&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] ) )
                &lt;span class='wlnet05'&gt;foreach&lt;/span&gt; ( &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; &lt;span class='wlnet05'&gt;in&lt;/span&gt; &lt;span class='wlnet07'&gt;Positions&lt;/span&gt; )
                    &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;Active&lt;/span&gt; )
                        &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt; );
        }
    }
    
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;ProfitPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;30&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;ProfitPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;mp&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;DarkGreen&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Histogram&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; ); &lt;span class='wlnet01'&gt;//'Open Profit' &lt;/span&gt;
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;hMA&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;2&lt;/span&gt; );
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Positions</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Positions Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;IList&amp;lt;Position&amp;gt; Positions&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the Positions that have been established to date by the Strategy (via 
BuyAtMarket, ShortAtMarket, etc.)&amp;nbsp; Each item in this list is a Position 
object that represents either a long or a short position.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Use Positions.Count property to determine how many Positions are in the 
  list.&lt;/li&gt;
  &lt;li&gt;See the documentation for the Position object to learn about its 
  properties and methods.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;lastBarBought&lt;/span&gt; = &lt;span class='wlnet04'&gt;0&lt;/span&gt;;

    &lt;span class='wlnet01'&gt;//Trading system loop&lt;/span&gt;
    &lt;span class='wlnet05'&gt;for&lt;/span&gt; (&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;41&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet01'&gt;// Build up a position buying 40-period High breakouts&lt;/span&gt;
        &lt;span class='wlnet05'&gt;if&lt;/span&gt;( ( &lt;span class='wlnet07'&gt;LastActivePosition&lt;/span&gt; != &lt;span class='wlnet05'&gt;null&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class='wlnet07'&gt;LastActivePosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryPrice&lt;/span&gt; &amp;gt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] ) || &lt;span class='wlnet07'&gt;LastActivePosition&lt;/span&gt; == &lt;span class='wlnet05'&gt;null&lt;/span&gt; )
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;gt;= &lt;span class='wlnet03'&gt;lastBarBought&lt;/span&gt; + &lt;span class='wlnet04'&gt;9&lt;/span&gt; )
            {
                &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet06'&gt;BuyAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;Highest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet04'&gt;40&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet10'&gt;&amp;quot;Breakout&amp;quot;&lt;/span&gt; ) != &lt;span class='wlnet05'&gt;null&lt;/span&gt; )
                    &lt;span class='wlnet03'&gt;lastBarBought&lt;/span&gt; = &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;;
            }
        
        &lt;span class='wlnet01'&gt;// Exit positions&lt;/span&gt;
        &lt;span class='wlnet05'&gt;foreach&lt;/span&gt;( &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; &lt;span class='wlnet05'&gt;in&lt;/span&gt; &lt;span class='wlnet07'&gt;Positions&lt;/span&gt; )
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;Active&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;SellAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;, &lt;span class='wlnet03'&gt;Lowest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Low&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet10'&gt;&amp;quot;Breakdown&amp;quot;&lt;/span&gt; );
    }
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt; </Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>SplitPosition</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;SplitPosition&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;Position SplitPosition(Position position, double 
percentToRetain);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Splits a single Position into two Positions, allowing you to effectively 
scale out of a single Position using more than one exit.&amp;nbsp; The &lt;b&gt;position&lt;/b&gt; 
parameter contains the Position object that you wish to split.&amp;nbsp; The &lt;b&gt;
percentToRetain&lt;/b&gt; parameter contains the percentage of shares that you wish to 
remain in the original Position object.&amp;nbsp; SplitPosition returns a new 
Position object that contains the remaining shares.&amp;nbsp; This new Position 
object is also added to the end of the Positions list.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;b&gt;Problem:&lt;/b&gt; in Portfolio Simulation Mode, expect that either all or none of the Positions resulting from &lt;i&gt;SplitPosition&lt;/i&gt; will be rejected according to the amount of cash available on the entry bar. While building the equity curve, Wealth-Lab treats each split Position as a separate Position competing for cash, and, if &lt;i&gt;Position.Priority&lt;/i&gt; is random each Position has a random chance of being selected or rejected in a high-exposure MSB Portfolio Simulation.&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Partial workaround:&lt;/i&gt; To help  reduce the frequency (but in no way guarantee) of taking different actions for split Positions, assign the same Priority to the new split Position as the original after calling &lt;i&gt;SplitPosition&lt;/i&gt; (see code snippet below).&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
&lt;span class='wlnet05'&gt;bool&lt;/span&gt; &lt;span class='wlnet03'&gt;soldForProfit&lt;/span&gt; = &lt;span class='wlnet05'&gt;false&lt;/span&gt;;

    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;50&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet07'&gt;ActivePositions&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; &amp;gt; &lt;span class='wlnet04'&gt;0&lt;/span&gt; )
        {
            &lt;span class='wlnet01'&gt;// Split the position to protect large gain&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;MFEAsOfBarPercent&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt; ) &amp;gt; &lt;span class='wlnet04'&gt;20&lt;/span&gt; )
            {
                &lt;span class='wlnet05'&gt;if&lt;/span&gt; (!&lt;span class='wlnet03'&gt;soldForProfit&lt;/span&gt;) {
                    &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; = &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;;                    &lt;span class='wlnet01'&gt;// Position to split&lt;/span&gt;
                    &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;s&lt;/span&gt; = &lt;span class='wlnet06'&gt;SplitPosition&lt;/span&gt;( &lt;span class='wlnet03'&gt;p&lt;/span&gt;, &lt;span class='wlnet04'&gt;49.99&lt;/span&gt; );        &lt;span class='wlnet01'&gt;// The new Position&lt;/span&gt;
                    &lt;span class='wlnet03'&gt;s&lt;/span&gt;.&lt;span class='wlnet03'&gt;Priority&lt;/span&gt; = &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;Priority&lt;/span&gt;;                     &lt;span class='wlnet01'&gt;// Assign the same Priority as the original Position&lt;/span&gt;
                    &lt;span class='wlnet03'&gt;soldForProfit&lt;/span&gt; = &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;s&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Secure large profit&amp;quot;&lt;/span&gt; );
                }
                &lt;span class='wlnet05'&gt;else&lt;/span&gt; {                                                       
                    &lt;span class='wlnet01'&gt;// Exit the rest on a tight stop&lt;/span&gt;
                    &lt;span class='wlnet06'&gt;SellAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastActivePosition&lt;/span&gt;, &lt;span class='wlnet03'&gt;Lowest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Low&lt;/span&gt;,&lt;span class='wlnet04'&gt;10&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet10'&gt;&amp;quot;the rest&amp;quot;&lt;/span&gt; );
                }                                                                                               
            }
        } 
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet06'&gt;BuyAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;Highest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet04'&gt;50&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet10'&gt;&amp;quot;no-frills breakout&amp;quot;&lt;/span&gt; );
            &lt;span class='wlnet03'&gt;soldForProfit&lt;/span&gt; = &lt;span class='wlnet05'&gt;false&lt;/span&gt;;
        }
    }
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
    </Entries>
    <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Position Management&lt;/h1&gt;
&lt;p&gt;The Position Management category contains methods you can use to access and 
manipulate Positions that have been created by the Strategy.&lt;/p&gt;
&lt;/html&gt;
</Description>
  </QuickRefCategory>
  <QuickRefCategory>
    <Name>Position Object</Name>
    <CategoryType>Object</CategoryType>
    <Entries>
      <QuickRefEntry>
        <Name>Active</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Active Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;bool Active&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Determines if the Position is still open or not.&amp;nbsp; A position is closed 
when it is successfully sold (long positions) or covered (short positions).&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;rsi&lt;/span&gt; = &lt;span class='wlnet03'&gt;RSI&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( ( (&lt;span class='wlnet07'&gt;High&lt;/span&gt;+&lt;span class='wlnet07'&gt;Low&lt;/span&gt;)&lt;span class='wlnet01'&gt;/2 ), 40 );&lt;/span&gt;
    
    &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;i&lt;/span&gt;;
    
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet03'&gt;rsi&lt;/span&gt;.&lt;span class='wlnet03'&gt;FirstValidValue&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;CrossOver&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;rsi&lt;/span&gt;, &lt;span class='wlnet04'&gt;35&lt;/span&gt; ) )
            &lt;span class='wlnet06'&gt;BuyAtLimit&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;High&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] );

        &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;CrossUnder&lt;/span&gt; ( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;rsi&lt;/span&gt;, &lt;span class='wlnet04'&gt;70&lt;/span&gt; ) )
        {
            &lt;span class='wlnet01'&gt;// Cycle through open positions&lt;/span&gt;
            &lt;span class='wlnet05'&gt;foreach&lt;/span&gt;( &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; &lt;span class='wlnet05'&gt;in&lt;/span&gt; &lt;span class='wlnet07'&gt;Positions&lt;/span&gt; )
                &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;Active&lt;/span&gt; )
                    &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt; );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>AutoProfitLevel</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;AutoProfitLevel Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;double AutoProfitLevel&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Specifies the initial profit target level (price) of the Position. The value, analogous to &lt;b&gt;RiskStopLevel&lt;/b&gt;, is the &lt;b&gt;price&lt;/b&gt; at which the same-bar Limit order should be placed. It is valid for any BarScale.
&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;b&gt;AutoProfitLevel&lt;/b&gt; should be set if "same bar exits" wish to be used in &lt;b&gt;real-time trading&lt;/b&gt;. It does not have any effect in backtesting.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
&lt;span class='wlnet06'&gt;PlotStops&lt;/span&gt;();
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bcm1&lt;/span&gt; = &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; - &lt;span class='wlnet04'&gt;1&lt;/span&gt;;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;sma1&lt;/span&gt; = &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;(&lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;8&lt;/span&gt;);
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;sma2&lt;/span&gt; = &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;(&lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt;);
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;(&lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;sma1&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Green&lt;/span&gt;, &lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt;);
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;(&lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;sma2&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt;, &lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt;);

    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;FirstActualBar&lt;/span&gt; + &lt;span class='wlnet04'&gt;20&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; = &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;;
            &lt;span class='wlnet06'&gt;SellAtLimit&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet07'&gt;AutoProfitLevel&lt;/span&gt; * &lt;span class='wlnet04'&gt;1.01&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt; &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;CrossOver&lt;/span&gt;(&lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;sma1&lt;/span&gt;, &lt;span class='wlnet03'&gt;sma2&lt;/span&gt;) )
        {
            &lt;span class='wlnet07'&gt;AutoProfitLevel&lt;/span&gt; = &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;High&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;];
            &lt;span class='wlnet01'&gt;// also use same-bar exit for backtesting&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; ) != &lt;span class='wlnet05'&gt;null&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet03'&gt;bcm1&lt;/span&gt;) 
                &lt;span class='wlnet06'&gt;SellAtLimit&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt; + &lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet07'&gt;AutoProfitLevel&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;same-bar exit&amp;quot;&lt;/span&gt; ); 
        }
    }
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Bars</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Bars Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;Bars Bars&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the Bars object that the Position was traded against.&amp;nbsp; Certain 
Strategies (such as pairs trading or symbol rotation) can trade on multiple 
symbols.&amp;nbsp; The Bars property allows you to determine which symbol a 
particular Position was established on.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;See the &lt;b&gt;Bars&lt;/b&gt; object reference for more information about its 
  properties and events.&lt;/li&gt;
&lt;/ul&gt;




&lt;/html&gt;</Description>
        <Example />
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>BarsHeld</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;BarsHeld Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;int BarsHeld&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the number of bars that the Position was held.&amp;nbsp; If the Position 
is still active, &lt;b&gt;BarsHeld&lt;/b&gt; returns the total number of bars held as of the 
last bar of the chart.&amp;nbsp; The &lt;b&gt;BarsHeld&lt;/b&gt; property is primarily intended 
for use by Performance Visualizers, not Strategies.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Return the total number of bars held as of the last bar of the chart&lt;/span&gt;
    
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt; == &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt; )
            &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Bars held: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;BarsHeld&lt;/span&gt; , &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>BasisPrice</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;BasisPrice Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;double BasisPrice&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the Position's &amp;quot;basis price&amp;quot;.&amp;nbsp; This is the price that was used 
to establish how many shares the Position should be sized to.&amp;nbsp; For market 
orders, the basis price is typically the closing price of the previous bar.&amp;nbsp; 
The actual entry price can of course differ because the market may open above or 
below the previous close.&amp;nbsp; In certain situation (unless a margin factor is 
applied to simulations), this difference can cause a trade to not be executed 
(even a market order) due to insufficient capital.&amp;nbsp; For limit orders, the 
basis price is always the limit price of the order.&amp;nbsp; For stop orders, the 
basis price is always the stop price specified.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Display differences between Basis Price and Entry Price&lt;/span&gt;
    
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;4&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt; == &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, (&lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryPrice&lt;/span&gt; - &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;BasisPrice&lt;/span&gt;).&lt;span class='wlnet06'&gt;ToString&lt;/span&gt;(), &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Black&lt;/span&gt; ) ;
            &lt;span class='wlnet06'&gt;SellAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet03'&gt;Lowest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Low&lt;/span&gt;, &lt;span class='wlnet04'&gt;3&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet06'&gt;BuyAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;Highest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet04'&gt;3&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>EntryBar</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;EntryBar Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;int EntryBar&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the bar number that the Position was entered on.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (!&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;StochK&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;gt; &lt;span class='wlnet04'&gt;70&lt;/span&gt; )
            &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Stoch&amp;quot;&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet01'&gt;// Sell on 10th day&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; - &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryBar&lt;/span&gt; == &lt;span class='wlnet04'&gt;10&lt;/span&gt; )
            &lt;span class='wlnet06'&gt;SellAtClose&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;10 day&amp;quot;&lt;/span&gt; );
        }
    }
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>EntryCommission</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;EntryCommission Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;double EntryCommission&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the commission value that was applied to the entry trade for the 
Position.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;b&gt;EntryCommission&lt;/b&gt; is not available during Strategy execution, and is only available to Performance Visualizers, Commission structures and PosSizers that execute after position sizing has been applied.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example />
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>EntryDate</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;EntryDate Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;DateTime EntryDate&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the date/time that the Position was entered on.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Dumps entry dates to Debug window&lt;/span&gt;
    &lt;span class='wlnet01'&gt;// Run this on Daily&lt;/span&gt;
    &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;IsIntraday&lt;/span&gt; != &lt;span class='wlnet05'&gt;true&lt;/span&gt; )
    {
        &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;50&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
        {
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
            {
                &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryDate&lt;/span&gt; );
                &lt;span class='wlnet01'&gt;// Sell after 10 days&lt;/span&gt;
                &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; == &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;ConvertDateToBar&lt;/span&gt;( &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryDate&lt;/span&gt;, &lt;span class='wlnet05'&gt;false&lt;/span&gt; ) + &lt;span class='wlnet04'&gt;10&lt;/span&gt;  )
                    &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;10 day&amp;quot;&lt;/span&gt; );
            }
            &lt;span class='wlnet05'&gt;else&lt;/span&gt;
            {
                &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;StochK&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;gt; &lt;span class='wlnet04'&gt;70&lt;/span&gt; )
                    &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Stoch&amp;quot;&lt;/span&gt; );
            }
        }
    } &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        &lt;span class='wlnet06'&gt;Abort&lt;/span&gt;();
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>EntryOrderType</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;EntryOrderType Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;OrderType EntryOrderType&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the type of order that was used to establish the Position.&amp;nbsp; 
Possible values are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;OrderType.Market&lt;/li&gt;
  &lt;li&gt;OrderType.Limit&lt;/li&gt;
  &lt;li&gt;OrderType.Stop&lt;/li&gt;
  &lt;li&gt;OrderType.AtClose&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;atr&lt;/span&gt; = &lt;span class='wlnet03'&gt;ATR&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;,&lt;span class='wlnet04'&gt;10&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;];
        
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet05'&gt;string&lt;/span&gt; &lt;span class='wlnet03'&gt;signal&lt;/span&gt; = &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntrySignal&lt;/span&gt;;
            
            &lt;span class='wlnet01'&gt;// Simple switching of exits depending on entry order type&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryOrderType&lt;/span&gt; == &lt;span class='wlnet03'&gt;OrderType&lt;/span&gt;.&lt;span class='wlnet03'&gt;Limit&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;SellAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet03'&gt;Lowest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Low&lt;/span&gt;,&lt;span class='wlnet04'&gt;40&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet10'&gt;&amp;quot;Breakdown&amp;quot;&lt;/span&gt; );
            &lt;span class='wlnet05'&gt;else&lt;/span&gt;
                &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryOrderType&lt;/span&gt; == &lt;span class='wlnet03'&gt;OrderType&lt;/span&gt;.&lt;span class='wlnet03'&gt;Stop&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;SellAtLimit&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]+&lt;span class='wlnet04'&gt;2&lt;/span&gt;*&lt;span class='wlnet03'&gt;atr&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Target&amp;quot;&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;BuyAtLimit&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;Lowest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Low&lt;/span&gt;,&lt;span class='wlnet04'&gt;40&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet10'&gt;&amp;quot;Deep down&amp;quot;&lt;/span&gt; ) == &lt;span class='wlnet05'&gt;null&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;BuyAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]+&lt;span class='wlnet03'&gt;atr&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Range&amp;quot;&lt;/span&gt; );
        }
    }
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>EntryPrice</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;EntryPrice Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;double EntryPrice&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the entry price of the Position.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Use an ATR stop based on the entry price&lt;/span&gt;
    
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;sma1&lt;/span&gt; = &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;10&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;sma2&lt;/span&gt; = &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;40&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;sma1&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;LightCoral&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;sma2&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;DarkGreen&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );

    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet03'&gt;sma2&lt;/span&gt;.&lt;span class='wlnet03'&gt;FirstValidValue&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;CrossUnder&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;sma1&lt;/span&gt;, &lt;span class='wlnet03'&gt;sma2&lt;/span&gt; ) )
                &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;SMA&amp;quot;&lt;/span&gt; );
            &lt;span class='wlnet05'&gt;else&lt;/span&gt; 
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;lt; ( &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryPrice&lt;/span&gt; - &lt;span class='wlnet03'&gt;ATR&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet04'&gt;10&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] * &lt;span class='wlnet04'&gt;4&lt;/span&gt; ) )
                &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;ATR&amp;quot;&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;CrossOver&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;sma1&lt;/span&gt;, &lt;span class='wlnet03'&gt;sma2&lt;/span&gt; ) )
                &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;SMA&amp;quot;&lt;/span&gt; );
        }
    }
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>EntrySignal</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;EntrySignal Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;string EntrySignal&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the &amp;quot;signal name&amp;quot; that was supplied in the &amp;quot;BuyAtXXX&amp;quot; or &amp;quot;ShortAtXXX&amp;quot; 
method that was used to establish the Position.&amp;nbsp; All &amp;quot;BuyAtXXX&amp;quot; and &amp;quot;ShortAtXXX&amp;quot; 
methods allow you to specify an optional signalName parameter.&amp;nbsp; The value 
that you specify there is visible in the trade list, and is also accessible via 
the &lt;b&gt;EntrySignal&lt;/b&gt; property.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;40&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;atr&lt;/span&gt; = &lt;span class='wlnet03'&gt;ATR&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;,&lt;span class='wlnet04'&gt;10&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;];
        
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet05'&gt;string&lt;/span&gt; &lt;span class='wlnet03'&gt;signal&lt;/span&gt; = &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntrySignal&lt;/span&gt;;
            
            &lt;span class='wlnet01'&gt;// Simple switching of exits depending on entry signal&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;signal&lt;/span&gt; == &lt;span class='wlnet10'&gt;&amp;quot;Highest&amp;quot;&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;SellAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet03'&gt;Lowest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Low&lt;/span&gt;,&lt;span class='wlnet04'&gt;40&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet10'&gt;&amp;quot;Breakdown&amp;quot;&lt;/span&gt; );
            &lt;span class='wlnet05'&gt;else&lt;/span&gt;
                &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet03'&gt;signal&lt;/span&gt; == &lt;span class='wlnet10'&gt;&amp;quot;Range&amp;quot;&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;SellAtLimit&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]+&lt;span class='wlnet04'&gt;2&lt;/span&gt;*&lt;span class='wlnet03'&gt;atr&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Target&amp;quot;&lt;/span&gt; );
        }
            &lt;span class='wlnet05'&gt;else&lt;/span&gt;
            {
                &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;BuyAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;Highest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;High&lt;/span&gt;,&lt;span class='wlnet04'&gt;40&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet10'&gt;&amp;quot;Highest&amp;quot;&lt;/span&gt; ) == &lt;span class='wlnet05'&gt;null&lt;/span&gt; )
                    &lt;span class='wlnet06'&gt;BuyAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]+&lt;span class='wlnet03'&gt;atr&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Range&amp;quot;&lt;/span&gt; );
            }
    }
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>ExitBar</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;ExitBar Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;int ExitBar&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the bar number that the Position was exited (closed) on.&amp;nbsp; If the 
Position is still active, &lt;b&gt;ExitBar&lt;/b&gt; returns -1.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>&lt;pre class='wlnetcode'&gt;&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Text&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Drawing&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;;

&lt;span class='wlnet05'&gt;namespace&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Strategies&lt;/span&gt;
{
    &lt;span class='wlnet05'&gt;public&lt;/span&gt; &lt;span class='wlnet05'&gt;class&lt;/span&gt; &lt;span class='wlnet03'&gt;ExitBar&lt;/span&gt; : &lt;span class='wlnet03'&gt;WealthScript&lt;/span&gt;
    {
        &lt;span class='wlnet01'&gt;// Display the shortest and the longest holding time of closed positions&lt;/span&gt;

        &lt;span class='wlnet05'&gt;protected&lt;/span&gt; &lt;span class='wlnet05'&gt;override&lt;/span&gt; &lt;span class='wlnet05'&gt;void&lt;/span&gt; &lt;span class='wlnet03'&gt;Execute&lt;/span&gt;()
        {
            &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;30&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
            {
                &lt;span class='wlnet05'&gt;if&lt;/span&gt; (!&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt; )
                {
                    &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;CrossUnder&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;Indicators&lt;/span&gt;.&lt;span class='wlnet03'&gt;RSI&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;10&lt;/span&gt; ), &lt;span class='wlnet04'&gt;20&lt;/span&gt; ) )
                        &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; );
                }
                &lt;span class='wlnet05'&gt;else&lt;/span&gt;
                {
                    &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;CrossOver&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;Indicators&lt;/span&gt;.&lt;span class='wlnet03'&gt;RSI&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;10&lt;/span&gt; ), &lt;span class='wlnet04'&gt;60&lt;/span&gt; ) )
                        &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt; );
                }
            }
            
            &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;LowBar&lt;/span&gt; = &lt;span class='wlnet04'&gt;0&lt;/span&gt;;
            &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;HighBar&lt;/span&gt; = &lt;span class='wlnet04'&gt;0&lt;/span&gt;;
            &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;BarsHeld&lt;/span&gt;;
            
            &lt;span class='wlnet05'&gt;foreach&lt;/span&gt; ( &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; &lt;span class='wlnet05'&gt;in&lt;/span&gt; &lt;span class='wlnet07'&gt;Positions&lt;/span&gt; )
            {
                &lt;span class='wlnet05'&gt;if&lt;/span&gt;( !&lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;Active&lt;/span&gt; )
                {
                    &lt;span class='wlnet03'&gt;BarsHeld&lt;/span&gt; = &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;ExitBar&lt;/span&gt; - &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryBar&lt;/span&gt;;
                    &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet03'&gt;BarsHeld&lt;/span&gt; &amp;gt; &lt;span class='wlnet03'&gt;HighBar&lt;/span&gt; )
                        &lt;span class='wlnet03'&gt;HighBar&lt;/span&gt; = &lt;span class='wlnet03'&gt;BarsHeld&lt;/span&gt;;
                    &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( ( &lt;span class='wlnet03'&gt;BarsHeld&lt;/span&gt; &amp;lt; &lt;span class='wlnet03'&gt;LowBar&lt;/span&gt; ) | ( &lt;span class='wlnet03'&gt;LowBar&lt;/span&gt; &amp;lt;= &lt;span class='wlnet04'&gt;0&lt;/span&gt; ) )
                        &lt;span class='wlnet03'&gt;LowBar&lt;/span&gt; = &lt;span class='wlnet03'&gt;BarsHeld&lt;/span&gt;;
                }
            }
            
            &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Longest Holding Time: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;HighBar&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Black&lt;/span&gt; );
            &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Shortest Holding Time: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;LowBar&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Black&lt;/span&gt; );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>ExitCommission</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;ExitCommission Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;double ExitCommission&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the commission value that was applied to the exit trade for the 
Position.&amp;nbsp; If the Position is still active, ExitCommission returns 0.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;b&gt;ExitCommission&lt;/b&gt; is not available during Strategy execution, and is only available to Performance Visualizers, Commission structures and PosSizers that execute after position sizing has been applied.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example />
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>ExitDate</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;ExitDate Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;DateTime ExitDate&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the date/time that the Position was exited (closed) on.&amp;nbsp; If the 
Position is still active, &lt;b&gt;ExitDate&lt;/b&gt; returns DateTime.MinValue.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet05'&gt;for&lt;/span&gt; (&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;41&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt; )
        {
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt; == &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt; ) 
                &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Holding a position...&amp;quot;&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;LightBlue&lt;/span&gt; );
            &lt;span class='wlnet06'&gt;SellAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet03'&gt;Lowest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Low&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet10'&gt;&amp;quot;Breakdown&amp;quot;&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet01'&gt;// Prints how much time passed since last exit from LastPosition&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( ( &lt;span class='wlnet03'&gt;bar&lt;/span&gt; == &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt; ) &amp;amp; ( &lt;span class='wlnet07'&gt;Positions&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; &amp;gt; &lt;span class='wlnet04'&gt;0&lt;/span&gt; ) )
            {
                &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;x&lt;/span&gt; = &lt;span class='wlnet03'&gt;DateTime&lt;/span&gt;.&lt;span class='wlnet03'&gt;Compare&lt;/span&gt;(&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Date&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;ExitDate&lt;/span&gt;);
                &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet03'&gt;x&lt;/span&gt; &amp;gt; &lt;span class='wlnet04'&gt;0&lt;/span&gt; )
                {
                    &lt;span class='wlnet03'&gt;DateTime&lt;/span&gt; &lt;span class='wlnet03'&gt;exitDate&lt;/span&gt; = &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;ExitDate&lt;/span&gt;;
                    &lt;span class='wlnet03'&gt;DateTime&lt;/span&gt; &lt;span class='wlnet03'&gt;today&lt;/span&gt; = &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Date&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;];
                    &lt;span class='wlnet03'&gt;TimeSpan&lt;/span&gt; &lt;span class='wlnet03'&gt;sinceExit&lt;/span&gt; = &lt;span class='wlnet03'&gt;today&lt;/span&gt;.&lt;span class='wlnet03'&gt;Subtract&lt;/span&gt;( &lt;span class='wlnet03'&gt;exitDate&lt;/span&gt; );
                    &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Time since last exit: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;sinceExit&lt;/span&gt;.&lt;span class='wlnet03'&gt;Days&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot; days, &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;sinceExit&lt;/span&gt;.&lt;span class='wlnet03'&gt;Hours&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot; hours, &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;sinceExit&lt;/span&gt;.&lt;span class='wlnet03'&gt;Minutes&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot; minutes, &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;sinceExit&lt;/span&gt;.&lt;span class='wlnet03'&gt;Seconds&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot; seconds&amp;quot;&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt; );
                }    
            }
            &lt;span class='wlnet06'&gt;BuyAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;Highest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet04'&gt;40&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet10'&gt;&amp;quot;Breakout&amp;quot;&lt;/span&gt; );
        }
    }
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>ExitOrderType</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;ExitOrderType Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;OrderType ExitOrderType&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the type of order that was used to exit (close) the Position.&amp;nbsp; 
Possible values are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;OrderType.Market&lt;/li&gt;
  &lt;li&gt;OrderType.Limit&lt;/li&gt;
  &lt;li&gt;OrderType.Stop&lt;/li&gt;
  &lt;li&gt;OrderType.AtClose&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet06'&gt;ClearDebug&lt;/span&gt;();
    
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;atr&lt;/span&gt; = &lt;span class='wlnet03'&gt;ATR&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;,&lt;span class='wlnet04'&gt;10&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;];
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;(    &lt;span class='wlnet06'&gt;SellAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet03'&gt;Lowest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Low&lt;/span&gt;,&lt;span class='wlnet04'&gt;40&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] ) == &lt;span class='wlnet05'&gt;false&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;SellAtLimit&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]+&lt;span class='wlnet04'&gt;2&lt;/span&gt;*&lt;span class='wlnet03'&gt;atr&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet06'&gt;BuyAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;Highest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;High&lt;/span&gt;,&lt;span class='wlnet04'&gt;20&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] );
        }
    }

    &lt;span class='wlnet01'&gt;// Print exit order type statistics&lt;/span&gt;
    
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;stop&lt;/span&gt; = &lt;span class='wlnet04'&gt;0&lt;/span&gt;;
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;limit&lt;/span&gt; = &lt;span class='wlnet04'&gt;0&lt;/span&gt;;

    &lt;span class='wlnet05'&gt;foreach&lt;/span&gt;( &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; &lt;span class='wlnet05'&gt;in&lt;/span&gt; &lt;span class='wlnet07'&gt;Positions&lt;/span&gt; )
        &lt;span class='wlnet05'&gt;if&lt;/span&gt;( !&lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;Active&lt;/span&gt; )
        {
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;ExitOrderType&lt;/span&gt; == &lt;span class='wlnet03'&gt;OrderType&lt;/span&gt;.&lt;span class='wlnet03'&gt;Stop&lt;/span&gt; )
                &lt;span class='wlnet03'&gt;stop&lt;/span&gt;++;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;ExitOrderType&lt;/span&gt; == &lt;span class='wlnet03'&gt;OrderType&lt;/span&gt;.&lt;span class='wlnet03'&gt;Limit&lt;/span&gt; )
                &lt;span class='wlnet03'&gt;limit&lt;/span&gt;++;
        }
    &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Exits on stop: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;stop&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Exits at limits: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;limit&lt;/span&gt; );
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>ExitPrice</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;ExitPrice Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;double ExitPrice&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the exit price of the Position.&amp;nbsp; If the Position is still 
active, &lt;b&gt;ExitPrice&lt;/b&gt; returns 0.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>&lt;pre class='wlnetcode'&gt;&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Collections&lt;/span&gt;.&lt;span class='wlnet03'&gt;Generic&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Text&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Drawing&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Indicators&lt;/span&gt;;

&lt;span class='wlnet05'&gt;namespace&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Strategies&lt;/span&gt;
{
    &lt;span class='wlnet05'&gt;public&lt;/span&gt; &lt;span class='wlnet05'&gt;class&lt;/span&gt; &lt;span class='wlnet03'&gt;MyStrategy&lt;/span&gt; : &lt;span class='wlnet03'&gt;WealthScript&lt;/span&gt;
    {
        &lt;span class='wlnet01'&gt;// This procedure reports the entry and exit levels of all trades&lt;/span&gt;
        &lt;span class='wlnet05'&gt;void&lt;/span&gt; &lt;span class='wlnet03'&gt;TradeReport&lt;/span&gt;()
        {
            &lt;span class='wlnet05'&gt;foreach&lt;/span&gt;( &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; &lt;span class='wlnet05'&gt;in&lt;/span&gt; &lt;span class='wlnet07'&gt;Positions&lt;/span&gt; )
            {
                &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Entry:&amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryDate&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot; at &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryPrice&lt;/span&gt; );
                &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Exit:&amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;ExitDate&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot; at &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;ExitPrice&lt;/span&gt; );
            }
        }

        &lt;span class='wlnet05'&gt;protected&lt;/span&gt; &lt;span class='wlnet05'&gt;override&lt;/span&gt; &lt;span class='wlnet05'&gt;void&lt;/span&gt; &lt;span class='wlnet03'&gt;Execute&lt;/span&gt;()
        {
            &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
            {
                &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
                    &lt;span class='wlnet06'&gt;SellAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet03'&gt;Lowest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;(&lt;span class='wlnet07'&gt;Close&lt;/span&gt;,&lt;span class='wlnet04'&gt;20&lt;/span&gt;)[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet10'&gt;&amp;quot;Exit&amp;quot;&lt;/span&gt; );
                &lt;span class='wlnet05'&gt;else&lt;/span&gt;
                    &lt;span class='wlnet06'&gt;BuyAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]+&lt;span class='wlnet04'&gt;2&lt;/span&gt;*&lt;span class='wlnet03'&gt;ATR&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;(&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;,&lt;span class='wlnet04'&gt;10&lt;/span&gt;)[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet10'&gt;&amp;quot;Long&amp;quot;&lt;/span&gt; );
            }
            &lt;span class='wlnet03'&gt;TradeReport&lt;/span&gt;();
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>ExitSignal</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;ExitSignal Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;string ExitSignal&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the &amp;quot;signal name&amp;quot; that was supplied in the &amp;quot;SellAtXXX&amp;quot; or &amp;quot;CoverAtXXX&amp;quot; 
method that was used to close the Position.&amp;nbsp; All &amp;quot;SellAtXXX&amp;quot; and &amp;quot;CoverAtXXX&amp;quot; 
methods allow you to specify an optional signalName parameter.&amp;nbsp; The value 
that you specify there is visible in the trade list, and is also accessible via 
the &lt;b&gt;ExitSignal&lt;/b&gt; property.&amp;nbsp; If the Position is still active, &lt;b&gt;
ExitSignal&lt;/b&gt; returns a blank string.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Marks the position exit bar with the exit signal name&lt;/span&gt;
    
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;atr&lt;/span&gt; = &lt;span class='wlnet03'&gt;ATR&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;,&lt;span class='wlnet04'&gt;10&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;];
        
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; = &lt;span class='wlnet07'&gt;LastActivePosition&lt;/span&gt;;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;SellAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet03'&gt;Lowest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Low&lt;/span&gt;,&lt;span class='wlnet04'&gt;10&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet10'&gt;&amp;quot;Breakdown&amp;quot;&lt;/span&gt; ) )
                &lt;span class='wlnet06'&gt;AnnotateBar&lt;/span&gt;( &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;ExitSignal&lt;/span&gt;.&lt;span class='wlnet06'&gt;ToString&lt;/span&gt;(), &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet05'&gt;false&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt; ); &lt;span class='wlnet05'&gt;else&lt;/span&gt;                        
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet06'&gt;SellAtLimit&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]+&lt;span class='wlnet03'&gt;atr&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Target&amp;quot;&lt;/span&gt; ) )
                &lt;span class='wlnet06'&gt;AnnotateBar&lt;/span&gt;( &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;ExitSignal&lt;/span&gt;.&lt;span class='wlnet06'&gt;ToString&lt;/span&gt;(), &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt; );
            
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
            &lt;span class='wlnet06'&gt;BuyAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;Highest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] );
    }
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>HighestHighAsOfBar</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;HighestHighAsOfBar&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000ff"&gt;double HighestHighAsOfBar(int bar);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the highest price registered in the Position, as of the specified &lt;b&gt;bar&lt;/b&gt; number.&amp;nbsp;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;50&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {    
            &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; = &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;;
            &lt;span class='wlnet06'&gt;SellAtTrailingStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;HighestHighAsOfBar&lt;/span&gt;(&lt;span class='wlnet03'&gt;bar&lt;/span&gt;) - &lt;span class='wlnet04'&gt;3&lt;/span&gt;*&lt;span class='wlnet03'&gt;ATR&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet04'&gt;14&lt;/span&gt; ), &lt;span class='wlnet10'&gt;&amp;quot;3x ATR Stop&amp;quot;&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
            &lt;span class='wlnet06'&gt;BuyAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;Highest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] );
    }
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>LowestLowAsOfBar</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;LowestLowAsOfBar&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000ff"&gt;double LowestLowAsOfBar(int bar);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the lowest price registered in the Position, as of the specified &lt;b&gt;bar&lt;/b&gt; number.&amp;nbsp;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;50&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {    
            &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; = &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;;
            &lt;span class='wlnet06'&gt;CoverAtTrailingStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;LowestLowAsOfBar&lt;/span&gt;(&lt;span class='wlnet03'&gt;bar&lt;/span&gt;) + &lt;span class='wlnet04'&gt;3&lt;/span&gt;*&lt;span class='wlnet03'&gt;ATR&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet04'&gt;14&lt;/span&gt; ), &lt;span class='wlnet10'&gt;&amp;quot;3x ATR Stop&amp;quot;&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
            &lt;span class='wlnet06'&gt;ShortAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;Lowest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Low&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] );
    }
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>MAE</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;MAE Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000ff"&gt;double MAE&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the Maximum Adverse Excursion (MAE) that was generated by the 
Position, with commissions applied.&amp;nbsp; &lt;b&gt;MAE&lt;/b&gt; represents the largest 
intraday loss that the trade experienced during its lifetime.&amp;nbsp; This property is 
intended for use by Performance Visualizers, and not in Strategies.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;b&gt;MAE&lt;/b&gt; is not available during Strategy execution, and is only 
  available to Performance Visualizers that execute after position sizing has 
  been applied.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example />
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>MAEAsOfBar</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;MAEAsOfBar&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000ff"&gt;double MAEAsOfBar(int bar);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the Maximum Adverse Excursion (MAE) that was generated by the 
Position, with commissions applied, as of the specified &lt;b&gt;bar&lt;/b&gt; number.&amp;nbsp;
&lt;b&gt;MAEAsOfBar&lt;/b&gt; represents the largest intraday loss that the trade 
experienced up to the specified &lt;b&gt;bar&lt;/b&gt;.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;In portfolio simulation mode, all trades are pre-executed using 1 share 
  per Position, and then position sizing is applied after the fact.&amp;nbsp; So the &lt;b&gt;
  MAEAsOfBar&lt;/b&gt; property will always be based on 1 share while the Strategy is 
  executing. &lt;/li&gt;
  &lt;li&gt;The &lt;b&gt;MAEAsOfBar&lt;/b&gt; property is always available to Performance 
  Visualizers, which execute after the position sizing has been applied.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Record a position's Maximum Adverse Excursion (MAE) at each bar as a Data Series.&lt;/span&gt;
    &lt;span class='wlnet01'&gt;// This system buys on a crossover of a 30-period weighted&lt;/span&gt;
    &lt;span class='wlnet01'&gt;// moving average and sells after 20 bars.&lt;/span&gt;

    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;timedExit&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;; &lt;span class='wlnet01'&gt;// just exit after 20 days&lt;/span&gt;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;hMA&lt;/span&gt; = &lt;span class='wlnet03'&gt;WMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;30&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;hMAESer&lt;/span&gt; = &lt;span class='wlnet05'&gt;new&lt;/span&gt; &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;MAE&amp;quot;&lt;/span&gt; );

    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet03'&gt;hMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;FirstValidValue&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet03'&gt;hMAESer&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] = &lt;span class='wlnet07'&gt;LastActivePosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;MAEAsOfBar&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt; );
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; - &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryBar&lt;/span&gt; &amp;gt;= &lt;span class='wlnet03'&gt;timedExit&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet06'&gt;CrossOver&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet03'&gt;hMA&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] ) )
                &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Xover&amp;quot;&lt;/span&gt; );

        }
    }
    
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;ProfitPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;50&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;ProfitPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;hMAESer&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;DarkGreen&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Histogram&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;hMA&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;2&lt;/span&gt; );
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>MAEAsOfBarPercent</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;MAEAsOfBarPercent&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000ff"&gt;double MAEAsOfBarPercent(int bar);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the Maximum Adverse Excursion (MAE) that was generated by the 
Position, with commissions applied, as a percentage, as of the specified &lt;b&gt;bar&lt;/b&gt; 
number.&amp;nbsp; &lt;b&gt;MAEAsOfBarPercent&lt;/b&gt; represents the largest intraday 
percentage loss that the trade experienced up to the specified &lt;b&gt;bar&lt;/b&gt;.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;In portfolio simulation mode, all trades are pre-executed using 1 share 
  per Position, and then position sizing is applied after the fact.&amp;nbsp; So the &lt;b&gt;
  MAEAsOfBarPercent&lt;/b&gt; property will always be based on 1 share while the 
  Strategy is executing. &lt;/li&gt;
  &lt;li&gt;The &lt;b&gt;MAEAsOfBarPercent&lt;/b&gt; property is always available to Performance 
  Visualizers, which execute after the position sizing has been applied.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Record a position's Maximum Adverse Excursion (MAE) percentage&lt;/span&gt;
    &lt;span class='wlnet01'&gt;// at each bar as a Data Series.&lt;/span&gt;
    &lt;span class='wlnet01'&gt;// This system buys on a crossover of a 30-period weighted&lt;/span&gt;
    &lt;span class='wlnet01'&gt;// moving average and sells after 20 bars.&lt;/span&gt;

    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;timedExit&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;; &lt;span class='wlnet01'&gt;// just exit after 20 days&lt;/span&gt;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;hMA&lt;/span&gt; = &lt;span class='wlnet03'&gt;WMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;30&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;hMAEPctSer&lt;/span&gt; = &lt;span class='wlnet05'&gt;new&lt;/span&gt; &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;MAE (Percentage)&amp;quot;&lt;/span&gt; );

    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet03'&gt;hMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;FirstValidValue&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet03'&gt;hMAEPctSer&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] = &lt;span class='wlnet07'&gt;LastActivePosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;MAEAsOfBarPercent&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt; );
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; - &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryBar&lt;/span&gt; &amp;gt;= &lt;span class='wlnet03'&gt;timedExit&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet06'&gt;CrossOver&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet03'&gt;hMA&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] ) )
                &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Xover&amp;quot;&lt;/span&gt; );

        }
    }
    
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;ProfitPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;50&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;ProfitPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;hMAEPctSer&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;DarkGreen&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Histogram&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;hMA&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;2&lt;/span&gt; );
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>MAEPercent</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;MAEPercent Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000ff"&gt;double MAEPercent&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the Maximum Adverse Excursion (MAE) that was generated by the 
Position, with commissions applied, as a percentage.&amp;nbsp; &lt;b&gt;MAEPercent&lt;/b&gt; 
represents the largest intraday percentage loss that the trade experienced 
during its lifetime.&amp;nbsp; This property is intended for use by Performance 
Visualizers, and not in Strategies.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;b&gt;MAEPercent&lt;/b&gt; is not available during Strategy execution, and is only 
  available to Performance Visualizers that execute after position sizing has 
  been applied.&lt;/li&gt;
&lt;/ul&gt;





&lt;/html&gt;</Description>
        <Example />
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>MFE</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;MFE Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000ff"&gt;double MFE&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the Maximum Favorable Excursion (MFE) that was generated by the 
Position, with commissions applied.&amp;nbsp; &lt;b&gt;MFE&lt;/b&gt; represents the highest 
intraday profit that the trade experienced during its lifetime.&amp;nbsp; This property 
is intended for use by Performance Visualizers, and not in Strategies.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;b&gt;MFE&lt;/b&gt; is not available during Strategy execution, and is only 
  available to Performance Visualizers that execute after position sizing has 
  been applied.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example />
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>MFEAsOfBar</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;MFEAsOfBar&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000ff"&gt;double MFEAsOfBar(int bar);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the Maximum Favorable Excursion (MFE) that was generated by the 
Position, with commissions applied, as of the specified &lt;b&gt;bar&lt;/b&gt; number.&amp;nbsp;
&lt;b&gt;MFEAsOfBar &lt;/b&gt;represents the highest intraday profit that the trade 
experienced up to the specified &lt;b&gt;bar&lt;/b&gt;.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;In portfolio simulation mode, all trades are pre-executed using 1 share 
  per Position, and then position sizing is applied after the fact.&amp;nbsp; So the &lt;b&gt;
  MFEAsOfBar&lt;/b&gt; property will always be based on 1 share while the Strategy is 
  executing. &lt;/li&gt;
  &lt;li&gt;The &lt;b&gt;MFEAsOfBar&lt;/b&gt; property is always available to Performance 
  Visualizers, which execute after the position sizing has been applied.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Record a position's Maximum Favorite Excursion (MFE) at each bar as a Data Series.&lt;/span&gt;
    &lt;span class='wlnet01'&gt;// This system buys on a crossover of a 30-period weighted&lt;/span&gt;
    &lt;span class='wlnet01'&gt;// moving average and sells after 20 bars.&lt;/span&gt;

    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;timedExit&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;; &lt;span class='wlnet01'&gt;// just exit after 20 days&lt;/span&gt;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;hMA&lt;/span&gt; = &lt;span class='wlnet03'&gt;WMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;30&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;hMFESer&lt;/span&gt; = &lt;span class='wlnet05'&gt;new&lt;/span&gt; &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;MFE&amp;quot;&lt;/span&gt; );

    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet03'&gt;hMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;FirstValidValue&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet03'&gt;hMFESer&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] = &lt;span class='wlnet07'&gt;LastActivePosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;MFEAsOfBar&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt; );
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; - &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryBar&lt;/span&gt; &amp;gt;= &lt;span class='wlnet03'&gt;timedExit&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet06'&gt;CrossOver&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet03'&gt;hMA&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] ) )
                &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Xover&amp;quot;&lt;/span&gt; );

        }
    }
    
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;ProfitPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;50&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;ProfitPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;hMFESer&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;DarkGreen&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Histogram&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;hMA&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;2&lt;/span&gt; );
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>MFEAsOfBarPercent</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;MFEAsOfBarPercent&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000ff"&gt;double MFEAsOfBarPercent(int bar);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the Maximum Favorable Excursion (MFE) that was generated by the 
Position, with commissions applied, as a percentage, as of the specified &lt;b&gt;bar&lt;/b&gt; 
number.&amp;nbsp; &lt;b&gt;MFEAsOfBarPercent&lt;/b&gt; represents the highest intraday 
percentage profit that the trade experienced up to the specified &lt;b&gt;bar&lt;/b&gt;.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;In portfolio simulation mode, all trades are pre-executed using 1 share 
  per Position, and then position sizing is applied after the fact.&amp;nbsp; So the &lt;b&gt;
  MFEAsOfBarPercent&lt;/b&gt; property will always be based on 1 share while the 
  Strategy is executing. &lt;/li&gt;
  &lt;li&gt;The &lt;b&gt;MFEAsOfBarPercent&lt;/b&gt; property is always available to Performance 
  Visualizers, which execute after the position sizing has been applied.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Record a position's Maximum Favorable Excursion (MFE) percentage&lt;/span&gt;
    &lt;span class='wlnet01'&gt;// at each bar as a Data Series.&lt;/span&gt;
    &lt;span class='wlnet01'&gt;// This system buys on a crossover of a 30-period weighted&lt;/span&gt;
    &lt;span class='wlnet01'&gt;// moving average and sells after 20 bars.&lt;/span&gt;

    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;timedExit&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;; &lt;span class='wlnet01'&gt;// just exit after 20 days&lt;/span&gt;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;hMA&lt;/span&gt; = &lt;span class='wlnet03'&gt;WMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;30&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;hMFEPctSer&lt;/span&gt; = &lt;span class='wlnet05'&gt;new&lt;/span&gt; &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;MFE (Percentage)&amp;quot;&lt;/span&gt; );

    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet03'&gt;hMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;FirstValidValue&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet03'&gt;hMFEPctSer&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] = &lt;span class='wlnet07'&gt;LastActivePosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;MFEAsOfBarPercent&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt; );
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; - &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryBar&lt;/span&gt; &amp;gt;= &lt;span class='wlnet03'&gt;timedExit&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet06'&gt;CrossOver&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet03'&gt;hMA&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] ) )
                &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Xover&amp;quot;&lt;/span&gt; );

        }
    }
    
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;ProfitPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;50&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;ProfitPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;hMFEPctSer&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;DarkGreen&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Histogram&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;hMA&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;2&lt;/span&gt; );
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>MFEPercent</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;MFEPercent Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000ff"&gt;double MFEPercent&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the Maximum Favorable Excursion (MFE) that was generated by the 
Position, with commissions applied, as a percentage.&amp;nbsp; &lt;b&gt;MFEPercent&lt;/b&gt; 
represents the highest intraday percentage profit that the trade experienced 
during its lifetime.&amp;nbsp; This property is intended for use by Performance 
Visualizers, and not in Strategies.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;b&gt;MFEPercent&lt;/b&gt; is not available during Strategy execution, and is only 
  available to Performance Visualizers that execute after position sizing has 
  been applied.&lt;/li&gt;
&lt;/ul&gt;





&lt;/html&gt;
</Description>
        <Example />
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>NetProfit</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;NetProfit Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;double NetProfit&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the profit that was generated by the Position, excluding commissions.&amp;nbsp; 
This property is intended for use by Performance Visualizers, and not in 
Strategies.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;In portfolio simulation mode, all trades are pre-executed using 1 share 
  per Position, and then position sizing is applied after the fact.&amp;nbsp; So the 
  &lt;b&gt;NetProfit&lt;/b&gt; property will always be based on 1 share while the Strategy is 
  executing.&lt;/li&gt;
  &lt;li&gt;The &lt;b&gt;NetProfit&lt;/b&gt; property is always available to Performance Visualizers, 
  which execute after the position sizing has been applied.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example />
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>NetProfitAsOfBar</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;NetProfitAsOfBar&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;double NetProfitAsOfBar(int bar);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the profit that was generated by the Position, excluding commissions, 
as of the specified &lt;b&gt;bar&lt;/b&gt; number.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;In portfolio simulation mode, all trades are pre-executed using 1 share 
  per Position, and then position sizing is applied after the fact.&amp;nbsp; So &lt;b&gt;
  NetProfitAsOfBar&lt;/b&gt; will always be based on 1 share while the Strategy is 
  executing.&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;NetProfitAsOfBar&lt;/b&gt; is always available to Performance Visualizers, 
  which execute after the position sizing has been applied.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Record a position's net profit at each bar as a Data Series.&lt;/span&gt;
    &lt;span class='wlnet01'&gt;// This system buys on a crossover of a 30-period weighted&lt;/span&gt;
    &lt;span class='wlnet01'&gt;// moving average and sells after 20 bars.&lt;/span&gt;

    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;timedExit&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;; &lt;span class='wlnet01'&gt;// just exit after 20 days&lt;/span&gt;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;hMA&lt;/span&gt; = &lt;span class='wlnet03'&gt;WMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;30&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;hPftSer&lt;/span&gt; = &lt;span class='wlnet05'&gt;new&lt;/span&gt; &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Net Profit&amp;quot;&lt;/span&gt; );

    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet03'&gt;hMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;FirstValidValue&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet03'&gt;hPftSer&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] = &lt;span class='wlnet07'&gt;LastActivePosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;NetProfitAsOfBar&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt; );
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; - &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryBar&lt;/span&gt; &amp;gt;= &lt;span class='wlnet03'&gt;timedExit&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet06'&gt;CrossOver&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet03'&gt;hMA&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] ) )
                &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Xover&amp;quot;&lt;/span&gt; );

        }
    }
    
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;ProfitPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;50&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;ProfitPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;hPftSer&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;DarkGreen&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Histogram&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; ); &lt;span class='wlnet01'&gt;//'Open Profit' &lt;/span&gt;
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;hMA&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;2&lt;/span&gt; );
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>NetProfitAsOfBarPercent</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;NetProfitAsOfBarPercent&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;double NetProfitAsOfBarPercent(int bar);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the percentage profit that was generated by the Position, excluding 
commissions, as of the specified &lt;b&gt;bar&lt;/b&gt; number.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;In portfolio simulation mode, all trades are pre-executed using 1 share 
  per Position, and then position sizing is applied after the fact.&amp;nbsp; So &lt;b&gt;
  NetProfitAsOfBarPercent&lt;/b&gt; will always be based on 1 share while the Strategy 
  is executing.&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;NetProfitAsOfBarPercent&lt;/b&gt; is always available to Performance 
  Visualizers, which execute after the position sizing has been applied.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Record a position's percentage profit at each bar as a Data Series.&lt;/span&gt;
    &lt;span class='wlnet01'&gt;// This system buys on a crossover of a 30-period weighted&lt;/span&gt;
    &lt;span class='wlnet01'&gt;// moving average and sells after 20 bars.&lt;/span&gt;

    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;timedExit&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;; &lt;span class='wlnet01'&gt;// just exit after 20 days&lt;/span&gt;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;hMA&lt;/span&gt; = &lt;span class='wlnet03'&gt;WMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;30&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;hPftPctSer&lt;/span&gt; = &lt;span class='wlnet05'&gt;new&lt;/span&gt; &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Net Profit (Percent)&amp;quot;&lt;/span&gt; );

    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet03'&gt;hMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;FirstValidValue&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet03'&gt;hPftPctSer&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] = &lt;span class='wlnet07'&gt;LastActivePosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;NetProfitAsOfBarPercent&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt; );
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; - &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryBar&lt;/span&gt; &amp;gt;= &lt;span class='wlnet03'&gt;timedExit&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet06'&gt;CrossOver&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet03'&gt;hMA&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] ) )
                &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Xover&amp;quot;&lt;/span&gt; );

        }
    }
    
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;ProfitPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;50&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;ProfitPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;hPftPctSer&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;DarkGreen&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Histogram&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; ); &lt;span class='wlnet01'&gt;//'Open Profit' &lt;/span&gt;
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;hMA&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;2&lt;/span&gt; );
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>NetProfitPercent</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;NetProfitPercent Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;double NetProfitPercent&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the profit that was generated by the Position, excluding commissions, 
as a percentage.&amp;nbsp; This property is intended for use by Performance 
Visualizers, and not in Strategies.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;In portfolio simulation mode, all trades are pre-executed using 1 share 
  per Position, and then position sizing is applied after the fact.&amp;nbsp; So the
  &lt;b&gt;NetProfitPercent&lt;/b&gt; property will always be based on 1 share while the 
  Strategy is executing.&lt;/li&gt;
  &lt;li&gt;The &lt;b&gt;NetProfitPercent&lt;/b&gt; property is always available to Performance 
  Visualizers, which execute after the position sizing has been applied.&lt;/li&gt;
&lt;/ul&gt;





&lt;/html&gt;
</Description>
        <Example />
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>PositionType</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;PositionType Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;PositionType PositionType&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the type of Position, either long or short.&amp;nbsp; Possible values 
are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;PositionType.Long&lt;/li&gt;
  &lt;li&gt;PositionType.Short&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;5&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt; )
        {
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;PositionType&lt;/span&gt; == &lt;span class='wlnet03'&gt;PositionType&lt;/span&gt;.&lt;span class='wlnet05'&gt;Long&lt;/span&gt; ) 
                &lt;span class='wlnet06'&gt;SellAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet03'&gt;Lowest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Low&lt;/span&gt;, &lt;span class='wlnet04'&gt;4&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] ); &lt;span class='wlnet05'&gt;else&lt;/span&gt;
                &lt;span class='wlnet06'&gt;CoverAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet03'&gt;Highest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet04'&gt;4&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] );
        } &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet06'&gt;BuyAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;Highest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet04'&gt;4&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] ) == &lt;span class='wlnet05'&gt;null&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;ShortAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;Lowest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Low&lt;/span&gt;, &lt;span class='wlnet04'&gt;4&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] );
        }
    }
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Priority</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Priority Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;double Priority&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;The &lt;b&gt;Priority&lt;/b&gt; property comes in to play if there is a situation where there are several trade alerts generated in a simulation, but there is only enough capital to take some of the alerts.&amp;nbsp; In this case, the trades are executed in order of the Positions' &lt;b&gt;Priority&lt;/b&gt; value, with the higher numeric values taking precedence.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Priority&lt;/b&gt; is generally used for Strategies that use &lt;b&gt;Buy/ShortAtMarket&lt;/b&gt; (or &lt;b&gt;AtClose&lt;/b&gt;) entries. For example, assume that your trading system generates 10 orders to place on the next bar, but you have cash enough for 4 orders only.  Prior to placing orders, it's possible to determine which of the orders to place based on some indicator or price.&lt;/p&gt;
&lt;h2&gt;AtLimit/AtStop Entry Orders&lt;/h2&gt;
&lt;p&gt;Generally speaking, you should not assign &lt;b&gt;Priority&lt;/b&gt; for Strategies that use AtLimit/AtStop entries.  Doing so may create a peeking effect since it's often not possible to know which limit (or stop) orders will execute first when orders are placed for multiple instruments. You can, however, realistically use the inverse of the HHmm time-of-day as the correct Priority value.  In other words, trades that occur earlier in the day should be assigned higher priority.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;Exceptions:&lt;/i&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;If the script employs a "multi-dip buyer" strategy, assign a higher Priority value to AtLimit orders with higher limit prices. If you don't, the possibility exists to execute orders with lower limit prices first (and vice-versa for ShortAtLimit).&lt;/li&gt;
  &lt;li&gt;You can intentionally peek to determine if an AtLimit/AtStop order occurred at the opening price, and in this case you could assign an equally-high priority to these Positions. This is a valid use of peeking in backtesting.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;font color=red&gt;&lt;b&gt;Warning!&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;You &lt;i&gt;should&lt;/i&gt; employ &lt;b&gt;Priority&lt;/b&gt; in Strategies that use multiple order-entry types, such as AtMarket and AtLimit orders. Since the Strategy window does not distinguish between the types, set a higher priority for AtMarket entries so that they are processed before AtLimit/AtStop orders on the same bar.&lt;/p&gt;
&lt;h2&gt;Note&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Positions are initialized a random &lt;b&gt;Priority&lt;/b&gt; value.&amp;nbsp; This means that simulations run consecutively could generate different results if there is not enough capital to take all of the trades generated.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    
    &lt;span class='wlnet01'&gt;// Commodity Selection Index by Welles Wilder Jr. (c) 1979&lt;/span&gt;
    &lt;span class='wlnet01'&gt;// Run this strategy in Futures mode on a symbol which has defined margin/point value&lt;/span&gt;

    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;Commission&lt;/span&gt; = &lt;span class='wlnet04'&gt;8&lt;/span&gt;;
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;adxPeriod&lt;/span&gt; = &lt;span class='wlnet04'&gt;14&lt;/span&gt;;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;CSI&lt;/span&gt; = &lt;span class='wlnet05'&gt;new&lt;/span&gt; &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Commodity Selection Index (CSI)&amp;quot;&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;SymbolInfo&lt;/span&gt; &lt;span class='wlnet03'&gt;si&lt;/span&gt; = &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;SymbolInfo&lt;/span&gt;;

    &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet03'&gt;si&lt;/span&gt;.&lt;span class='wlnet03'&gt;Margin&lt;/span&gt; &amp;gt; &lt;span class='wlnet04'&gt;0&lt;/span&gt; )
    {
        &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet03'&gt;adxPeriod&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
        {
            &lt;span class='wlnet03'&gt;CSI&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] = &lt;span class='wlnet03'&gt;ADXR&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet03'&gt;adxPeriod&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] * &lt;span class='wlnet03'&gt;ATR&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet03'&gt;adxPeriod&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] * ( ( &lt;span class='wlnet03'&gt;si&lt;/span&gt;.&lt;span class='wlnet03'&gt;PointValue&lt;/span&gt; &lt;span class='wlnet01'&gt;/ Math.Sqrt( si.Margin ) ) * (float) 1 / ( 150 + Commission )  ) * 100;&lt;/span&gt;
        }
    } &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        &lt;span class='wlnet01'&gt;// Will not execute if margin is not specified in Symbol Info Manager&lt;/span&gt;
        &lt;span class='wlnet06'&gt;Abort&lt;/span&gt;();

    &lt;span class='wlnet01'&gt;// Plot Commodity Selection Index on chart&lt;/span&gt;
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;CSIPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;40&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;CSIPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;CSI&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;2&lt;/span&gt; );
    
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;Lowest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;10&lt;/span&gt; ), &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;Highest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;10&lt;/span&gt; ), &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );

    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; = &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;PositionType&lt;/span&gt; == &lt;span class='wlnet03'&gt;PositionType&lt;/span&gt;.&lt;span class='wlnet05'&gt;Long&lt;/span&gt; )
            &lt;span class='wlnet06'&gt;SellAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;, &lt;span class='wlnet03'&gt;Lowest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;10&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet10'&gt;&amp;quot;Exit&amp;quot;&lt;/span&gt; );
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;PositionType&lt;/span&gt; == &lt;span class='wlnet03'&gt;PositionType&lt;/span&gt;.&lt;span class='wlnet05'&gt;Short&lt;/span&gt; )
            &lt;span class='wlnet06'&gt;CoverAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;, &lt;span class='wlnet03'&gt;Highest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;10&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet10'&gt;&amp;quot;Cover&amp;quot;&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;gt; &lt;span class='wlnet03'&gt;Highest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] )
                &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;Convert&lt;/span&gt;.&lt;span class='wlnet06'&gt;ToString&lt;/span&gt;( &lt;span class='wlnet03'&gt;CSI&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] ) ) != &lt;span class='wlnet05'&gt;null&lt;/span&gt; )
                    &lt;span class='wlnet07'&gt;LastActivePosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;Priority&lt;/span&gt; = &lt;span class='wlnet03'&gt;CSI&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;];

            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;lt; &lt;span class='wlnet03'&gt;Lowest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] )
                &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;ShortAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;Convert&lt;/span&gt;.&lt;span class='wlnet06'&gt;ToString&lt;/span&gt;( &lt;span class='wlnet03'&gt;CSI&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] ) ) != &lt;span class='wlnet05'&gt;null&lt;/span&gt; )
                    &lt;span class='wlnet07'&gt;LastActivePosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;Priority&lt;/span&gt; = &lt;span class='wlnet03'&gt;CSI&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;];
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>ProfitPerBar</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;ProfitPerBar Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;double ProfitPerBar&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the net profit of the Position divided by the number of bars held.&amp;nbsp; 
If the Position is still active, the number of bars is based onthe total number 
of bars held as of the last bar of the chart.&amp;nbsp; The &lt;b&gt;ProfitPerBar&lt;/b&gt; 
property is primarily intended for use by Performance Visualizers, not 
Strategies.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;In portfolio simulation mode, all trades are pre-executed using 1 share 
  per Position, and then position sizing is applied after the fact.&amp;nbsp; So the &lt;b&gt;
  ProfitPerBar&lt;/b&gt; property will always be based on 1 share while the Strategy 
  is executing. &lt;/li&gt;
  &lt;li&gt;The &lt;b&gt;ProfitPerBar&lt;/b&gt; property is always available to Performance 
  Visualizers, which execute after the position sizing has been applied.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;





&lt;/html&gt;
</Description>
        <Example />
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>RiskStopLevel</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;RiskStopLevel Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;double RiskStopLevel&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Specifies the initial stop level (price) of the Position. 
This stop level is used when you select the Maximum Risk Pct Position Sizing option.&amp;nbsp; This option specifies the maximum amount of capital you are willing to risk on each trade.&amp;nbsp; When this option is selected, you must set the value of &lt;b&gt;RiskStopLevel&lt;/b&gt; in your Strategy code to indicate the initial stop loss value for a newly created Position.&lt;/p&gt;
&lt;p&gt;For example, a simple channel breakout system might enter at the highest 20 bar high, and exit at the lowest 20 bar low.&amp;nbsp; Prior to issuing the &lt;b&gt;
BuyAtMarket&lt;/b&gt;, or &lt;b&gt;BuyAtStop&lt;/b&gt;, you should set &lt;b&gt;RiskStopLevel&lt;/b&gt; to the 
lowest Low value of the past 20 bars as the initial stop level for the long 
Position.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;If you select the Maximum Risk Pct position sizing option and do not set
  &lt;b&gt;RiskStopLevel&lt;/b&gt; in your Strategy code, you will receive an error message 
  when attempting to run the Strategy.&lt;/li&gt;
  &lt;li&gt;You must also be diligent in your Strategy to actually use the established 
  stop level as an exit.&amp;nbsp; If you do not, the Strategy could lose 
  considerably more than the Maximum Risk that you established in the Position 
  Size setting.&lt;/li&gt;
&lt;li&gt;Once a RiskStopLevel is established for a Position, do not change it. The [last] value assigned to a Position's RiskStopLevel is used to determine % Risk sizing, consequently reassigning its value after the Position is established is effectively a peeking error.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>    &lt;span class='wlnet06'&gt;ClearDebug&lt;/span&gt;();
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;3&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {                
        &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet03'&gt;CumUp&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;(&lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt;) &amp;gt;= &lt;span class='wlnet04'&gt;2&lt;/span&gt; )
        {
            &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;pos&lt;/span&gt; = &lt;span class='wlnet07'&gt;ActivePositions&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; - &lt;span class='wlnet04'&gt;1&lt;/span&gt;; &lt;span class='wlnet03'&gt;pos&lt;/span&gt; &amp;gt;= &lt;span class='wlnet04'&gt;0&lt;/span&gt;; &lt;span class='wlnet03'&gt;pos&lt;/span&gt;--)
            {
                &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; = &lt;span class='wlnet07'&gt;ActivePositions&lt;/span&gt;[&lt;span class='wlnet03'&gt;pos&lt;/span&gt;];
                &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;(&lt;span class='wlnet03'&gt;bar&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot;\t&amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryBar&lt;/span&gt;  + &lt;span class='wlnet10'&gt;&amp;quot;\t&amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet07'&gt;RiskStopLevel&lt;/span&gt;.&lt;span class='wlnet06'&gt;ToString&lt;/span&gt;(&lt;span class='wlnet10'&gt;&amp;quot;0.00&amp;quot;&lt;/span&gt;) + &lt;span class='wlnet10'&gt;&amp;quot;\t&amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntrySignal&lt;/span&gt; );
                &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;(&lt;span class='wlnet03'&gt;bar&lt;/span&gt; + &lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;);           
            }
            &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;(&lt;span class='wlnet10'&gt;&amp;quot;&amp;quot;&lt;/span&gt;);
        }                

        &lt;span class='wlnet07'&gt;RiskStopLevel&lt;/span&gt; = &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] - &lt;span class='wlnet04'&gt;1.0&lt;/span&gt;;
        &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet03'&gt;CumDown&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;(&lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt;) &amp;gt;= &lt;span class='wlnet04'&gt;2&lt;/span&gt; )
            &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;(&lt;span class='wlnet03'&gt;bar&lt;/span&gt; + &lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;Convert&lt;/span&gt;.&lt;span class='wlnet06'&gt;ToString&lt;/span&gt;(&lt;span class='wlnet07'&gt;RiskStopLevel&lt;/span&gt;) );
    }
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt; </Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Shares</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Shares Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;double Shares&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the number of shares (or contracts) that the Position contains.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;In portfolio simulation mode, all trades are pre-executed using 1 share 
  per Position, and then position sizing is applied after the fact.&amp;nbsp; So the 
  &lt;b&gt;Shares&lt;/b&gt; property will always return 1 while the Strategy is executing.&lt;/li&gt;
  &lt;li&gt;The &lt;b&gt;Shares&lt;/b&gt; property is always available to Performance Visualizers, which 
  execute after the position sizing has been applied.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>&lt;pre class='wlnetcode'&gt;&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Collections&lt;/span&gt;.&lt;span class='wlnet03'&gt;Generic&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Text&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Drawing&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Indicators&lt;/span&gt;;

&lt;span class='wlnet05'&gt;namespace&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Strategies&lt;/span&gt;
{
    &lt;span class='wlnet05'&gt;public&lt;/span&gt; &lt;span class='wlnet05'&gt;class&lt;/span&gt; &lt;span class='wlnet03'&gt;MyStrategy&lt;/span&gt; : &lt;span class='wlnet03'&gt;WealthScript&lt;/span&gt;
    {
        &lt;span class='wlnet01'&gt;// Write number of shares of open Positions to debug window&lt;/span&gt;
        &lt;span class='wlnet05'&gt;protected&lt;/span&gt; &lt;span class='wlnet05'&gt;void&lt;/span&gt; &lt;span class='wlnet03'&gt;WriteOpenTrades&lt;/span&gt;()
        {
            &lt;span class='wlnet06'&gt;ClearDebug&lt;/span&gt;();
            &lt;span class='wlnet01'&gt;// Cycle through open positions&lt;/span&gt;
            &lt;span class='wlnet05'&gt;foreach&lt;/span&gt;( &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; &lt;span class='wlnet05'&gt;in&lt;/span&gt; &lt;span class='wlnet07'&gt;Positions&lt;/span&gt; )
                &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;Active&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;Shares&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot; Shares &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Symbol&lt;/span&gt; );
        }

        &lt;span class='wlnet05'&gt;protected&lt;/span&gt; &lt;span class='wlnet05'&gt;override&lt;/span&gt; &lt;span class='wlnet05'&gt;void&lt;/span&gt; &lt;span class='wlnet03'&gt;Execute&lt;/span&gt;()
        {
            &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
            {
                &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
                {
                    &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt; );
                }
                &lt;span class='wlnet05'&gt;else&lt;/span&gt;
                {
                    &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; );
                }
                
                &lt;span class='wlnet01'&gt;// Try this in Raw Profit, with Fixed dollar&lt;/span&gt;
                &lt;span class='wlnet03'&gt;WriteOpenTrades&lt;/span&gt;();
            }
        }
    }
}

&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Size</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Size Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;double Size&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the dollar size of the Position.&amp;nbsp; For equities and mutual funds 
this is the shares multiplied by the entry price.&amp;nbsp; For futures, this is the 
contracts (Shares property) multiplied by the margin of the contract (Bars.Margin).&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;In portfolio simulation mode, all trades are pre-executed using 1 share 
  per Position, and then position sizing is applied after the fact.&amp;nbsp; So the 
  &lt;b&gt;Size&lt;/b&gt; property will always be based on 1 share while the Strategy is executing.&lt;/li&gt;
  &lt;li&gt;The &lt;b&gt;Size&lt;/b&gt; property is always available to Performance Visualizers, which 
  execute after the position sizing has been applied.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>&lt;pre class='wlnetcode'&gt;&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Collections&lt;/span&gt;.&lt;span class='wlnet03'&gt;Generic&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Text&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Drawing&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Indicators&lt;/span&gt;;

&lt;span class='wlnet05'&gt;namespace&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Strategies&lt;/span&gt;
{
    &lt;span class='wlnet05'&gt;public&lt;/span&gt; &lt;span class='wlnet05'&gt;class&lt;/span&gt; &lt;span class='wlnet03'&gt;MyStrategy&lt;/span&gt; : &lt;span class='wlnet03'&gt;WealthScript&lt;/span&gt;
    {
        &lt;span class='wlnet01'&gt;// Write number of shares of open Positions to debug window&lt;/span&gt;
        &lt;span class='wlnet05'&gt;protected&lt;/span&gt; &lt;span class='wlnet05'&gt;void&lt;/span&gt; &lt;span class='wlnet03'&gt;WriteOpenTrades&lt;/span&gt;()
        {
            &lt;span class='wlnet06'&gt;ClearDebug&lt;/span&gt;();
            &lt;span class='wlnet01'&gt;// Cycle through open positions&lt;/span&gt;
            &lt;span class='wlnet05'&gt;foreach&lt;/span&gt;( &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; &lt;span class='wlnet05'&gt;in&lt;/span&gt; &lt;span class='wlnet07'&gt;Positions&lt;/span&gt; )
                &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;Active&lt;/span&gt; )
                    &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Position value in &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Symbol&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot;: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet05'&gt;String&lt;/span&gt;.&lt;span class='wlnet03'&gt;Format&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;{0:c}&amp;quot;&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;Size&lt;/span&gt; ) );
        }

        &lt;span class='wlnet05'&gt;protected&lt;/span&gt; &lt;span class='wlnet05'&gt;override&lt;/span&gt; &lt;span class='wlnet05'&gt;void&lt;/span&gt; &lt;span class='wlnet03'&gt;Execute&lt;/span&gt;()
        {
            &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
            {
                &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
                {
                    &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt; );
                }
                &lt;span class='wlnet05'&gt;else&lt;/span&gt;
                {
                    &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; );
                }
                
                &lt;span class='wlnet01'&gt;// Run this in Raw Profit mode&lt;/span&gt;
                &lt;span class='wlnet03'&gt;WriteOpenTrades&lt;/span&gt;();
            }
        }
    }
}

&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Tag</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Tag Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;object Tag&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;The &lt;b&gt;Tag&lt;/b&gt; property allows you to store any object with a Position.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;10&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt; )
        {
            &lt;span class='wlnet06'&gt;SellAtLimit&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, (&lt;span class='wlnet05'&gt;double&lt;/span&gt;) &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;Tag&lt;/span&gt; );
        } &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( ( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;gt; &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;3&lt;/span&gt;] ) &amp;amp; ( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;3&lt;/span&gt;] &amp;gt; &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;5&lt;/span&gt;] ) )
                &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; ) != &lt;span class='wlnet05'&gt;null&lt;/span&gt; )
                    &lt;span class='wlnet01'&gt;// Store target price in the position's tag property&lt;/span&gt;
                    &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;Tag&lt;/span&gt; = (&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]*&lt;span class='wlnet04'&gt;1.05&lt;/span&gt; );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>TrailingStop</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;TrailingStop Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;double TrailingStop&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Provides access to the most recent trailing stop value for the Position.&amp;nbsp; 
Trailing stop levels come from calling the &lt;b&gt;SellAtTrailingStop&lt;/b&gt; or &lt;b&gt;
CoverAtTrailingStop&lt;/b&gt; WealthScript methods.&amp;nbsp; The trailing stop is 
adjusted upward if the most recently passed value is higher than the current 
stop level.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet06'&gt;PlotStops&lt;/span&gt;();
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;period&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;;
    &lt;span class='wlnet03'&gt;SMA&lt;/span&gt; &lt;span class='wlnet03'&gt;sma&lt;/span&gt; = &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet03'&gt;period&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;sma&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;BurlyWood&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
    
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;3&lt;/span&gt;*&lt;span class='wlnet03'&gt;period&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; = &lt;span class='wlnet07'&gt;LastActivePosition&lt;/span&gt;;
            
            &lt;span class='wlnet01'&gt;// Initiate a trailing stop after a 5% gain&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;MFEAsOfBarPercent&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt; ) &amp;gt; &lt;span class='wlnet04'&gt;5&lt;/span&gt; )
            {
                &lt;span class='wlnet06'&gt;CoverAtTrailingStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;, &lt;span class='wlnet03'&gt;sma&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet10'&gt;&amp;quot;Trailing Stop&amp;quot;&lt;/span&gt; );
            }
            &lt;span class='wlnet05'&gt;else&lt;/span&gt;
                &lt;span class='wlnet06'&gt;CoverAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryPrice&lt;/span&gt; * &lt;span class='wlnet04'&gt;1.10&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;10% Stop Loss&amp;quot;&lt;/span&gt; );
            
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( ( &lt;span class='wlnet03'&gt;bar&lt;/span&gt; == &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt; ) &amp;amp; ( &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;TrailingStop&lt;/span&gt; &amp;gt; &lt;span class='wlnet04'&gt;0&lt;/span&gt; ) )
                &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Current trailing stop value = &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;TrailingStop&lt;/span&gt;.&lt;span class='wlnet06'&gt;ToString&lt;/span&gt;(), &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Indigo&lt;/span&gt; );
            
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet01'&gt;// sample entry rule&lt;/span&gt;
            &lt;span class='wlnet06'&gt;ShortAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;sma&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]*&lt;span class='wlnet04'&gt;0.97&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;3% band around SMA&amp;quot;&lt;/span&gt; );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
    </Entries>
    <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Position Object&lt;/h1&gt;
&lt;p&gt;Represents a single Position (trade) that was created by the Strategy.&amp;nbsp; 
Use the Positions property to access all of the trades that have been created so 
far at any point in time.&lt;/p&gt;
&lt;/html&gt;
</Description>
  </QuickRefCategory>
  <QuickRefCategory>
    <Name>SymbolInfo Object</Name>
    <CategoryType>Object</CategoryType>
    <Entries>
      <QuickRefEntry>
        <Name>Decimals</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Decimals Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;int Decimals&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Specifies the number of decimals that should be used when displaying the 
price values in the Bars object.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Number of decimals&lt;/span&gt;
    &lt;span class='wlnet03'&gt;SymbolInfo&lt;/span&gt; &lt;span class='wlnet03'&gt;si&lt;/span&gt; = &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;SymbolInfo&lt;/span&gt;;
    &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Decimals = &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;si&lt;/span&gt;.&lt;span class='wlnet03'&gt;Decimals&lt;/span&gt;); 
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Margin</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Margin Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;double Margin&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the margin value if the Bars object contains data for a futures 
contract.&amp;nbsp; The margin value is the amount deducted in backtesting for 
buying or shorting a single contract.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Commodity Selection Index by Welles Wilder Jr. (c) 1979&lt;/span&gt;
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;Commission&lt;/span&gt; = &lt;span class='wlnet04'&gt;8&lt;/span&gt;;
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;adxPeriod&lt;/span&gt; = &lt;span class='wlnet04'&gt;14&lt;/span&gt;;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;CSI&lt;/span&gt; = &lt;span class='wlnet05'&gt;new&lt;/span&gt; &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Commodity Selection Index (CSI)&amp;quot;&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;SymbolInfo&lt;/span&gt; &lt;span class='wlnet03'&gt;si&lt;/span&gt; = &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;SymbolInfo&lt;/span&gt;;
    
    &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet03'&gt;si&lt;/span&gt;.&lt;span class='wlnet03'&gt;Margin&lt;/span&gt; &amp;gt; &lt;span class='wlnet04'&gt;0&lt;/span&gt; )
    {
        &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet03'&gt;adxPeriod&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
        {
            &lt;span class='wlnet03'&gt;CSI&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] = &lt;span class='wlnet03'&gt;ADXR&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet03'&gt;adxPeriod&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] * &lt;span class='wlnet03'&gt;ATR&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet03'&gt;adxPeriod&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] * ( ( &lt;span class='wlnet03'&gt;si&lt;/span&gt;.&lt;span class='wlnet03'&gt;PointValue&lt;/span&gt; &lt;span class='wlnet01'&gt;/ Math.Sqrt( si.Margin ) ) * (float) 1 / ( 150 + Commission )  ) * 100;&lt;/span&gt;
        }
    } &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        &lt;span class='wlnet01'&gt;// Will not execute if margin is not specified in Symbol Info Manager&lt;/span&gt;
    &lt;span class='wlnet06'&gt;Abort&lt;/span&gt;();
    
    &lt;span class='wlnet01'&gt;// Plot Commodity Selection Index on chart&lt;/span&gt;
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;CSIPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;75&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;CSIPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;CSI&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;2&lt;/span&gt; );                

}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>PointValue</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;PointValue Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;double PointValue&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the point value if the Bars object contains data for a futures 
contract.&amp;nbsp; The point value represents how much profit is gained when a 
single contract moves up one full point.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;The default point value for stocks is 1, but can be adjusted in the Symbol Info Manager.&lt;/li&gt;
  &lt;li&gt;See the "Futures Mode" topic in the Reference chapter of the User Guide for more information.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// &amp;quot;The Price Movement Index&amp;quot;, as found in the book by Nauzer Balsara, &lt;/span&gt;
    &lt;span class='wlnet01'&gt;// &amp;quot;Money Management Strategies for Futures Traders&amp;quot;&lt;/span&gt;

    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;Sessions&lt;/span&gt; = &lt;span class='wlnet04'&gt;10&lt;/span&gt;; &lt;span class='wlnet01'&gt;// no. of trading sessions to measure dollar value of price move&lt;/span&gt;
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;DollarValueInTick&lt;/span&gt;, &lt;span class='wlnet03'&gt;TicksInPriceMove&lt;/span&gt;, &lt;span class='wlnet03'&gt;DollarValue&lt;/span&gt;, &lt;span class='wlnet03'&gt;PriceMovementIndex&lt;/span&gt;;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;PMI&lt;/span&gt; = &lt;span class='wlnet05'&gt;new&lt;/span&gt; &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Price Movement Index (PMI)&amp;quot;&lt;/span&gt; );

    &lt;span class='wlnet03'&gt;SymbolInfo&lt;/span&gt; &lt;span class='wlnet03'&gt;si&lt;/span&gt; = &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;SymbolInfo&lt;/span&gt;;
    &lt;span class='wlnet03'&gt;DollarValueInTick&lt;/span&gt; = &lt;span class='wlnet03'&gt;si&lt;/span&gt;.&lt;span class='wlnet03'&gt;Tick&lt;/span&gt; * &lt;span class='wlnet03'&gt;si&lt;/span&gt;.&lt;span class='wlnet03'&gt;PointValue&lt;/span&gt;;
    
    &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet03'&gt;si&lt;/span&gt;.&lt;span class='wlnet03'&gt;Margin&lt;/span&gt; &amp;gt; &lt;span class='wlnet04'&gt;0&lt;/span&gt; )
    {
        &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet03'&gt;Sessions&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
        {
            &lt;span class='wlnet03'&gt;TicksInPriceMove&lt;/span&gt; = ( &lt;span class='wlnet03'&gt;Highest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet03'&gt;Sessions&lt;/span&gt; ) - &lt;span class='wlnet03'&gt;Lowest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Low&lt;/span&gt;, &lt;span class='wlnet03'&gt;Sessions&lt;/span&gt; ) ) &lt;span class='wlnet01'&gt;/ si.Tick;&lt;/span&gt;
            &lt;span class='wlnet03'&gt;DollarValue&lt;/span&gt; = &lt;span class='wlnet03'&gt;DollarValueInTick&lt;/span&gt; * &lt;span class='wlnet03'&gt;TicksInPriceMove&lt;/span&gt;;
            &lt;span class='wlnet03'&gt;PMI&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] = &lt;span class='wlnet03'&gt;DollarValue&lt;/span&gt; &lt;span class='wlnet01'&gt;/ si.Margin * 100;&lt;/span&gt;
        }
    } &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        &lt;span class='wlnet01'&gt;// Will not execute if margin was not found in Symbol Info Manager&lt;/span&gt;
        &lt;span class='wlnet06'&gt;Abort&lt;/span&gt;();
    
    &lt;span class='wlnet01'&gt;// Plot Price Movement Index on chart&lt;/span&gt;
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;PMIPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;75&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;PMIPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;PMI&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;2&lt;/span&gt; );                

}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>SecurityType</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;SecurityType Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;SecurityType SecurityType&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the type of data contained in the Bars object.&amp;nbsp; Possible values 
are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Equity&lt;/li&gt;
  &lt;li&gt;Future&lt;/li&gt;
  &lt;li&gt;MutualFund&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet03'&gt;SymbolInfo&lt;/span&gt; &lt;span class='wlnet03'&gt;si&lt;/span&gt; = &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;SymbolInfo&lt;/span&gt;;
    &lt;span class='wlnet01'&gt;// Sense equity/future to switch trading logic &lt;/span&gt;
    &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;si&lt;/span&gt;.&lt;span class='wlnet03'&gt;SecurityType&lt;/span&gt; == &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;SecurityType&lt;/span&gt;.&lt;span class='wlnet03'&gt;Future&lt;/span&gt; )
    {
        &lt;span class='wlnet01'&gt;// Commodities trading logic&lt;/span&gt;
    }
    &lt;span class='wlnet05'&gt;else&lt;/span&gt;
    {
        &lt;span class='wlnet01'&gt;// Stocks trading logic&lt;/span&gt;
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>Tick</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Tick Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;double Tick&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the tick value if the Bars object contains data for a futures contract.&amp;nbsp; The tick value represents the granularity of the futures contract.&amp;nbsp; Wealth-Lab will adjust limit and stop order prices so that they conform to the tick level of the contract.&amp;nbsp; For example, if the contract 
tick value is 0.25, a BuyAtLimit or ShortAtStop order generated at 12.34 will be rounded to 12.25.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;The default tick value for stocks is 0.01, but can be adjusted in the Symbol Info Manager.&lt;/li&gt;
  &lt;li&gt;See the "Futures Mode" topic in the Reference chapter of the User Guide for more information.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;stop&lt;/span&gt;;

    &lt;span class='wlnet01'&gt;// Calculate stop value using the Symbol Info Manager data (must be entered)&lt;/span&gt;
    &lt;span class='wlnet05'&gt;switch&lt;/span&gt; (&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;SymbolInfo&lt;/span&gt;.&lt;span class='wlnet03'&gt;Symbol&lt;/span&gt;) 
    {
        &lt;span class='wlnet05'&gt;case&lt;/span&gt; &lt;span class='wlnet10'&gt;&amp;quot;CL_RAD&amp;quot;&lt;/span&gt;:
            &lt;span class='wlnet03'&gt;stop&lt;/span&gt; = &lt;span class='wlnet04'&gt;1000&lt;/span&gt; * &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;SymbolInfo&lt;/span&gt;.&lt;span class='wlnet03'&gt;Tick&lt;/span&gt;;
            &lt;span class='wlnet05'&gt;break&lt;/span&gt;;
        &lt;span class='wlnet05'&gt;case&lt;/span&gt; &lt;span class='wlnet10'&gt;&amp;quot;NG_RAD&amp;quot;&lt;/span&gt;:
            &lt;span class='wlnet03'&gt;stop&lt;/span&gt; = &lt;span class='wlnet04'&gt;500&lt;/span&gt; * &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;SymbolInfo&lt;/span&gt;.&lt;span class='wlnet03'&gt;Tick&lt;/span&gt;;
            &lt;span class='wlnet05'&gt;break&lt;/span&gt;;
        &lt;span class='wlnet05'&gt;default&lt;/span&gt;:
            &lt;span class='wlnet03'&gt;stop&lt;/span&gt; = &lt;span class='wlnet04'&gt;700&lt;/span&gt; * &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;SymbolInfo&lt;/span&gt;.&lt;span class='wlnet03'&gt;Tick&lt;/span&gt;;
            &lt;span class='wlnet05'&gt;break&lt;/span&gt;;
    }
    
    &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Stop value is &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;stop&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot; ticks&amp;quot;&lt;/span&gt; );
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
    </Entries>
    <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;SymbolInfo Object&lt;/h1&gt;
&lt;p&gt;The SymbolInfo object represents a number of symbol's properties: Decimals, Margin, Point Value, Security Type and Tick.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;The SymbolInfo object's properties should not be altered dynamically in a script, and if altered, the final value assigned to a property will change the Property value stored in the SymbolInfo Manager.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
  </QuickRefCategory>
  <QuickRefCategory>
    <Name>System</Name>
    <CategoryType>Functional</CategoryType>
    <Entries>
      <QuickRefEntry>
        <Name>Abort</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Abort&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void Abort();&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Causes the Strategy to immediately cease execution.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; &amp;lt; &lt;span class='wlnet04'&gt;1000&lt;/span&gt; )
    {
        &lt;span class='wlnet06'&gt;Abort&lt;/span&gt;();
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>ClearDebug</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;WealthScript&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;/body&gt;
&lt;/html&gt;
&lt;h1&gt;ClearDebug&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void ClearDebug();&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Clears all Debug Window messages.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Messages accumulate in the Debug Window during Strategy execution and Multi-Symbol Backtest until they are cleared by calling ClearDebug or by clicking the Clear button in the Debug Window's toolbar.&lt;/li&gt;
  &lt;li&gt;When actively debugging a script, call ClearDebug at the beginning to refresh the Debug Window for new messages.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;i&lt;/span&gt; = &lt;span class='wlnet04'&gt;0&lt;/span&gt;; &lt;span class='wlnet03'&gt;i&lt;/span&gt; &amp;lt; &lt;span class='wlnet04'&gt;1&lt;/span&gt;; &lt;span class='wlnet03'&gt;i&lt;/span&gt;++)
    {
        &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Test string&amp;quot;&lt;/span&gt; );
    }
    &lt;span class='wlnet06'&gt;ClearDebug&lt;/span&gt;();
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>ClearGlobals</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;ClearGloblals&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void ClearGlobals();&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Completely clears any objects that were stored in the Global Object Pool 
(GOP) via calls to SetGloblal.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;See GetGlobal and SetGlobal for more information on the Global Object 
  Pool.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Run example for SetGlobal first&lt;/span&gt;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;average&lt;/span&gt; = (&lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt;) &lt;span class='wlnet06'&gt;GetGlobal&lt;/span&gt;(&lt;span class='wlnet10'&gt;&amp;quot;average&amp;quot;&lt;/span&gt;);
    &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet03'&gt;average&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; &amp;gt; &lt;span class='wlnet04'&gt;0&lt;/span&gt; )
        &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet06'&gt;GetGlobal&lt;/span&gt;(&lt;span class='wlnet10'&gt;&amp;quot;average&amp;quot;&lt;/span&gt;).&lt;span class='wlnet06'&gt;ToString&lt;/span&gt;() + &lt;span class='wlnet10'&gt;&amp;quot; found in GOP; BarCount = &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;average&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;.&lt;span class='wlnet06'&gt;ToString&lt;/span&gt;() );
    &lt;span class='wlnet06'&gt;ClearGlobals&lt;/span&gt;();
    &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;GetGlobal&lt;/span&gt;(&lt;span class='wlnet10'&gt;&amp;quot;average&amp;quot;&lt;/span&gt;).&lt;span class='wlnet06'&gt;ToString&lt;/span&gt;() == &lt;span class='wlnet10'&gt;&amp;quot;&amp;quot;&lt;/span&gt; )
        &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt; ( &lt;span class='wlnet10'&gt;&amp;quot;GOP was cleared&amp;quot;&lt;/span&gt; ); &lt;span class='wlnet01'&gt;// null&lt;/span&gt;
}
    &lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;
</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>CreateParameter</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;CreateParameter Method&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;StrategyParameter CreateParameter(string name, double value, double start, double stop, double step);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Used in a Strategy class constructor to create a &lt;b&gt;StrategyParameter&lt;/b&gt; type. The specified &lt;b&gt;name&lt;/b&gt; appears next to the slider in the Data Panel to identify the parameter, &lt;b&gt;value&lt;/b&gt; is the initial default value for the Strategy Parameter, and &lt;b&gt;step&lt;/b&gt; controls the increments between the &lt;b&gt;start&lt;/b&gt; and &lt;b&gt;stop&lt;/b&gt; minimum and maximum bounds of the parameter. &lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Strategy Parameters are optional.&lt;/li&gt;
  &lt;li&gt;Details about incorporating Strategy Parameters can be found in the WealthScript Language Guide.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;/*     See pre-built Strategies such as the &amp;quot;Glitch Index&amp;quot; &lt;/span&gt;
        &lt;span class='wlnet03'&gt;and&lt;/span&gt; &lt;span class='wlnet10'&gt;&amp;quot;Moving Average Crossover&amp;quot;&lt;/span&gt;, &lt;span class='wlnet03'&gt;or&lt;/span&gt; &lt;span class='wlnet03'&gt;the&lt;/span&gt; &lt;span class='wlnet06'&gt;ShortAtClose&lt;/span&gt; &lt;span class='wlnet03'&gt;example&lt;/span&gt; 
        &lt;span class='wlnet05'&gt;in&lt;/span&gt; &lt;span class='wlnet03'&gt;the&lt;/span&gt; &lt;span class='wlnet03'&gt;QuickRef&lt;/span&gt;.*&lt;span class='wlnet01'&gt;/&lt;/span&gt;
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>FlushDebug</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;FlushDebug&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void FlushDebug(string message);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Forces any debug messages that have been generated during the Strategy 
execution (by calling &lt;b&gt;PrintDebug&lt;/b&gt;) to be displayed in the Debug Window 
immediately.&amp;nbsp; Normally, all debug messages are displayed after the Strategy 
completes its execution.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Now You See Him&amp;quot;&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;FlushDebug&lt;/span&gt;( );
    &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Windows&lt;/span&gt;.&lt;span class='wlnet03'&gt;Forms&lt;/span&gt;.&lt;span class='wlnet03'&gt;MessageBox&lt;/span&gt;.&lt;span class='wlnet03'&gt;Show&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Try commenting FlushDebug&amp;quot;&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Message from WL5&amp;quot;&lt;/span&gt;);
    &lt;span class='wlnet01'&gt;// The debug string will not be seen until the messagebox is closed&lt;/span&gt;
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>GetChartBitmap</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;GetChartBitmap&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;Bitmap GetChartBitmap(int width, int height);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Renders an image of the chart, including plotted indicators and manually 
drawn objects, as a Bitmap of the specified &lt;b&gt;width&lt;/b&gt; and &lt;b&gt;height&lt;/b&gt;.&amp;nbsp; 
Use Bitmap.Save method to save the image to a file of a particular image type.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Captures screen image in a PNG file under the WL installation directory&lt;/span&gt;
    &lt;span class='wlnet03'&gt;Bitmap&lt;/span&gt; &lt;span class='wlnet03'&gt;bm&lt;/span&gt; = &lt;span class='wlnet06'&gt;GetChartBitmap&lt;/span&gt;( &lt;span class='wlnet04'&gt;500&lt;/span&gt;, &lt;span class='wlnet04'&gt;300&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;bm&lt;/span&gt;.&lt;span class='wlnet03'&gt;Save&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Symbol&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot;.png&amp;quot;&lt;/span&gt;, &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Drawing&lt;/span&gt;.&lt;span class='wlnet03'&gt;Imaging&lt;/span&gt;.&lt;span class='wlnet03'&gt;ImageFormat&lt;/span&gt;.&lt;span class='wlnet03'&gt;Png&lt;/span&gt; );
    &lt;span class='wlnet01'&gt;//For System.Drawing.Bitmap details, refer to MSDN:&lt;/span&gt;
    &lt;span class='wlnet01'&gt;//http://msdn2.microsoft.com/en-us/library/system.drawing.bitmap_members.aspx&lt;/span&gt;
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>GetGlobal</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;GetGlobal&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;object GetGlobal(string key);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;The Global Object Pool (GOP) is a global storage area that Strategies can 
place objects into (SetGlobal) and at some point in the future read objects from 
(GetGlobal).&amp;nbsp; Objects remain in the GOP throughout the lifetime of the 
Wealth-Lab application, and can be shared among Strategies that operate in any 
context (Strategy Window, Strategy Explorer, etc.)&lt;/p&gt;
&lt;p&gt;Each object in the GOP has a unique string &lt;b&gt;key&lt;/b&gt; associated with it.&amp;nbsp; 
GetGlobal returns the object in the GOP with the specified &lt;b&gt;key&lt;/b&gt;.&amp;nbsp; If 
the object was not found, the method returns null.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;You will need to cast the resulting object to the type you are expecting 
  before being able to work with it.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// You should run the SetGlobal example before executing this&lt;/span&gt;
    &lt;span class='wlnet01'&gt;// Getting entire series from the global storage is also convenient&lt;/span&gt;
    &lt;span class='wlnet01'&gt;// But first we cast the object into DataSeries&lt;/span&gt;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;average&lt;/span&gt; = (&lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt;) &lt;span class='wlnet06'&gt;GetGlobal&lt;/span&gt;(&lt;span class='wlnet10'&gt;&amp;quot;average&amp;quot;&lt;/span&gt;);
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;averagePane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;75&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;false&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;averagePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;average&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Black&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>GetTradingLoopStartBar</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;GetTradingLoopStartBar Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;int GetTradingLoopStartBar( int startBar )&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the larger of two parameters:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;the passed startBar value, or&lt;/li&gt;
  &lt;li&gt;the largest value of the StrategyParameters that have "period" in their Name property.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Especially when optimizing Strategies that use indicators with multiple periods, employ GetTradingLoopStartBar as the initial bar index for the trading loop to prevent runtime errors in the script or creating trades before all indicators are valid.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>&lt;pre class='wlnetcode'&gt;&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Collections&lt;/span&gt;.&lt;span class='wlnet03'&gt;Generic&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Text&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Drawing&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Indicators&lt;/span&gt;;

&lt;span class='wlnet05'&gt;namespace&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Strategies&lt;/span&gt;
{
    &lt;span class='wlnet05'&gt;public&lt;/span&gt; &lt;span class='wlnet05'&gt;class&lt;/span&gt; &lt;span class='wlnet03'&gt;ChannelBreakoutExample&lt;/span&gt; : &lt;span class='wlnet03'&gt;WealthScript&lt;/span&gt;
    {
        &lt;span class='wlnet05'&gt;private&lt;/span&gt; &lt;span class='wlnet03'&gt;StrategyParameter&lt;/span&gt; &lt;span class='wlnet03'&gt;p1&lt;/span&gt;;
        &lt;span class='wlnet05'&gt;private&lt;/span&gt; &lt;span class='wlnet03'&gt;StrategyParameter&lt;/span&gt; &lt;span class='wlnet03'&gt;p2&lt;/span&gt;;

        &lt;span class='wlnet05'&gt;public&lt;/span&gt; &lt;span class='wlnet03'&gt;ChannelBreakoutExample&lt;/span&gt;()
        {
            &lt;span class='wlnet03'&gt;p1&lt;/span&gt; = &lt;span class='wlnet03'&gt;CreateParameter&lt;/span&gt;(&lt;span class='wlnet10'&gt;&amp;quot;Period High&amp;quot;&lt;/span&gt;,&lt;span class='wlnet04'&gt;20&lt;/span&gt;,&lt;span class='wlnet04'&gt;2&lt;/span&gt;,&lt;span class='wlnet04'&gt;200&lt;/span&gt;,&lt;span class='wlnet04'&gt;20&lt;/span&gt;);
            &lt;span class='wlnet03'&gt;p2&lt;/span&gt; = &lt;span class='wlnet03'&gt;CreateParameter&lt;/span&gt;(&lt;span class='wlnet10'&gt;&amp;quot;Period Low&amp;quot;&lt;/span&gt;,&lt;span class='wlnet04'&gt;40&lt;/span&gt;,&lt;span class='wlnet04'&gt;2&lt;/span&gt;,&lt;span class='wlnet04'&gt;200&lt;/span&gt;,&lt;span class='wlnet04'&gt;20&lt;/span&gt;);
        }

        &lt;span class='wlnet05'&gt;protected&lt;/span&gt; &lt;span class='wlnet05'&gt;override&lt;/span&gt; &lt;span class='wlnet05'&gt;void&lt;/span&gt; &lt;span class='wlnet03'&gt;Execute&lt;/span&gt;()
        {
            &lt;span class='wlnet03'&gt;Highest&lt;/span&gt; &lt;span class='wlnet03'&gt;h&lt;/span&gt; = &lt;span class='wlnet03'&gt;Highest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;(&lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet03'&gt;p1&lt;/span&gt;.&lt;span class='wlnet03'&gt;ValueInt&lt;/span&gt;);
            &lt;span class='wlnet03'&gt;Lowest&lt;/span&gt; &lt;span class='wlnet03'&gt;l&lt;/span&gt; = &lt;span class='wlnet03'&gt;Lowest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;(&lt;span class='wlnet07'&gt;Low&lt;/span&gt;, &lt;span class='wlnet03'&gt;p2&lt;/span&gt;.&lt;span class='wlnet03'&gt;ValueInt&lt;/span&gt;);
            
            &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;(&lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;h&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt;, &lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt;);
            &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;(&lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;l&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Green&lt;/span&gt;, &lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt;);             

            &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet06'&gt;GetTradingLoopStartBar&lt;/span&gt;(&lt;span class='wlnet04'&gt;1&lt;/span&gt;); &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
            {
                &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
                {
                    &lt;span class='wlnet06'&gt;SellAtStop&lt;/span&gt;(&lt;span class='wlnet03'&gt;bar&lt;/span&gt; + &lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet03'&gt;Lowest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;(&lt;span class='wlnet07'&gt;Low&lt;/span&gt;, &lt;span class='wlnet03'&gt;p2&lt;/span&gt;.&lt;span class='wlnet03'&gt;ValueInt&lt;/span&gt;)[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]);
                }
                &lt;span class='wlnet05'&gt;else&lt;/span&gt;
                {
                    &lt;span class='wlnet06'&gt;BuyAtStop&lt;/span&gt;(&lt;span class='wlnet03'&gt;bar&lt;/span&gt; + &lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;Highest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;(&lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet03'&gt;p1&lt;/span&gt;.&lt;span class='wlnet03'&gt;ValueInt&lt;/span&gt;)[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]);
                }
            }
        }
    }
} &lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>IsStreaming</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;IsStreaming Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;bool IsStreaming&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns a bool value indicating whether the Strategy is executing on a 
streaming data source or a static data source.&amp;nbsp; Wealth-Lab executes 
Strategies on streaming data sources each time a new bar of data is completely 
formed for the current chart time scale.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// For example, use IsStreaming to disable IsLastBarOfDay logic&lt;/span&gt;

    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;bool&lt;/span&gt; &lt;span class='wlnet03'&gt;LastBar&lt;/span&gt; = &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;IsLastBarOfDay&lt;/span&gt;(&lt;span class='wlnet03'&gt;bar&lt;/span&gt;);
        
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;LastBar&lt;/span&gt; &amp;amp; !&lt;span class='wlnet07'&gt;IsStreaming&lt;/span&gt; )
            {
                &lt;span class='wlnet06'&gt;SellAtClose&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;EOD&amp;quot;&lt;/span&gt; );
            }
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet01'&gt;// plain vanilla entry rule&lt;/span&gt;
            &lt;span class='wlnet06'&gt;BuyAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;Highest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>PrintDebug</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;PrintDebug&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void PrintDebug(string message);&lt;/font&gt;&lt;br&gt;
&lt;font color="#0000FF"&gt;void PrintDebug(object message);&lt;/font&gt;&lt;br&gt;
&lt;font color="#0000FF"&gt;void PrintDebug(Object[] messages);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Prints the string specified by &lt;b&gt;message&lt;/b&gt; to the application Debug 
Window, and displays the Debug Window if it is currently not visible.&amp;nbsp; For 
performance reasons, Wealth-Lab caches all of the printed debug strings 
internally and finally displays them in the Debug Window after the Strategy 
finishes executing.&amp;nbsp; To force the debug messages to appear during a 
Strategy execution, call &lt;b&gt;FlushDebug&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;60&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet01'&gt;// Print the bars where there were SMA crossovers&lt;/span&gt;
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;CrossOver&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; ), &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;60&lt;/span&gt; ) ) )
        {
            &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt; );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>PrintStatusBar</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;PrintStatusBar&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void PrintStatusBar(string message);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Displays the string specified in &lt;b&gt;message&lt;/b&gt; to the main status bar.&amp;nbsp;
&lt;font color="#FF0000"&gt;Caution&lt;/font&gt;: printing too many times to the status bar, 
for example printing during each bar of data in the Strategy main loop, can 
result in a significant slow down of your Strategy execution speed.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
&lt;span class='wlnet01'&gt;//Execution progress in status bar&lt;/span&gt;

    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
        &lt;span class='wlnet06'&gt;PrintStatusBar&lt;/span&gt;(&lt;span class='wlnet10'&gt;&amp;quot;Processing &amp;quot;&lt;/span&gt; + ( &lt;span class='wlnet03'&gt;bar&lt;/span&gt; * &lt;span class='wlnet04'&gt;100&lt;/span&gt; &lt;span class='wlnet01'&gt;/ Bars.Count ) + &amp;quot;% complete&amp;quot;);&lt;/span&gt;
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>RemoveGlobal</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;RemoveGlobal&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void RemoveGlobal(string key);&lt;br&gt;
void RemoveGlobal(object value);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Removes an object from the Global Object Pool (GOP) by either &lt;b&gt;key&lt;/b&gt; or
&lt;b&gt;value&lt;/b&gt;.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;See GetGlobal and SetGlobal for a description of the Global Object Pool.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Run example for SetGlobal first&lt;/span&gt;
    &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt; ( &lt;span class='wlnet06'&gt;GetGlobal&lt;/span&gt;(&lt;span class='wlnet10'&gt;&amp;quot;average&amp;quot;&lt;/span&gt;).&lt;span class='wlnet06'&gt;ToString&lt;/span&gt;() );
    &lt;span class='wlnet06'&gt;RemoveGlobal&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;average&amp;quot;&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt; ( &lt;span class='wlnet06'&gt;GetGlobal&lt;/span&gt;(&lt;span class='wlnet10'&gt;&amp;quot;average&amp;quot;&lt;/span&gt;).&lt;span class='wlnet06'&gt;ToString&lt;/span&gt;() ); &lt;span class='wlnet01'&gt;// null&lt;/span&gt;
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>SetGlobal</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;SetGlobal&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void SetGlobal(string key, object value);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;The Global Object Pool (GOP) is a global storage area that Strategies can 
place objects into (SetGlobal) and at some point in the future read object from 
(GetGlobal).&amp;nbsp; Objects remain in the GOP throughout the lifetime of the 
Wealth-Lab application, and can be shared among Strategies that operate in any 
context (Strategy Window, Strategy Explorer, etc.)&lt;/p&gt;
&lt;p&gt;Each object in the GOP has a unique string &lt;b&gt;key&lt;/b&gt; associated with it.&amp;nbsp; 
SetGlobal places an object (&lt;b&gt;value&lt;/b&gt;) into the GOP, using the specified &lt;b&gt;
key&lt;/b&gt;.&amp;nbsp; This will overwrite any existing object that was placed using the 
same &lt;b&gt;key&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>&lt;pre class='wlnetcode'&gt;&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Collections&lt;/span&gt;.&lt;span class='wlnet03'&gt;Generic&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Text&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Drawing&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;;

&lt;span class='wlnet05'&gt;namespace&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Strategies&lt;/span&gt;
{
    &lt;span class='wlnet05'&gt;public&lt;/span&gt; &lt;span class='wlnet05'&gt;class&lt;/span&gt; &lt;span class='wlnet03'&gt;MyStrategy&lt;/span&gt; : &lt;span class='wlnet03'&gt;WealthScript&lt;/span&gt;
    {
        &lt;span class='wlnet01'&gt;// Put series in the global storage&lt;/span&gt;
        &lt;span class='wlnet05'&gt;void&lt;/span&gt; &lt;span class='wlnet03'&gt;SetGlobalSeries&lt;/span&gt;( &lt;span class='wlnet05'&gt;string&lt;/span&gt; &lt;span class='wlnet03'&gt;sName&lt;/span&gt;, &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;series&lt;/span&gt; )
        {
            &lt;span class='wlnet06'&gt;SetGlobal&lt;/span&gt;( &lt;span class='wlnet03'&gt;sName&lt;/span&gt;, &lt;span class='wlnet03'&gt;series&lt;/span&gt; );
        }

        &lt;span class='wlnet05'&gt;protected&lt;/span&gt; &lt;span class='wlnet05'&gt;override&lt;/span&gt; &lt;span class='wlnet05'&gt;void&lt;/span&gt; &lt;span class='wlnet03'&gt;Execute&lt;/span&gt;()
        {
            &lt;span class='wlnet03'&gt;SetGlobalSeries&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;average&amp;quot;&lt;/span&gt;, ((&lt;span class='wlnet07'&gt;High&lt;/span&gt; + &lt;span class='wlnet07'&gt;Low&lt;/span&gt;)&lt;span class='wlnet01'&gt;/2) );&lt;/span&gt;
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>StrategyName</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;StrategyName Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;string StrategyName&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Returns the name of the Strategy that is currently being executed.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>&lt;pre class='wlnetcode'&gt;&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;IO&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Collections&lt;/span&gt;.&lt;span class='wlnet03'&gt;Generic&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Text&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Drawing&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Indicators&lt;/span&gt;;

&lt;span class='wlnet05'&gt;namespace&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Strategies&lt;/span&gt;
{
    &lt;span class='wlnet05'&gt;public&lt;/span&gt; &lt;span class='wlnet05'&gt;class&lt;/span&gt; &lt;span class='wlnet03'&gt;AlertsToFile&lt;/span&gt; : &lt;span class='wlnet03'&gt;WealthScript&lt;/span&gt;
    {
        &lt;span class='wlnet01'&gt;// Collects generated alerts and writes them into file&lt;/span&gt;
        &lt;span class='wlnet05'&gt;void&lt;/span&gt; &lt;span class='wlnet03'&gt;WriteAlerts&lt;/span&gt;()
        {
            &lt;span class='wlnet03'&gt;StreamWriter&lt;/span&gt; &lt;span class='wlnet03'&gt;alertFile&lt;/span&gt;;
            &lt;span class='wlnet05'&gt;string&lt;/span&gt; &lt;span class='wlnet03'&gt;str&lt;/span&gt;;
            
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; &amp;gt; &lt;span class='wlnet04'&gt;0&lt;/span&gt; )
            {
                &lt;span class='wlnet01'&gt;// Open output file&lt;/span&gt;
                &lt;span class='wlnet03'&gt;alertFile&lt;/span&gt; = &lt;span class='wlnet05'&gt;new&lt;/span&gt; &lt;span class='wlnet03'&gt;StreamWriter&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Alerts.txt&amp;quot;&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
                &lt;span class='wlnet01'&gt;// Strategy Name&lt;/span&gt;
                &lt;span class='wlnet03'&gt;alertFile&lt;/span&gt;.&lt;span class='wlnet03'&gt;Write&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Alert for strategy name: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet07'&gt;StrategyName&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot;\r\n&amp;quot;&lt;/span&gt; );

                &lt;span class='wlnet05'&gt;for&lt;/span&gt;( &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;i&lt;/span&gt; = &lt;span class='wlnet04'&gt;0&lt;/span&gt;; &lt;span class='wlnet03'&gt;i&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;i&lt;/span&gt;++ )
                {
                    &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Alert&lt;/span&gt; &lt;span class='wlnet03'&gt;a&lt;/span&gt; = &lt;span class='wlnet07'&gt;Alerts&lt;/span&gt;[&lt;span class='wlnet03'&gt;i&lt;/span&gt;];
                    
                    &lt;span class='wlnet03'&gt;str&lt;/span&gt; = ( &lt;span class='wlnet10'&gt;&amp;quot;AlertDate: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;AlertDate&lt;/span&gt; ) + &lt;span class='wlnet10'&gt;&amp;quot;\r\n&amp;quot;&lt;/span&gt; +
                        ( &lt;span class='wlnet10'&gt;&amp;quot;AlertType: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;AlertType&lt;/span&gt; ) + &lt;span class='wlnet10'&gt;&amp;quot;\r\n&amp;quot;&lt;/span&gt; +
                        ( &lt;span class='wlnet10'&gt;&amp;quot;OrderType: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;OrderType&lt;/span&gt; ) + &lt;span class='wlnet10'&gt;&amp;quot;\r\n&amp;quot;&lt;/span&gt; +
                        ( &lt;span class='wlnet10'&gt;&amp;quot;PositionType: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;PositionType&lt;/span&gt; ) + &lt;span class='wlnet10'&gt;&amp;quot;\r\n&amp;quot;&lt;/span&gt; +
                        ( &lt;span class='wlnet10'&gt;&amp;quot;Price: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;Price&lt;/span&gt; ) + &lt;span class='wlnet10'&gt;&amp;quot;\r\n&amp;quot;&lt;/span&gt; +
                        ( &lt;span class='wlnet10'&gt;&amp;quot;Symbol: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;Symbol&lt;/span&gt; ) + &lt;span class='wlnet10'&gt;&amp;quot;\r\n&amp;quot;&lt;/span&gt; +
                        ( &lt;span class='wlnet10'&gt;&amp;quot;Shares: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;Shares&lt;/span&gt; ) + &lt;span class='wlnet10'&gt;&amp;quot;\r\n&amp;quot;&lt;/span&gt; +
                        ( &lt;span class='wlnet10'&gt;&amp;quot;SignalName: &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;a&lt;/span&gt;.&lt;span class='wlnet03'&gt;SignalName&lt;/span&gt; ) + &lt;span class='wlnet10'&gt;&amp;quot;\r\n&amp;quot;&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot;\r\n&amp;quot;&lt;/span&gt;;

                    &lt;span class='wlnet01'&gt;// Creates the file containing alerts under WLP installation folder&lt;/span&gt;
                    &lt;span class='wlnet03'&gt;alertFile&lt;/span&gt;.&lt;span class='wlnet03'&gt;Write&lt;/span&gt;( &lt;span class='wlnet03'&gt;str&lt;/span&gt; );
                }
                &lt;span class='wlnet03'&gt;alertFile&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;();
            }                    
        }
        
        &lt;span class='wlnet05'&gt;protected&lt;/span&gt; &lt;span class='wlnet05'&gt;override&lt;/span&gt; &lt;span class='wlnet05'&gt;void&lt;/span&gt; &lt;span class='wlnet03'&gt;Execute&lt;/span&gt;()
        {
            &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;40&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
            {
                &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
                    &lt;span class='wlnet06'&gt;SellAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet03'&gt;Lowest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Low&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet10'&gt;&amp;quot;Exit&amp;quot;&lt;/span&gt; );
                &lt;span class='wlnet05'&gt;else&lt;/span&gt;
                    &lt;span class='wlnet06'&gt;BuyAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;Highest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet04'&gt;40&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet10'&gt;&amp;quot;Entry&amp;quot;&lt;/span&gt; );
            }
            
            &lt;span class='wlnet03'&gt;WriteAlerts&lt;/span&gt;();
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
    </Entries>
    <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;System&lt;/h1&gt;
&lt;p&gt;The System category contains various miscellaneous methods that apply to the 
overall Wealth-Lab system.&lt;/p&gt;



&lt;/html&gt;</Description>
  </QuickRefCategory>
  <QuickRefCategory>
    <Name>Technical Indicators</Name>
    <CategoryType>Functional</CategoryType>
    <Entries />
    <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Technical Indicators&lt;/h1&gt;
&lt;p&gt;The Technical Indicators category contains information on all of the 
indicators that are available in the WealthLab.Indicators standard indicators 
library.&amp;nbsp; Indicators are all DataSeries objects, and are created in scripts 
by using the Series method, as shown below:&lt;/p&gt;
&lt;p&gt;DataSeries sma20 = SMA.Series(Close, 20);&lt;/p&gt;
&lt;p&gt;Additionally, some indicators support a Value method that you can use to 
calculate and return the value of an indicator on a specific bar.&amp;nbsp; Value 
methods always recalculate their value each time they are called.&lt;/p&gt;
&lt;p&gt;double smaValue = SMA.Value(bar, Close, 20);&lt;/p&gt;



&lt;/html&gt;</Description>
  </QuickRefCategory>
  <QuickRefCategory>
    <Name>Time Frames</Name>
    <CategoryType>Functional</CategoryType>
    <Entries>
      <QuickRefEntry>
        <Name>AddCalendarDays</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;AddCalendarDays&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;int AddCalendarDays(bool interpolate)&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Adds all missing calendar days to the chart data, including weekends, holidays, and any other non-trading day.  Newly added bars are considered "synthetic", and these bar numbers return true when 
&lt;b&gt;Bars.InSynthetic&lt;/b&gt; is called.  AddCalendarDays returns the number of new bars that were added.&lt;/p&gt;
&lt;p&gt;The value of the inserted bars depends on the &lt;b&gt;interpolate&lt;/b&gt; parameter.  If 
&lt;b&gt;interpolate&lt;/b&gt; is false, the new bars assume the OHLC values of the next actual bar.  If 
&lt;b&gt;interpolate&lt;/b&gt; is true, the OHLC values of the new bars are calculated using linear interpolation between the previous bar and the next actual bar.  Note that interpolating values will result in the bars being created based on future information (next bar's value) so be careful if using these bars in trading system development.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;AddCalendarDays is available in Daily scale only.&lt;/li&gt;
  &lt;li&gt;AddCalendarDays is not compatible with streaming Strategies.&lt;/li&gt;
  &lt;li&gt;Be careful to avoid peeking as AddCalendarDays uses future data.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    
    &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Scale&lt;/span&gt; == &lt;span class='wlnet04'&gt;0&lt;/span&gt; )
    {
        &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot; bars before&amp;quot;&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Black&lt;/span&gt; );
        &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;added&lt;/span&gt; = &lt;span class='wlnet06'&gt;AddCalendarDays&lt;/span&gt;( &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
        &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot; bars after&amp;quot;&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Black&lt;/span&gt; );
        &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Added &amp;quot;&lt;/span&gt; + &lt;span class='wlnet03'&gt;added&lt;/span&gt; + &lt;span class='wlnet10'&gt;&amp;quot; bars&amp;quot;&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt; );
    } &lt;span class='wlnet05'&gt;else&lt;/span&gt;
    &lt;span class='wlnet06'&gt;DrawLabel&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Daily data required...&amp;quot;&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;LightCoral&lt;/span&gt; );
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>RestoreScale</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;RestoreScale&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void RestoreScale();&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Restores the data scale that the Strategy is currently operating on back to 
the original scale that it was invoked on.&amp;nbsp; The internal data scale can be 
changed by calling the various SetScale methods.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;RestoreScale restores the data scale, but preserves the current context 
  symbol (which may have been changed via SetContext).&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
&lt;span class='wlnet01'&gt;// Chart SMA from 30 minute compressed data on a lower scale&lt;/span&gt;
    &lt;span class='wlnet06'&gt;SetScaleCompressed&lt;/span&gt;( &lt;span class='wlnet04'&gt;30&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;SMA10_60&lt;/span&gt; = &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;10&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;RestoreScale&lt;/span&gt;();
    &lt;span class='wlnet03'&gt;SMA10_60&lt;/span&gt; = &lt;span class='wlnet06'&gt;Synchronize&lt;/span&gt;( &lt;span class='wlnet03'&gt;SMA10_60&lt;/span&gt; );
    
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;SMA10_60&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>SetScaleCompressed</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;SetScaleCompressed&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000ff"&gt;void SetScaleCompressed(int barInterval);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Changes the base time scale of the Strategy to a more highly compressed 
intraday scale.&amp;nbsp; The context Bars is replaced with a new Bars object that is 
compressed to the specified &lt;b&gt;barInterval&lt;/b&gt;.&amp;nbsp; For example, if the source 
data is a 5 minute chart, you can compress the data to 10, 15, or 30 minute 
scale (any multiple of 5).&amp;nbsp; Any indicators, and external symbols produced will 
also be in the compressed scale.&amp;nbsp; If you need to plot any of the compressed 
DataSeries or Bars, you must first expand them to the original intraday scale 
using the Synchronize method.&amp;nbsp; Call RestoreScale to revert the Strategy back to the original intraday time scale.&lt;/p&gt;
&lt;p&gt;&lt;font color=blue&gt;&lt;b&gt;Important!&lt;/b&gt;&lt;/font&gt;&lt;br&gt;&lt;br&gt;
You must call RestoreScale() to return to the original time scale particularly for plotting and executing trading signals.  In general, only remain in a compressed scale to create indicators and immediately revert to the base scale by calling RestoreScale().&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;b&gt;SetScaleCompressed&lt;/b&gt; only works on charts using intraday scaled data.&lt;/li&gt;
  &lt;li&gt;You can compress data in Minute, Second, or Tick scales.&amp;nbsp; The 
  resulting compressed data retains the corresponding source base scale.&amp;nbsp; 
  It is currently not possible through WealthScript methods to compress second 
  or tick based data to minute, for example, but this is possible by directly 
  using the &lt;b&gt;BarScaleConvertor&lt;/b&gt; utility class.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;SetScaleCompressed&lt;/b&gt; operates only on the standard OHLC/V DataSeries of the Bars object and does not apply to manually created and/or Named DataSeries.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// The chart will depict 20-minute SMA and RSI &lt;/span&gt;
    &lt;span class='wlnet01'&gt;// on compressed and original scales&lt;/span&gt;

    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;SMA20&lt;/span&gt; = &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;SetScaleCompressed&lt;/span&gt;( &lt;span class='wlnet04'&gt;15&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;SMA20_15&lt;/span&gt; = &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;RestoreScale&lt;/span&gt;();
    &lt;span class='wlnet03'&gt;SMA20_15&lt;/span&gt; = &lt;span class='wlnet06'&gt;Synchronize&lt;/span&gt;( &lt;span class='wlnet03'&gt;SMA20_15&lt;/span&gt; );
    
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;SMA20&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;SMA20_15&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );

    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;RSIPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;50&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;SetScaleCompressed&lt;/span&gt;( &lt;span class='wlnet04'&gt;15&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;RSI20_15&lt;/span&gt; = &lt;span class='wlnet03'&gt;RSI&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;RestoreScale&lt;/span&gt;();
    &lt;span class='wlnet03'&gt;RSI20_15&lt;/span&gt; = &lt;span class='wlnet06'&gt;Synchronize&lt;/span&gt;( &lt;span class='wlnet03'&gt;RSI20_15&lt;/span&gt; );
    
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;RSIPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;RSI&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; ), &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;RSIPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;RSI20_15&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>SetScaleDaily</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;SetScaleDaily&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000ff"&gt;void SetScaleDaily();&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Changes the base time scale of the Strategy to daily, from intraday.&amp;nbsp; The 
context Bars is replaced with a new Bars object compressed to the daily scale.&amp;nbsp; 
Any indicators, and external symbols produced will also be in daily scale.&amp;nbsp; If 
you need to plot any of the compressed daily DataSeries or Bars, you must first 
expand them to the original intraday scale using the Synchronize method.&amp;nbsp; Call RestoreScale to revert the Strategy back to the original time scale.&lt;/p&gt;
&lt;p&gt;&lt;font color=blue&gt;&lt;b&gt;Important!&lt;/b&gt;&lt;/font&gt;&lt;br&gt;&lt;br&gt;
You must call RestoreScale() to return to the original time scale particularly for plotting and executing trading signals.  In general, only remain in a compressed scale to create indicators and immediately revert to the base scale by calling RestoreScale().&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;b&gt;SetScaleDaily&lt;/b&gt; only works on charts using intraday scaled data.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;SetScaleDaily&lt;/b&gt; operates only on the standard OHLC/V DataSeries of the Bars object and does not apply to manually created and/or Named DataSeries.&lt;/li&gt;&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
&lt;span class='wlnet01'&gt;//Look for a Daily SMA CrossOver in our intraday chart&lt;/span&gt;
    &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;IsIntraday&lt;/span&gt; )
    {
        &lt;span class='wlnet06'&gt;SetScaleDaily&lt;/span&gt;();
        &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;SMA1&lt;/span&gt; = &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;10&lt;/span&gt; );
        &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;SMA2&lt;/span&gt; = &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;40&lt;/span&gt; ); 
        &lt;span class='wlnet06'&gt;RestoreScale&lt;/span&gt;();
        &lt;span class='wlnet03'&gt;SMA1&lt;/span&gt; = &lt;span class='wlnet06'&gt;Synchronize&lt;/span&gt;( &lt;span class='wlnet03'&gt;SMA1&lt;/span&gt; );
        &lt;span class='wlnet03'&gt;SMA2&lt;/span&gt; = &lt;span class='wlnet06'&gt;Synchronize&lt;/span&gt;( &lt;span class='wlnet03'&gt;SMA2&lt;/span&gt; );
        &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;SMA1&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
        &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;SMA2&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
        &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
        {
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;CrossOver&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;SMA1&lt;/span&gt;, &lt;span class='wlnet03'&gt;SMA2&lt;/span&gt; ) )
                &lt;span class='wlnet06'&gt;SetBackgroundColor&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt; );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>SetScaleMonthly</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;SetScaleMonthly&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void SetScaleMonthly();&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Changes the base time scale of the Strategy to monthly.&amp;nbsp; The context 
Bars is replaced with a new Bars object compressed to the monthly scale.&amp;nbsp; 
Any indicators, and external symbols produced will also be in monthly scale.&amp;nbsp; 
If you need to plot any of the compressed DataSeries or Bars, you must first 
expand them to the original scale using the Synchronize method.&amp;nbsp; Call RestoreScale to revert the Strategy back to the original time scale.&lt;/p&gt;
&lt;p&gt;&lt;font color=blue&gt;&lt;b&gt;Important!&lt;/b&gt;&lt;/font&gt;&lt;br&gt;&lt;br&gt;
You must call RestoreScale() to return to the original time scale particularly for plotting and executing trading signals.  In general, only remain in a compressed scale to create indicators and immediately revert to the base scale by calling RestoreScale().&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;SetScaleMonthly&lt;/b&gt; operates only on the standard OHLC/V DataSeries of the Bars object and does not apply to manually created and/or Named DataSeries.&lt;/li&gt;&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Plot the 5 month RSI in our daily chart&lt;/span&gt;
    &lt;span class='wlnet06'&gt;SetScaleMonthly&lt;/span&gt;();
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;MonthlyRSI&lt;/span&gt; = &lt;span class='wlnet03'&gt;RSI&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;5&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;RestoreScale&lt;/span&gt;();
    &lt;span class='wlnet03'&gt;MonthlyRSI&lt;/span&gt; = &lt;span class='wlnet06'&gt;Synchronize&lt;/span&gt;( &lt;span class='wlnet03'&gt;MonthlyRSI&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;RSIPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;50&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;RSIPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;MonthlyRSI&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Navy&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;2&lt;/span&gt; );
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>SetScaleWeekly</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;SetScaleWeekly&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;void SetScaleWeekly();&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Changes the base time scale of the Strategy to weekly.&amp;nbsp; The context Bars 
is replaced with a new Bars object compressed to the weekly scale.&amp;nbsp; Any 
indicators, and external symbols produced will also be in weekly scale.&amp;nbsp; If 
you need to plot any of the compressed DataSeries or Bars, you must first expand 
them to the original scale using the Synchronize method.&amp;nbsp; Call RestoreScale to revert the Strategy back to the original time scale.&lt;/p&gt;
&lt;p&gt;&lt;font color=blue&gt;&lt;b&gt;Important!&lt;/b&gt;&lt;/font&gt;&lt;br&gt;&lt;br&gt;
You must call RestoreScale() to return to the original time scale particularly for plotting and executing trading signals.  In general, only remain in a compressed scale to create indicators and immediately revert to the base scale by calling RestoreScale().&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;SetScaleWeekly&lt;/b&gt; operates only on the standard OHLC/V DataSeries of the Bars object and does not apply to manually created and/or Named DataSeries.&lt;/li&gt;&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Plot the weekly MACD in our daily chart&lt;/span&gt;
    &lt;span class='wlnet06'&gt;SetScaleWeekly&lt;/span&gt;();
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;WeeklyMACD&lt;/span&gt; = &lt;span class='wlnet03'&gt;MACD&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;RestoreScale&lt;/span&gt;();
    &lt;span class='wlnet03'&gt;WeeklyMACD&lt;/span&gt; = &lt;span class='wlnet06'&gt;Synchronize&lt;/span&gt;( &lt;span class='wlnet03'&gt;WeeklyMACD&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;MACDPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;50&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;MACDPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;WeeklyMACD&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Maroon&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Histogram&lt;/span&gt;, &lt;span class='wlnet04'&gt;2&lt;/span&gt; );
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
    </Entries>
    <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Time Frames&lt;/h1&gt;
&lt;p&gt;The Time Frames category contains methods you can use to access different 
time frames (such as weekly or monthly) within your Strategy.&lt;/p&gt;



&lt;/html&gt;</Description>
  </QuickRefCategory>
  <QuickRefCategory>
    <Name>Trading</Name>
    <CategoryType>Functional</CategoryType>
    <Entries>
      <QuickRefEntry>
        <Name>AutoProfitLevel</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;AutoProfitLevel Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;double AutoProfitLevel&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Specifies the initial profit target level for the next Position to be created. The value, analogous to &lt;b&gt;RiskStopLevel&lt;/b&gt;, is the &lt;b&gt;price&lt;/b&gt; at which the same-bar Limit order should be placed. It is valid for any BarScale.
&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;b&gt;AutoProfitLevel&lt;/b&gt; should be set if "same bar exits" wish to be used in &lt;b&gt;real-time trading&lt;/b&gt;. It does not have any effect in backtesting.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
&lt;span class='wlnet06'&gt;PlotStops&lt;/span&gt;();
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bcm1&lt;/span&gt; = &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt; - &lt;span class='wlnet04'&gt;1&lt;/span&gt;;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;sma1&lt;/span&gt; = &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;(&lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;8&lt;/span&gt;);
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;sma2&lt;/span&gt; = &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;(&lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt;);
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;(&lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;sma1&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Green&lt;/span&gt;, &lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt;);
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;(&lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;sma2&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt;, &lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt;);

    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;FirstActualBar&lt;/span&gt; + &lt;span class='wlnet04'&gt;20&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; = &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;;
            &lt;span class='wlnet06'&gt;SellAtLimit&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet07'&gt;AutoProfitLevel&lt;/span&gt; * &lt;span class='wlnet04'&gt;1.01&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt; &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;CrossOver&lt;/span&gt;(&lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;sma1&lt;/span&gt;, &lt;span class='wlnet03'&gt;sma2&lt;/span&gt;) )
        {
            &lt;span class='wlnet07'&gt;AutoProfitLevel&lt;/span&gt; = &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;High&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;];
            &lt;span class='wlnet01'&gt;// also use same-bar exit for backtesting&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; ) != &lt;span class='wlnet05'&gt;null&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet03'&gt;bcm1&lt;/span&gt;) 
                &lt;span class='wlnet06'&gt;SellAtLimit&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt; + &lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet07'&gt;AutoProfitLevel&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;same-bar exit&amp;quot;&lt;/span&gt; ); 
        }
    }
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>BuyAtClose</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;BuyAtClose&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000ff"&gt;Position BuyAtClose(int bar, string signalName);&lt;br&gt;
Position BuyAtClose(int bar);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Buys a new long position at the specified &lt;b&gt;bar&lt;/b&gt;, using the closing price 
of the bar as the entry price.&amp;nbsp; The position size will be calculated based on 
the closing price of the previous bar.&amp;nbsp; Returns a new &lt;b&gt;Position&lt;/b&gt; object 
that represents the newly established position.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Slippage, when activated, can affect the trade's execution price. &lt;/li&gt;
  &lt;li&gt;The optional &lt;b&gt;signalName&lt;/b&gt; parameter will appear in the Strategy 
  window trade list report. &lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;3&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (!&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet01'&gt;// Three consecutive lower closes&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( ( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] ) &amp;amp;
                ( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;2&lt;/span&gt;] ) &amp;amp;
                ( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;2&lt;/span&gt;] &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;3&lt;/span&gt;] ) )  
                &lt;span class='wlnet06'&gt;BuyAtClose&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt; );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>BuyAtLimit</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;BuyAtLimit&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;Position BuyAtLimit(int bar, double limitPrice, string 
signalName);&lt;br&gt;
Position BuyAtLimit(int bar, double limitPrice);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Buys a new long position at the specified &lt;b&gt;bar&lt;/b&gt;, using a limit order at 
the specified &lt;b&gt;limitPrice&lt;/b&gt;.&amp;nbsp; The position size will be calculated 
based on the &lt;b&gt;limitPrice&lt;/b&gt;.&amp;nbsp; If the price of the bar reaches the &lt;b&gt;limitPrice&lt;/b&gt; 
or lower, 
BuyAtLimit returns a new &lt;b&gt;Position&lt;/b&gt; object that represents the newly 
established position.&amp;nbsp; If the &lt;b&gt;limitPrice&lt;/b&gt; was not reached, BuyAtLimit 
returns &lt;b&gt;null&lt;/b&gt;.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Slippage, when activated, can cause limit orders to fail, even if the 
  price of the bar reaches the &lt;b&gt;limitPrice&lt;/b&gt;.&lt;/li&gt;
  &lt;li&gt;If the market open below the &lt;b&gt;limitPrice&lt;/b&gt;, the entry price of the 
  position will be set to the market open price of the &lt;b&gt;bar&lt;/b&gt;.&lt;/li&gt;
  &lt;li&gt;The optional &lt;b&gt;signalName&lt;/b&gt; parameter will appear in the Strategy 
  window 
  trade list report.&lt;/li&gt;
&lt;/ul&gt;
&lt;/body&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet01'&gt;//code your exit rules here&lt;/span&gt;
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet01'&gt;// Buy at limit at last bar's high minus 1.5 * 5-period ATR&lt;/span&gt;
            &lt;span class='wlnet06'&gt;BuyAtLimit&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;High&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]-&lt;span class='wlnet04'&gt;1.5&lt;/span&gt;*&lt;span class='wlnet03'&gt;ATR&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet04'&gt;5&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>BuyAtMarket</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;BuyAtMarket&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;Position BuyAtMarket(int bar, string signalName);&lt;br&gt;
Position BuyAtMarket(int bar);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Buys a new long position at the specified &lt;b&gt;bar&lt;/b&gt;, using the open price of 
the bar as the entry price.&amp;nbsp; The position size will be calculated based on 
the closing price of the previous bar.&amp;nbsp;&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Slippage, when activated, can affect the trade's execution price.&lt;/li&gt;
  &lt;li&gt;The optional &lt;b&gt;signalName&lt;/b&gt; parameter will appear in the Strategy 
  window 
  trade list report.&lt;/li&gt;
&lt;/ul&gt;
&lt;/body&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Open long position on the following bar based on this bar's indicator values&lt;/span&gt;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;sma&lt;/span&gt; = &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet01'&gt;// Exit trade after 5 days&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; - &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryBar&lt;/span&gt; &amp;gt;= &lt;span class='wlnet04'&gt;5&lt;/span&gt; )
            &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Time-Based&amp;quot;&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet01'&gt;// Buy at market next bar when the recent closing price crosses over the 20-period SMA&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;CrossOver&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet03'&gt;sma&lt;/span&gt; ) )
                &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;SMA CrossOver&amp;quot;&lt;/span&gt; );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>BuyAtStop</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;BuyAtStop&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000ff"&gt;Position BuyAtStop(int bar, double stopPrice, string 
signalName);&lt;br&gt;
Position BuyAtStop(int bar, double stopPrice);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Buys a new long position at the specified &lt;b&gt;bar&lt;/b&gt;, using a stop order at 
the specified &lt;b&gt;stopPrice&lt;/b&gt;.&amp;nbsp; The position size will be calculated based on 
the &lt;b&gt;stopPrice&lt;/b&gt;.&amp;nbsp; If the price of the bar reaches the &lt;b&gt;stopPrice&lt;/b&gt; or 
higher, BuyAtStop returns a new &lt;b&gt;Position&lt;/b&gt; object that represents the newly 
established position.&amp;nbsp; If the &lt;b&gt;stopPrice&lt;/b&gt; was not reached, BuyAtStop 
returns &lt;b&gt;null&lt;/b&gt;.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Slippage, when activated, can affect the trade's execution price. &lt;/li&gt;
  &lt;li&gt;If the market open above the &lt;b&gt;stopPrice&lt;/b&gt;, the entry price of the 
  position will be set to the market open price of the &lt;b&gt;bar&lt;/b&gt;. &lt;/li&gt;
  &lt;li&gt;The optional &lt;b&gt;signalName&lt;/b&gt; parameter will appear in the Strategy 
  window trade list report.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;peak&lt;/span&gt; = &lt;span class='wlnet03'&gt;Highest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet01'&gt;//code your exit rules here&lt;/span&gt;
            &lt;span class='wlnet01'&gt;//...&lt;/span&gt;
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet01'&gt;// Enter when the 20-period high is touched&lt;/span&gt;
            &lt;span class='wlnet06'&gt;BuyAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;peak&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet10'&gt;&amp;quot;Breakout&amp;quot;&lt;/span&gt; );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>CoverAtAutoTrailingStop</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;CoverAtAutoTrailingStop&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000ff"&gt;bool CoverAtTrailingStop(int bar, Position pos, double 
triggerPct, double profitReversalPct, string signalName);&lt;br&gt;
bool CoverAtTrailingStop(int bar, Position pos, double triggerPct, double 
profitReversalPct);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Covers&lt;span style="font-family:Tahoma"&gt; the short Position specified in the
&lt;b&gt;pos&lt;/b&gt; parameter at the specified &lt;b&gt;bar&lt;/b&gt;, using a trailing stop order.&amp;nbsp; 
The trailing stop is initiated only after the position reaches the profit level 
specified in the &lt;b&gt;triggerPct&lt;/b&gt; parameter. The stop price is calculated based 
on the &lt;b&gt;profitReversalPct&lt;/b&gt; parameter.&amp;nbsp; This value indicates the percentage 
reversal in the Position's profit that should be used as a stop level.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-family:Tahoma"&gt;For example, assume we specify 30 for &lt;b&gt;
profitReversalPct&lt;/b&gt;, and our short Position had an entry price of $12 and is 
currently at $10 (a 20% profit so far).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-family:Tahoma"&gt;The total profit so far is $12 - $10 = $2&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-family:Tahoma"&gt;30% of $2 is $0.60&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-family:Tahoma"&gt;The stop order will be placed at $10 + $0.60 
= $10.60&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-family:Tahoma"&gt;The trailing stop price is maintained with 
the Position, and it is modified only when the calculated stop price is below 
the current trailing stop price.&amp;nbsp; &lt;b&gt;CoverAtAutoTrailingStop&lt;/b&gt; returns a bool 
value indicating whether the price hit the current trailing stop level or above, 
and the Position was covered.&amp;nbsp; &lt;b&gt;CoverAtAutoTrailingStop&lt;/b&gt; will also return 
false if the &lt;b&gt;bar&lt;/b&gt; specified is greater than the number of bars on the 
chart.&amp;nbsp; In this case, a cover Alert will be generated instead.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Slippage, when activated, can affect a trade's execution price. &lt;/li&gt;
  &lt;li&gt;If the market open above the current trailing stop price, the position 
  will be covered at the market open price of the &lt;b&gt;bar&lt;/b&gt;. &lt;/li&gt;
  &lt;li&gt;The optional &lt;b&gt;signalName&lt;/b&gt; parameter will appear in the Strategy 
  window trade list report. &lt;/li&gt;
  &lt;li&gt;To cover all active short Positions, specify &lt;b&gt;Position.AllPositions&lt;/b&gt; 
  in the &lt;b&gt;pos&lt;/b&gt; parameter. &lt;/li&gt;
  &lt;li&gt;The current trailing stop price level is available by accessing the &lt;b&gt;
  TrailingStop&lt;/b&gt; Position property.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;period&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;;
    &lt;span class='wlnet06'&gt;PlotStops&lt;/span&gt;();
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet03'&gt;period&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; = &lt;span class='wlnet07'&gt;LastActivePosition&lt;/span&gt;;
            &lt;span class='wlnet01'&gt;// Protect a 10% gain after giving back 25% to market&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( !&lt;span class='wlnet06'&gt;CoverAtAutoTrailingStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;, &lt;span class='wlnet04'&gt;10&lt;/span&gt;, &lt;span class='wlnet04'&gt;25&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;AutoStop&amp;quot;&lt;/span&gt; ) )
                &lt;span class='wlnet01'&gt;// Stop loss at 10%&lt;/span&gt;
                &lt;span class='wlnet06'&gt;CoverAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryPrice&lt;/span&gt; * &lt;span class='wlnet04'&gt;1.10&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Stop Loss&amp;quot;&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
            &lt;span class='wlnet01'&gt;// Enter on channel breakdown&lt;/span&gt;
            &lt;span class='wlnet06'&gt;ShortAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;Lowest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Low&lt;/span&gt;, &lt;span class='wlnet03'&gt;period&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>CoverAtClose</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;   
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;CoverAtClose&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000ff"&gt;bool CoverAtClose(int bar, Position pos, string 
signalName);&lt;br&gt;
bool CoverAtClose(int bar, Position pos);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Covers the short Position specified in the &lt;b&gt;pos&lt;/b&gt; parameter at the 
specified &lt;b&gt;bar&lt;/b&gt;, using the closing price of the bar as the exit price.&amp;nbsp; 
CoverAtClose will return false if the &lt;b&gt;bar&lt;/b&gt; specified is greater than the 
number of bars on the chart.&amp;nbsp; In this case, a cover Alert will be generated 
instead.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Slippage, when activated, can affect the trade's execution price. &lt;/li&gt;
  &lt;li&gt;The optional &lt;b&gt;signalName&lt;/b&gt; parameter will appear in the Strategy 
  window trade list report. &lt;/li&gt;
  &lt;li&gt;To cover all active short Positions, specify &lt;b&gt;Position.AllPositions&lt;/b&gt; 
  in the &lt;b&gt;pos&lt;/b&gt; parameter.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;2&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet01'&gt;// Exit short after 20 days on close&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; - &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryBar&lt;/span&gt; &amp;gt;= &lt;span class='wlnet04'&gt;20&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;CoverAtClose&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;20 day exit&amp;quot;&lt;/span&gt; );                    
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet01'&gt;//code your entry rules here&lt;/span&gt;
            &lt;span class='wlnet06'&gt;ShortAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;Low&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>CoverAtLimit</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;   
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;CoverAtLimit&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000ff"&gt;bool CoverAtLimit(int bar, Position pos, double 
limitPrice, string signalName);&lt;br&gt;
bool CoverAtLimit(int bar, Position pos, double limitPrice);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Covers the short Position specified in the &lt;b&gt;pos&lt;/b&gt; parameter at the 
specified &lt;b&gt;bar&lt;/b&gt;, using a limit order at the specified &lt;b&gt;limitPrice&lt;/b&gt;.&amp;nbsp; 
CoverAtLimit returns a bool value indicating whether the price reached the &lt;b&gt;
limitPrice&lt;/b&gt; or below, and the Position was sold.&amp;nbsp; CoverAtLimit will also 
return false if the &lt;b&gt;bar&lt;/b&gt; specified is greater than the number of bars on 
the chart.&amp;nbsp; In this case, a cover Alert will be generated instead.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Slippage, when activated, can cause a limit order to fail, even if the 
  price reaches the &lt;b&gt;limitPrice&lt;/b&gt;. &lt;/li&gt;
  &lt;li&gt;If the market opens below the &lt;b&gt;limitPrice&lt;/b&gt;, the position will be 
  covered at the market open of the &lt;b&gt;bar&lt;/b&gt;. &lt;/li&gt;
  &lt;li&gt;The optional &lt;b&gt;signalName&lt;/b&gt; parameter will appear in the Strategy 
  window trade list report. &lt;/li&gt;
  &lt;li&gt;To cover all active short Positions, specify &lt;b&gt;Position.AllPositions&lt;/b&gt; 
  in the &lt;b&gt;pos&lt;/b&gt; parameter.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;50&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;adaptiveTarget&lt;/span&gt;;
        &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;big&lt;/span&gt; = &lt;span class='wlnet04'&gt;4&lt;/span&gt;;
        &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;regular&lt;/span&gt; = &lt;span class='wlnet04'&gt;1.5&lt;/span&gt;;
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; = &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;ROC&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;ADX&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet04'&gt;14&lt;/span&gt; ), &lt;span class='wlnet04'&gt;2&lt;/span&gt; ) &amp;gt; &lt;span class='wlnet04'&gt;0&lt;/span&gt; )
            {
                &lt;span class='wlnet03'&gt;adaptiveTarget&lt;/span&gt; = &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryPrice&lt;/span&gt; - &lt;span class='wlnet03'&gt;big&lt;/span&gt; * &lt;span class='wlnet03'&gt;ATR&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; );
            }
            &lt;span class='wlnet05'&gt;else&lt;/span&gt;
                &lt;span class='wlnet03'&gt;adaptiveTarget&lt;/span&gt; = &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryPrice&lt;/span&gt;  - &lt;span class='wlnet03'&gt;regular&lt;/span&gt; * &lt;span class='wlnet03'&gt;ATR&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; );
        &lt;span class='wlnet01'&gt;//  Doubly Adaptive Profit Objective by Chuck LeBeau&lt;/span&gt;
            &lt;span class='wlnet06'&gt;CoverAtLimit&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt; + &lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet03'&gt;adaptiveTarget&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Adaptive Profit Target&amp;quot;&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet01'&gt;//code your entry rules here&lt;/span&gt;
            &lt;span class='wlnet06'&gt;ShortAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;Lowest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Low&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; ) );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>CoverAtMarket</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;   
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;CoverAtMarket&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000ff"&gt;bool CoverAtMarket(int bar, Position pos, string 
signalName);&lt;br&gt;
bool CoverAtMarket(int bar, Position pos);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Covers the short Position specified in the &lt;b&gt;pos&lt;/b&gt; parameter at the 
specified &lt;b&gt;bar&lt;/b&gt;, using the open price of the bar as the exit price.&amp;nbsp; 
CoverAtMarket will return false if the &lt;b&gt;bar&lt;/b&gt; specified is greater than the 
number of bars on the chart.&amp;nbsp; In this case, a cover Alert will be generated 
instead.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Slippage, when activated, can affect the trade's execution price. &lt;/li&gt;
  &lt;li&gt;The optional &lt;b&gt;signalName&lt;/b&gt; parameter will appear in the Strategy 
  window trade list report. &lt;/li&gt;
  &lt;li&gt;To cover all active short Positions, specify &lt;b&gt;Position.AllPositions&lt;/b&gt; 
  in the &lt;b&gt;pos&lt;/b&gt; parameter.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;kl&lt;/span&gt; = &lt;span class='wlnet03'&gt;KeltnerLower&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet04'&gt;10&lt;/span&gt;, &lt;span class='wlnet04'&gt;10&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;kh&lt;/span&gt; = &lt;span class='wlnet03'&gt;KeltnerUpper&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet04'&gt;10&lt;/span&gt;, &lt;span class='wlnet04'&gt;10&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;kh&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;kl&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt;, &lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;50&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet01'&gt;// Cover at market when price crosses over the Keltner UpperBand&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;CrossOver&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet03'&gt;kh&lt;/span&gt; ) )
                &lt;span class='wlnet06'&gt;CoverAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt; + &lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Keltner CrossOver&amp;quot;&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet01'&gt;// Short if close crosses under the Keltner LowerBand&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;CrossUnder&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet03'&gt;kl&lt;/span&gt; ) )
                &lt;span class='wlnet06'&gt;ShortAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt; + &lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Keltner CrossUnder&amp;quot;&lt;/span&gt; );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>CoverAtStop</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;   
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;CoverAtStop&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000ff"&gt;bool CoverAtStop(int bar, Position pos, double 
stopPrice, string signalName);&lt;br&gt;
bool CoverAtStop(int bar, Position pos, double stopPrice);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Covers the short Position specified in the &lt;b&gt;pos&lt;/b&gt; parameter at the 
specified &lt;b&gt;bar&lt;/b&gt;, using a stop order at the specified &lt;b&gt;stopPrice&lt;/b&gt;.&amp;nbsp; 
CoverAtStop returns a bool value indicating whether the price hit the &lt;b&gt;
stopPrice&lt;/b&gt; or above, and the Position was covered.&amp;nbsp; CoverAtStop will also 
return false if the &lt;b&gt;bar&lt;/b&gt; specified is greater than the number of bars on 
the chart.&amp;nbsp; In this case, a cover Alert will be generated instead.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Slippage, when activated, can affect a trade's execution price. &lt;/li&gt;
  &lt;li&gt;If the market open above the &lt;b&gt;stopPrice&lt;/b&gt;, the position will be sold 
  at the market open price of the &lt;b&gt;bar&lt;/b&gt;. &lt;/li&gt;
  &lt;li&gt;The optional &lt;b&gt;signalName&lt;/b&gt; parameter will appear in the Strategy 
  window trade list report. &lt;/li&gt;
  &lt;li&gt;To cover all active short Positions, specify &lt;b&gt;Position.AllPositions&lt;/b&gt; 
  in the &lt;b&gt;pos&lt;/b&gt; parameter.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet01'&gt;// Cover the short position if prices move against us by 10%&lt;/span&gt;
            &lt;span class='wlnet06'&gt;CoverAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryPrice&lt;/span&gt; * &lt;span class='wlnet04'&gt;1.1&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;10% Stop&amp;quot;&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet01'&gt;//code your entry rules here&lt;/span&gt;
            &lt;span class='wlnet06'&gt;ShortAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>CoverAtTrailingStop</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;CoverAtTrailingStop&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000ff"&gt;bool CoverAtTrailingStop(int bar, Position pos, double 
stopPrice, string signalName);&lt;br&gt;
bool CoverAtTrailingStop(int bar, Position pos, double stopPrice);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Covers the short Position specified in the &lt;b&gt;pos&lt;/b&gt; parameter at the 
specified &lt;b&gt;bar&lt;/b&gt;, using a trailing stop order.&amp;nbsp; The trailing stop price is 
maintained with the Position, and it is modified only when the specified &lt;b&gt;
stopPrice&lt;/b&gt; is below the current trailing stop price.&amp;nbsp; &lt;b&gt;
CoverAtTrailingStop&lt;/b&gt; returns a bool value indicating whether the price hit 
the current trailing stop level or above, and the Position was covered.&amp;nbsp; &lt;b&gt;
CoverAtTrailingStop&lt;/b&gt; will also return false if the &lt;b&gt;bar&lt;/b&gt; specified is 
greater than the number of bars on the chart.&amp;nbsp; In this case, a cover Alert will 
be generated instead.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Slippage, when activated, can affect a trade's execution price. &lt;/li&gt;
  &lt;li&gt;If the market open above the current trailing stop price, the position 
  will be covered at the market open price of the &lt;b&gt;bar&lt;/b&gt;. &lt;/li&gt;
  &lt;li&gt;The optional &lt;b&gt;signalName&lt;/b&gt; parameter will appear in the Strategy 
  window trade list report.&lt;/li&gt;
  &lt;li&gt;To cover all active short Positions, specify &lt;b&gt;Position.AllPositions&lt;/b&gt; 
  in the &lt;b&gt;pos&lt;/b&gt; parameter.&lt;/li&gt;
  &lt;li&gt;The current trailing stop price level is available by accessing the &lt;b&gt;
  TrailingStop&lt;/b&gt; Position property.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet06'&gt;PlotStops&lt;/span&gt;();
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;period&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;;
    &lt;span class='wlnet03'&gt;SMA&lt;/span&gt; &lt;span class='wlnet03'&gt;sma&lt;/span&gt; = &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet03'&gt;period&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;sma&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;BurlyWood&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;3&lt;/span&gt;*&lt;span class='wlnet03'&gt;period&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; = &lt;span class='wlnet07'&gt;LastActivePosition&lt;/span&gt;;
            &lt;span class='wlnet01'&gt;// Initiate a trailing stop after a 5% gain&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;MFEAsOfBarPercent&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt; ) &amp;gt; &lt;span class='wlnet04'&gt;5&lt;/span&gt; )
            {
                &lt;span class='wlnet06'&gt;CoverAtTrailingStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;, &lt;span class='wlnet03'&gt;sma&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet10'&gt;&amp;quot;Trailing Stop&amp;quot;&lt;/span&gt; );
            }
            &lt;span class='wlnet05'&gt;else&lt;/span&gt;
                &lt;span class='wlnet06'&gt;CoverAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryPrice&lt;/span&gt; * &lt;span class='wlnet04'&gt;1.10&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;10% Stop Loss&amp;quot;&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet01'&gt;// sample entry rule&lt;/span&gt;
            &lt;span class='wlnet06'&gt;ShortAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;sma&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]*&lt;span class='wlnet04'&gt;0.97&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;3% band around SMA&amp;quot;&lt;/span&gt; );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>ExitAtAutoTrailingStop</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;ExitAtAutoTrailingStop&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000ff"&gt;bool ExitAtAutoTrailingStop(int bar, Position pos, 
double triggerPct, double profitReversalPct, string signalName);&lt;br&gt;
bool ExitAtTrailingStop(int bar, Position pos, double triggerPct, double 
profitReversalPct);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Provides a shortcut that allows you to use a common exit method for both long 
and short positions.&amp;nbsp; Internally, &lt;b&gt;ExitAtAutoTrailingStop&lt;/b&gt; routes to either
&lt;b&gt;SellAtAutoTrailingStop&lt;/b&gt; or &lt;b&gt;CoverAtAutoTrailingStop&lt;/b&gt;, depending on 
the &lt;b&gt;PositionType&lt;/b&gt; of the &lt;b&gt;Position&lt;/b&gt; that was passed to it.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;atr&lt;/span&gt;, &lt;span class='wlnet03'&gt;entry&lt;/span&gt;, &lt;span class='wlnet03'&gt;stop&lt;/span&gt;;
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;period&lt;/span&gt; = &lt;span class='wlnet04'&gt;14&lt;/span&gt;;     &lt;span class='wlnet01'&gt;// ATR period&lt;/span&gt;
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;mult&lt;/span&gt; = &lt;span class='wlnet04'&gt;2&lt;/span&gt;;    &lt;span class='wlnet01'&gt;// ATR multiplier        &lt;/span&gt;
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet03'&gt;period&lt;/span&gt; * &lt;span class='wlnet04'&gt;2&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet03'&gt;atr&lt;/span&gt; = &lt;span class='wlnet03'&gt;ATR&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet03'&gt;period&lt;/span&gt; ) * &lt;span class='wlnet03'&gt;mult&lt;/span&gt;;
        &lt;span class='wlnet03'&gt;entry&lt;/span&gt; = &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] + &lt;span class='wlnet03'&gt;atr&lt;/span&gt;;
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; = &lt;span class='wlnet07'&gt;LastActivePosition&lt;/span&gt;;
            &lt;span class='wlnet03'&gt;stop&lt;/span&gt; = &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryPrice&lt;/span&gt;;
            &lt;span class='wlnet01'&gt;// Protect a 10% gain after giving back 25% to market&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( !&lt;span class='wlnet06'&gt;ExitAtAutoTrailingStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;, &lt;span class='wlnet04'&gt;10&lt;/span&gt;, &lt;span class='wlnet04'&gt;25&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;AutoStop&amp;quot;&lt;/span&gt; ) )
                &lt;span class='wlnet01'&gt;// Auto-sensing stop loss at 10%&lt;/span&gt;
                &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;PositionType&lt;/span&gt; == &lt;span class='wlnet03'&gt;PositionType&lt;/span&gt;.&lt;span class='wlnet05'&gt;Long&lt;/span&gt;  )
                {
                    &lt;span class='wlnet03'&gt;stop&lt;/span&gt; = &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryPrice&lt;/span&gt; * &lt;span class='wlnet04'&gt;0.9&lt;/span&gt;;
                }
                &lt;span class='wlnet05'&gt;else&lt;/span&gt;
                    &lt;span class='wlnet03'&gt;stop&lt;/span&gt; = &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryPrice&lt;/span&gt; * &lt;span class='wlnet04'&gt;1.1&lt;/span&gt;;
                &lt;span class='wlnet06'&gt;ExitAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;, &lt;span class='wlnet03'&gt;stop&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Stop Loss&amp;quot;&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet01'&gt;// &amp;quot;Serendipity entry&amp;quot; (c) Chuck LeBeau&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;BuyAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;entry&lt;/span&gt; ) == &lt;span class='wlnet05'&gt;null&lt;/span&gt; )
            {
                &lt;span class='wlnet03'&gt;entry&lt;/span&gt; = &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] - &lt;span class='wlnet03'&gt;atr&lt;/span&gt;*&lt;span class='wlnet03'&gt;mult&lt;/span&gt;;
                &lt;span class='wlnet06'&gt;ShortAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;entry&lt;/span&gt; );
            }
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>ExitAtClose</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;ExitAtClose&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;bool ExitAtClose(int bar, Position pos, string signalName);&lt;br&gt;
bool ExitAtClose(int bar, Position pos);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Provides a shortcut that allows you to use a common exit method for both long 
and short positions.&amp;nbsp; Internally, &lt;b&gt;ExitAtClose&lt;/b&gt; routes to either &lt;b&gt;
SellAtClose&lt;/b&gt; or &lt;b&gt;CoverAtClose&lt;/b&gt;, depending on the &lt;b&gt;PositionType&lt;/b&gt; of 
the &lt;b&gt;Position&lt;/b&gt; that was passed to it.&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet01'&gt;// Gap Closer II ( Consecutive Gap Closer )&lt;/span&gt;
    &lt;span class='wlnet05'&gt;bool&lt;/span&gt; &lt;span class='wlnet03'&gt;gapDown&lt;/span&gt;, &lt;span class='wlnet03'&gt;gapUp&lt;/span&gt;;
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;4&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; = &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;;
            &lt;span class='wlnet01'&gt;// Take no risk overnight&lt;/span&gt;
            &lt;span class='wlnet06'&gt;ExitAtClose&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet01'&gt;// consecutive gap up&lt;/span&gt;
            &lt;span class='wlnet03'&gt;gapUp&lt;/span&gt; = ( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Open&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;] &amp;gt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;High&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] ) &amp;amp; 
                ( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Open&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;gt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;High&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] ) &amp;amp; 
                &lt;span class='wlnet01'&gt;// 1st gap not filled&lt;/span&gt;
                ( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Low&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;gt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;High&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] ) &amp;amp;
                &lt;span class='wlnet01'&gt;// 1st gap was larger than 2nd gap&lt;/span&gt;
                ( ( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Open&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]-&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;High&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] ) &amp;gt; ( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Open&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;]-&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;High&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] ) );
            &lt;span class='wlnet01'&gt;// consecutive gap down&lt;/span&gt;
            &lt;span class='wlnet03'&gt;gapDown&lt;/span&gt; = ( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Open&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;] &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Low&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] ) &amp;amp;
                ( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Open&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Low&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] ) &amp;amp; 
                &lt;span class='wlnet01'&gt;// 1st gap not filled&lt;/span&gt;
                ( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Low&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] &amp;gt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;High&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] ) &amp;amp;
                &lt;span class='wlnet01'&gt;// 1st gap was larger than 2nd gap&lt;/span&gt;
                ( ( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Low&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;]-&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Open&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] ) &amp;gt; ( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Low&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]-&lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Open&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;] ) );                    
            &lt;span class='wlnet01'&gt;// Buy/short the gap&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;gapDown&lt;/span&gt; ) 
                &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Gap Down&amp;quot;&lt;/span&gt; );
            &lt;span class='wlnet05'&gt;else&lt;/span&gt; &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;gapUp&lt;/span&gt; ) 
                &lt;span class='wlnet06'&gt;ShortAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Gap Up&amp;quot;&lt;/span&gt; );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>ExitAtLimit</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;ExitAtLimit&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;bool ExitAtLimit(int bar, Position pos, double 
limitPrice, string signalName);&lt;br&gt;
bool ExitAtLimit(int bar, Position pos, double limitPrice);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Provides a shortcut that allows you to use a common exit method for both long 
and short positions.&amp;nbsp; Internally, &lt;b&gt;ExitAtLimit&lt;/b&gt; routes to either &lt;b&gt;
SellAtLimit&lt;/b&gt; or &lt;b&gt;CoverAtLimit&lt;/b&gt;, depending on the &lt;b&gt;PositionType&lt;/b&gt; of 
the &lt;b&gt;Position&lt;/b&gt; that was passed to it.&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;entry&lt;/span&gt;, &lt;span class='wlnet03'&gt;profit&lt;/span&gt;;
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;period&lt;/span&gt; = &lt;span class='wlnet04'&gt;10&lt;/span&gt;;     &lt;span class='wlnet01'&gt;// period&lt;/span&gt;
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;mult&lt;/span&gt; = &lt;span class='wlnet04'&gt;2&lt;/span&gt;;    &lt;span class='wlnet01'&gt;// ATR multiplier&lt;/span&gt;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;hi&lt;/span&gt; = &lt;span class='wlnet03'&gt;Highest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;(&lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet03'&gt;period&lt;/span&gt;);
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;lo&lt;/span&gt; = &lt;span class='wlnet03'&gt;Lowest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;(&lt;span class='wlnet07'&gt;Low&lt;/span&gt;, &lt;span class='wlnet03'&gt;period&lt;/span&gt;);
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet01'&gt;// Exit either position at limit @ entry price +/- 2 times the 20-period ATR&lt;/span&gt;
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; = &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;;
            &lt;span class='wlnet01'&gt;// The power of &amp;quot;?&amp;quot; ternary operator:&lt;/span&gt;
            &lt;span class='wlnet03'&gt;profit&lt;/span&gt; = (&lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;PositionType&lt;/span&gt; == &lt;span class='wlnet03'&gt;PositionType&lt;/span&gt;.&lt;span class='wlnet05'&gt;Long&lt;/span&gt;) ? &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryPrice&lt;/span&gt; + &lt;span class='wlnet03'&gt;ATR&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;(&lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet03'&gt;period&lt;/span&gt;) * &lt;span class='wlnet03'&gt;mult&lt;/span&gt; : &lt;span class='wlnet03'&gt;profit&lt;/span&gt; = &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryPrice&lt;/span&gt; - &lt;span class='wlnet03'&gt;ATR&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;(&lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet03'&gt;period&lt;/span&gt;) * &lt;span class='wlnet03'&gt;mult&lt;/span&gt;;
            &lt;span class='wlnet06'&gt;ExitAtLimit&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet03'&gt;profit&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet01'&gt;// plain vanilla channel breakout&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;BuyAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;hi&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet10'&gt;&amp;quot;Long&amp;quot;&lt;/span&gt; ) == &lt;span class='wlnet05'&gt;null&lt;/span&gt; )
            {
                &lt;span class='wlnet06'&gt;ShortAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;lo&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet10'&gt;&amp;quot;Short&amp;quot;&lt;/span&gt; );
            }
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>ExitAtMarket</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;ExitAtMarket&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;bool ExitAtMarket(int bar, Position pos, string signalName);&lt;br&gt;
bool ExitAtMarket(int bar, Position pos);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Provides a shortcut that allows you to use a common exit method for both long 
and short positions.&amp;nbsp; Internally, &lt;b&gt;ExitAtMarket&lt;/b&gt; routes to either &lt;b&gt;
SellAtMarket&lt;/b&gt; or &lt;b&gt;CoverAtMarket&lt;/b&gt;, depending on the &lt;b&gt;PositionType&lt;/b&gt; 
of the &lt;b&gt;Position&lt;/b&gt; that was passed to it.&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;period&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;;    &lt;span class='wlnet01'&gt;// SMA period&lt;/span&gt;
    &lt;span class='wlnet05'&gt;bool&lt;/span&gt; &lt;span class='wlnet05'&gt;Event&lt;/span&gt;;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;sma&lt;/span&gt; = &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet03'&gt;period&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;hi&lt;/span&gt; = &lt;span class='wlnet03'&gt;Highest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;(&lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet03'&gt;period&lt;/span&gt;);
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;lo&lt;/span&gt; = &lt;span class='wlnet03'&gt;Lowest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;(&lt;span class='wlnet07'&gt;Low&lt;/span&gt;, &lt;span class='wlnet03'&gt;period&lt;/span&gt;);
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;hi&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Dotted&lt;/span&gt;, &lt;span class='wlnet04'&gt;2&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;lo&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Dotted&lt;/span&gt;, &lt;span class='wlnet04'&gt;2&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;sma&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;DarkGreen&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;2&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet01'&gt;// Exit position at market on a SMA CrossUnder/CrossOver&lt;/span&gt;
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; = &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;;
            &lt;span class='wlnet01'&gt;// Ternary operator &amp;quot;?&amp;quot; fits with the Exit* operator syntax&lt;/span&gt;
            &lt;span class='wlnet05'&gt;Event&lt;/span&gt; = ( &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;PositionType&lt;/span&gt; == &lt;span class='wlnet03'&gt;PositionType&lt;/span&gt;.&lt;span class='wlnet05'&gt;Long&lt;/span&gt; ) ? ( &lt;span class='wlnet06'&gt;CrossUnder&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet03'&gt;sma&lt;/span&gt; ) ) : ( &lt;span class='wlnet06'&gt;CrossOver&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet03'&gt;sma&lt;/span&gt; ) );
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet05'&gt;Event&lt;/span&gt; )
            {
                &lt;span class='wlnet06'&gt;ExitAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt; );
            }
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet01'&gt;// plain vanilla channel breakout&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;BuyAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;hi&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] ) == &lt;span class='wlnet05'&gt;null&lt;/span&gt; )
            {
                &lt;span class='wlnet06'&gt;ShortAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;lo&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] );
            }
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>ExitAtStop</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;ExitAtStop&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;bool ExitAtStop(int bar, Position pos, double stopPrice, string signalName);&lt;br&gt;
bool ExitAtStop(int bar, Position pos, double stopPrice);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Provides a shortcut that allows you to use a common exit method for both long 
and short positions.&amp;nbsp; Internally, &lt;b&gt;ExitAtStop&lt;/b&gt; routes to either &lt;b&gt;
SellAtStop&lt;/b&gt; or &lt;b&gt;CoverAtStop&lt;/b&gt;, depending on the &lt;b&gt;PositionType&lt;/b&gt; of 
the &lt;b&gt;Position&lt;/b&gt; that was passed to it.&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;entry&lt;/span&gt;, &lt;span class='wlnet03'&gt;level&lt;/span&gt;;
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;period&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;;     &lt;span class='wlnet01'&gt;// period&lt;/span&gt;
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;mult&lt;/span&gt; = &lt;span class='wlnet04'&gt;3&lt;/span&gt;;    &lt;span class='wlnet01'&gt;// ATR multiplier&lt;/span&gt;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;hi&lt;/span&gt; = &lt;span class='wlnet03'&gt;Highest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;(&lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet03'&gt;period&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;lo&lt;/span&gt; = &lt;span class='wlnet03'&gt;Lowest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;(&lt;span class='wlnet07'&gt;Low&lt;/span&gt;, &lt;span class='wlnet03'&gt;period&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;atr&lt;/span&gt; = &lt;span class='wlnet03'&gt;ATR&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet03'&gt;period&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet01'&gt;// Exit position at a respective Chandelier stop&lt;/span&gt;
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; = &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;;
            &lt;span class='wlnet03'&gt;level&lt;/span&gt; = (&lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;PositionType&lt;/span&gt; == &lt;span class='wlnet03'&gt;PositionType&lt;/span&gt;.&lt;span class='wlnet05'&gt;Long&lt;/span&gt;) ? &lt;span class='wlnet03'&gt;hi&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] - (&lt;span class='wlnet03'&gt;atr&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] * &lt;span class='wlnet03'&gt;mult&lt;/span&gt; ) : &lt;span class='wlnet03'&gt;lo&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] + (&lt;span class='wlnet03'&gt;atr&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] * &lt;span class='wlnet03'&gt;mult&lt;/span&gt; );
            &lt;span class='wlnet06'&gt;ExitAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;, &lt;span class='wlnet03'&gt;level&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Chandelier exit&amp;quot;&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet01'&gt;// plain vanilla channel breakout&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;BuyAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;hi&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet10'&gt;&amp;quot;Long&amp;quot;&lt;/span&gt; ) == &lt;span class='wlnet05'&gt;null&lt;/span&gt; )
            {
                &lt;span class='wlnet06'&gt;ShortAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;lo&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet10'&gt;&amp;quot;Short&amp;quot;&lt;/span&gt; );
            }
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>ExitAtTrailingStop</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;ExitAtTrailingStop&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000ff"&gt;bool ExitAtTrailingStop(int bar, Position pos, double 
stopPrice, string signalName);&lt;br&gt;
bool ExitAtTrailingStop(int bar, Position pos, double stopPrice);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Provides a shortcut that allows you to use a common exit method for both long 
and short positions.&amp;nbsp; Internally, &lt;b&gt;ExitAtTrailingStop&lt;/b&gt; routes to either &lt;b&gt;
SellAtTrailingStop&lt;/b&gt; or &lt;b&gt;CoverAtTrailingStop&lt;/b&gt;, depending on the &lt;b&gt;
PositionType&lt;/b&gt; of the &lt;b&gt;Position&lt;/b&gt; that was passed to it.&lt;/p&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;entry&lt;/span&gt;, &lt;span class='wlnet03'&gt;level&lt;/span&gt;;
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;period&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;;     &lt;span class='wlnet01'&gt;// period&lt;/span&gt;
    &lt;span class='wlnet05'&gt;double&lt;/span&gt; &lt;span class='wlnet03'&gt;mult&lt;/span&gt; = &lt;span class='wlnet04'&gt;3&lt;/span&gt;;    &lt;span class='wlnet01'&gt;// ATR multiplier&lt;/span&gt;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;hi&lt;/span&gt; = &lt;span class='wlnet03'&gt;Highest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet03'&gt;period&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;lo&lt;/span&gt; = &lt;span class='wlnet03'&gt;Lowest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;(&lt;span class='wlnet07'&gt;Low&lt;/span&gt;, &lt;span class='wlnet03'&gt;period&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;atr&lt;/span&gt; = &lt;span class='wlnet03'&gt;ATR&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet03'&gt;period&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotStops&lt;/span&gt;();
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet01'&gt;// Exit position at respective Chandelier stop&lt;/span&gt;
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; = &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;;
            &lt;span class='wlnet03'&gt;level&lt;/span&gt; = ( &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;PositionType&lt;/span&gt; == &lt;span class='wlnet03'&gt;PositionType&lt;/span&gt;.&lt;span class='wlnet05'&gt;Long&lt;/span&gt; ) ? &lt;span class='wlnet03'&gt;hi&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] - ( &lt;span class='wlnet03'&gt;atr&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] * &lt;span class='wlnet03'&gt;mult&lt;/span&gt; ) : &lt;span class='wlnet03'&gt;lo&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] + (&lt;span class='wlnet03'&gt;atr&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] * &lt;span class='wlnet03'&gt;mult&lt;/span&gt; );
            &lt;span class='wlnet06'&gt;ExitAtTrailingStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;, &lt;span class='wlnet03'&gt;level&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Trailing Chandelier&amp;quot;&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet01'&gt;// plain vanilla channel breakout&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;BuyAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;hi&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] ) == &lt;span class='wlnet05'&gt;null&lt;/span&gt; )
            {
                &lt;span class='wlnet06'&gt;ShortAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;lo&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] );
            }
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>RiskStopLevel</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;RiskStopLevel Property&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;double RiskStopLevel&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Specifies the initial stop level (price) for the next Position to be created. 
This stop level is used when you select the Maximum Risk Pct Position Sizing 
option.&amp;nbsp; This option specifies the maximum amount of capital you are 
willing to risk on each trade.&amp;nbsp; When this option is selected, you must set 
the value of &lt;b&gt;RiskStopLevel&lt;/b&gt; in your Strategy code to indicate the initial 
stop loss value for a newly created Position.&lt;/p&gt;
&lt;p&gt;For example, a simple channel breakout system might enter at the highest 20 
bar high, and exit at the lowest 20 bar low.&amp;nbsp; Prior to issuing the &lt;b&gt;
BuyAtMarket&lt;/b&gt;, or &lt;b&gt;BuyAtStop&lt;/b&gt;, you should set &lt;b&gt;RiskStopLevel&lt;/b&gt; to the 
lowest Low value of the past 20 bars as the initial stop level for the long 
Position.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;If you select the Maximum Risk Pct position sizing option and do not set
  &lt;b&gt;RiskStopLevel&lt;/b&gt; in your Strategy code, you will receive an error message 
  when attempting to run the Strategy.&lt;/li&gt;
  &lt;li&gt;You must also be diligent in your Strategy to actually use the established 
  stop level as an exit.&amp;nbsp; If you do not, the Strategy could lose 
  considerably more than the Maximum Risk that you established in the Position 
  Size setting.&lt;/li&gt;
&lt;li&gt;Once a RiskStopLevel is established for a Position, do not change it. The [last] value assigned to a Position's RiskStopLevel is used to determine % Risk sizing, consequently reassigning its value after the Position is established is effectively a peeking error.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet06'&gt;PlotStops&lt;/span&gt;();
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;30&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet03'&gt;ATR&lt;/span&gt; &lt;span class='wlnet03'&gt;atr&lt;/span&gt; = &lt;span class='wlnet03'&gt;ATR&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet04'&gt;14&lt;/span&gt; );
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; = &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;;
            &lt;span class='wlnet01'&gt;// Protective stop: &amp;quot;Yo-Yo Exit&amp;quot; by Chuck LeBeau&lt;/span&gt;
            &lt;span class='wlnet06'&gt;SellAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;, &lt;span class='wlnet07'&gt;p.RiskStopLevel&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Yo-Yo Stop&amp;quot;&lt;/span&gt; );
            &lt;span class='wlnet06'&gt;SellAtLimit&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryPrice&lt;/span&gt;*&lt;span class='wlnet04'&gt;1.1&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;10% profit&amp;quot;&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet01'&gt;//Set our risk stop at an ATR unit below the last day's low&lt;/span&gt;
            &lt;span class='wlnet07'&gt;RiskStopLevel&lt;/span&gt; = ( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Low&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] - &lt;span class='wlnet04'&gt;1&lt;/span&gt;*&lt;span class='wlnet03'&gt;atr&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] );
            &lt;span class='wlnet06'&gt;BuyAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]+&lt;span class='wlnet04'&gt;2&lt;/span&gt;*&lt;span class='wlnet03'&gt;atr&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet10'&gt;&amp;quot;Volatility Breakout&amp;quot;&lt;/span&gt; );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Property</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>SellAtAutoTrailingStop</Name>
        <Description>&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;SellAtAutoTrailingStop&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000ff"&gt;bool SellAtTrailingStop(int bar, Position pos, double 
triggerPct, double profitReversalPct, string signalName);&lt;br&gt;
bool SellAtTrailingStop(int bar, Position pos, double triggerPct, double 
profitReversalPct);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-family:Tahoma"&gt;Sells the Position specified in the &lt;b&gt;pos&lt;/b&gt; 
parameter at the specified &lt;b&gt;bar&lt;/b&gt;, using a trailing stop order.&amp;nbsp; The 
trailing stop is initiated only after the position reaches the profit level 
specified in the &lt;b&gt;triggerPct&lt;/b&gt; parameter. The stop price is calculated based 
on the &lt;b&gt;profitReversalPct&lt;/b&gt; parameter.&amp;nbsp; This value indicates the percentage 
reversal in the Position's profit that should be used as a stop level.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-family:Tahoma"&gt;For example, assume we specify 30 for 
profitReversalPct, and our Position had an entry price of $10 and is currently 
at $12 (a 20% profit so far).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-family:Tahoma"&gt;The total profit so far is $12 - $10 = $2&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-family:Tahoma"&gt;30% of $2 is $0.60&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-family:Tahoma"&gt;The stop order will be placed at $12 - $0.60 
= $11.40&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-family:Tahoma"&gt;The trailing stop price is maintained with 
the Position, and it is modified only when the calculated stop price is above 
the current trailing stop price.&amp;nbsp; &lt;b&gt;SellAtAutoTrailingStop&lt;/b&gt; returns a bool 
value indicating whether the price hit the current trailing stop level or below, 
and the Position was sold.&amp;nbsp; &lt;b&gt;SellAtAutoTrailingStop&lt;/b&gt; will also return false 
if the &lt;b&gt;bar&lt;/b&gt; specified is greater than the number of bars on the chart.&amp;nbsp; In 
this case, a sell Alert will be generated instead.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Slippage, when activated, can affect a trade's execution price. &lt;/li&gt;
  &lt;li&gt;If the market open below the current trailing stop price, the position 
  will be sold at the market open price of the &lt;b&gt;bar&lt;/b&gt;. &lt;/li&gt;
  &lt;li&gt;The optional &lt;b&gt;signalName&lt;/b&gt; parameter will appear in the Strategy 
  window trade list report. &lt;/li&gt;
  &lt;li&gt;To sell all active long Positions, specify &lt;b&gt;Position.AllPositions&lt;/b&gt; in 
  the &lt;b&gt;pos&lt;/b&gt; parameter. &lt;/li&gt;
  &lt;li&gt;The current trailing stop price level is available by accessing the &lt;b&gt;
  TrailingStop&lt;/b&gt; Position property. &lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;period&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;kama&lt;/span&gt; = &lt;span class='wlnet03'&gt;KAMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotStops&lt;/span&gt;();
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet03'&gt;period&lt;/span&gt;*&lt;span class='wlnet04'&gt;3&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; = &lt;span class='wlnet07'&gt;LastActivePosition&lt;/span&gt;;
            &lt;span class='wlnet01'&gt;// Protect a 10% gain after giving back 25% to market&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( !&lt;span class='wlnet06'&gt;SellAtAutoTrailingStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;, &lt;span class='wlnet04'&gt;10&lt;/span&gt;, &lt;span class='wlnet04'&gt;25&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;10% AutoStop&amp;quot;&lt;/span&gt; ) )
                &lt;span class='wlnet06'&gt;SellAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryPrice&lt;/span&gt; * &lt;span class='wlnet04'&gt;0.90&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;10% stop loss&amp;quot;&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
            &lt;span class='wlnet01'&gt;// Enter when closing cross over KAMA&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;CrossOver&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet03'&gt;kama&lt;/span&gt; ) )
                &lt;span class='wlnet06'&gt;BuyAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] );
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>SellAtClose</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;SellAtClose&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;bool SellAtClose(int bar, Position pos, string signalName);&lt;br&gt;
bool SellAtClose(int bar, Position pos);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Sells the Position specified in the &lt;b&gt;pos&lt;/b&gt; parameter at the specified &lt;b&gt;
bar&lt;/b&gt;, using the closing price of the bar as the exit price.&amp;nbsp; 
SellAtClose will return false if the &lt;b&gt;bar&lt;/b&gt; specified is greater than the 
number of bars on the chart.&amp;nbsp; In this case, a sell Alert will be generated 
instead.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Slippage, when activated, can affect the trade's execution price.&lt;/li&gt;
  &lt;li&gt;The optional &lt;b&gt;signalName&lt;/b&gt; parameter will appear in the Strategy 
  window 
  trade list report.&lt;/li&gt;
  &lt;li&gt;To sell all active long Positions, specify &lt;b&gt;Position.AllPositions&lt;/b&gt; in the
  &lt;b&gt;pos&lt;/b&gt; parameter.&lt;/li&gt;
&lt;/ul&gt;
&lt;/body&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;2&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet01'&gt;// Exit long after 20 days &lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; - &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryBar&lt;/span&gt; &amp;gt;= &lt;span class='wlnet04'&gt;20&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;SellAtClose&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;20 day exit&amp;quot;&lt;/span&gt; );                    
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet01'&gt;//code your entry rules here&lt;/span&gt;
            &lt;span class='wlnet06'&gt;BuyAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;High&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>SellAtLimit</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;   
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;SellAtLimit&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000ff"&gt;bool SellAtLimit(int bar, Position pos, double 
limitPrice, string signalName);&lt;br&gt;
bool SellAtLimit(int bar, Position pos, double limitPrice);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Sells the Position specified in the &lt;b&gt;pos&lt;/b&gt; parameter at the specified &lt;b&gt;
bar&lt;/b&gt;, using a limit order at the specified &lt;b&gt;limitPrice&lt;/b&gt;.&amp;nbsp; SellAtLimit 
returns a bool value indicating whether the price reached the &lt;b&gt;limitPrice&lt;/b&gt; 
or above, and the Position was sold.&amp;nbsp; SellAtLimit will also return false if the
&lt;b&gt;bar&lt;/b&gt; specified is greater than the number of bars on the chart.&amp;nbsp; In this 
case, a sell Alert will be generated instead.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Slippage, when activated, can cause a limit order to fail, even if the 
  price reaches the &lt;b&gt;limitPrice&lt;/b&gt;.&lt;/li&gt;
  &lt;li&gt;If the market opens above the &lt;b&gt;limitPrice&lt;/b&gt;, the position will be sold 
  at the market open of the &lt;b&gt;bar&lt;/b&gt;.&lt;/li&gt;
  &lt;li&gt;The optional &lt;b&gt;signalName&lt;/b&gt; parameter will appear in the Strategy 
  window trade list report. &lt;/li&gt;
  &lt;li&gt;To sell all active long Positions, specify &lt;b&gt;Position.AllPositions&lt;/b&gt; in the
  &lt;b&gt;pos&lt;/b&gt; parameter. &lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet07'&gt;high&lt;/span&gt; = &lt;span class='wlnet03'&gt;Highest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet04'&gt;10&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;ema1&lt;/span&gt; = &lt;span class='wlnet03'&gt;EMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;2&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Indicators&lt;/span&gt;.&lt;span class='wlnet03'&gt;EMACalculation&lt;/span&gt;.&lt;span class='wlnet03'&gt;Modern&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;ema2&lt;/span&gt; = &lt;span class='wlnet03'&gt;EMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;10&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Indicators&lt;/span&gt;.&lt;span class='wlnet03'&gt;EMACalculation&lt;/span&gt;.&lt;span class='wlnet03'&gt;Modern&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;ema1&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;LightBlue&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;2&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;ema2&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;ForestGreen&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;2&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;30&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet01'&gt;// Try to get out at a recent high + some percent&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;SellAtLimit&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet07'&gt;high&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]*&lt;span class='wlnet04'&gt;1.02&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Limit Sell&amp;quot;&lt;/span&gt; ) )
                &lt;span class='wlnet06'&gt;PrintDebug&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;Sold&amp;quot;&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet01'&gt;// &amp;quot;Anti-Trend EMA&amp;quot; entry&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;CrossUnder&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;ema1&lt;/span&gt;, &lt;span class='wlnet03'&gt;ema2&lt;/span&gt; ) )
                &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>SellAtMarket</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;SellAtMarket&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000FF"&gt;bool SellAtMarket(int bar, Position pos, string signalName);&lt;br&gt;
bool SellAtMarket(int bar, Position pos);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Sells the Position specified in the &lt;b&gt;pos&lt;/b&gt; parameter at the specified &lt;b&gt;
bar&lt;/b&gt;, using the open price of the bar as the exit price.&amp;nbsp; SellAtMarket 
will return false if the &lt;b&gt;bar&lt;/b&gt; specified is greater than the number of bars 
on the chart.&amp;nbsp; In this case, a sell Alert will be generated instead.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Slippage, when activated, can affect the trade's execution price.&lt;/li&gt;
  &lt;li&gt;The optional &lt;b&gt;signalName&lt;/b&gt; parameter will appear in the Strategy 
  window 
  trade list report.&lt;/li&gt;
  &lt;li&gt;To sell all active long Positions, specify &lt;b&gt;Position.AllPositions&lt;/b&gt; in the
  &lt;b&gt;pos&lt;/b&gt; parameter.&lt;/li&gt;
&lt;/ul&gt;
&lt;/body&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;shift&lt;/span&gt; = &lt;span class='wlnet04'&gt;4&lt;/span&gt;;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;dma1&lt;/span&gt; = &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;7&lt;/span&gt; ) &amp;gt;&amp;gt; &lt;span class='wlnet03'&gt;shift&lt;/span&gt;;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;dma2&lt;/span&gt; = &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;25&lt;/span&gt; ) &amp;gt;&amp;gt; &lt;span class='wlnet03'&gt;shift&lt;/span&gt;;
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;dma1&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Green&lt;/span&gt;, &lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt;);
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet07'&gt;PricePane&lt;/span&gt;, &lt;span class='wlnet03'&gt;dma2&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Blue&lt;/span&gt;, &lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt;);
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;30&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet01'&gt;// Displaced Moving Average (DMA) strategy exit&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;CrossUnder&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;dma1&lt;/span&gt;, &lt;span class='wlnet03'&gt;dma2&lt;/span&gt; ) )
                &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;DMA CrossUnder&amp;quot;&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet01'&gt;// Displaced Moving Average (DMA) strategy entry&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet06'&gt;CrossOver&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet03'&gt;dma1&lt;/span&gt;, &lt;span class='wlnet03'&gt;dma2&lt;/span&gt; ) )
                &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;DMA CrossOver&amp;quot;&lt;/span&gt; );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>SellAtStop</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;SellAtStop&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000ff"&gt;bool SellAtStop(int bar, Position pos, double stopPrice, 
string signalName);&lt;br&gt;
bool SellAtStop(int bar, Position pos, double stopPrice);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Sells the Position specified in the &lt;b&gt;pos&lt;/b&gt; parameter at the specified &lt;b&gt;
bar&lt;/b&gt;, using a stop order at the specified &lt;b&gt;stopPrice&lt;/b&gt;.&amp;nbsp; SellAtStop 
returns a bool value indicating whether the price hit the &lt;b&gt;stopPrice&lt;/b&gt; or 
below, and the Position was sold.&amp;nbsp; SellAtStop will also return false if the &lt;b&gt;
bar&lt;/b&gt; specified is greater than the number of bars on the chart.&amp;nbsp; In this 
case, a sell Alert will be generated instead.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Slippage, when activated, can affect a trade's execution price.&lt;/li&gt;
  &lt;li&gt;If the market open below the &lt;b&gt;stopPrice&lt;/b&gt;, the position will be sold 
  at the market open price of the &lt;b&gt;bar&lt;/b&gt;.&lt;/li&gt;
  &lt;li&gt;The optional &lt;b&gt;signalName&lt;/b&gt; parameter will appear in the Strategy 
  window trade list report. &lt;/li&gt;
  &lt;li&gt;To sell all active long Positions, specify &lt;b&gt;Position.AllPositions&lt;/b&gt; in the
  &lt;b&gt;pos&lt;/b&gt; parameter. &lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; = &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;;    
            &lt;span class='wlnet01'&gt;// Cover the long position if prices move against us by 7%&lt;/span&gt;
            &lt;span class='wlnet06'&gt;SellAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryPrice&lt;/span&gt; * &lt;span class='wlnet04'&gt;0.93&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;7% Stop&amp;quot;&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet01'&gt;//code your entry rules here&lt;/span&gt;
            &lt;span class='wlnet06'&gt;BuyAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>SellAtTrailingStop</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;SellAtTrailingStop&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000ff"&gt;bool SellAtTrailingStop(int bar, Position pos, double 
stopPrice, string signalName);&lt;br&gt;
bool SellAtTrailingStop(int bar, Position pos, double stopPrice);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Sells the Position specified in the &lt;b&gt;pos&lt;/b&gt; parameter at the specified &lt;b&gt;
bar&lt;/b&gt;, using a trailing stop order.&amp;nbsp; The trailing stop price is maintained 
with the Position, and it is modified only when the specified &lt;b&gt;stopPrice&lt;/b&gt; 
is above the current trailing stop price.&amp;nbsp; &lt;b&gt;SellAtTrailingStop&lt;/b&gt; 
returns a bool value indicating whether the price hit the current trailing stop 
level or below, and the Position was sold.&amp;nbsp; &lt;b&gt;SellAtTrailingStop&lt;/b&gt; will also 
return false if the &lt;b&gt;bar&lt;/b&gt; specified is greater than the number of bars on 
the chart.&amp;nbsp; In this case, a sell Alert will be generated instead.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Slippage, when activated, can affect a trade's execution price. &lt;/li&gt;
  &lt;li&gt;If the market open below the current trailing stop price, the position 
  will be sold at the market open price of the &lt;b&gt;bar&lt;/b&gt;. &lt;/li&gt;
  &lt;li&gt;The optional &lt;b&gt;signalName&lt;/b&gt; parameter will appear in the Strategy 
  window trade list report.&lt;/li&gt;
  &lt;li&gt;To sell all active long Positions, specify &lt;b&gt;Position.AllPositions&lt;/b&gt; in 
  the &lt;b&gt;pos&lt;/b&gt; parameter.&lt;/li&gt;
  &lt;li&gt;The current trailing stop price level is available by accessing the &lt;b&gt;
  TrailingStop&lt;/b&gt; Position property.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet06'&gt;PlotStops&lt;/span&gt;();
    &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;period&lt;/span&gt; = &lt;span class='wlnet04'&gt;20&lt;/span&gt;;
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;atr&lt;/span&gt; = &lt;span class='wlnet03'&gt;ATR&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet03'&gt;period&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet03'&gt;period&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; = &lt;span class='wlnet07'&gt;LastActivePosition&lt;/span&gt;;
            &lt;span class='wlnet06'&gt;SellAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryPrice&lt;/span&gt; * &lt;span class='wlnet04'&gt;0.95&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;5% Stop Loss&amp;quot;&lt;/span&gt; );
            &lt;span class='wlnet01'&gt;// Trailing Chandelier exit (Chuck LeBeau) at 40-bar highest high minus 3 ATR units&lt;/span&gt;
            &lt;span class='wlnet06'&gt;SellAtTrailingStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;, &lt;span class='wlnet03'&gt;Highest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet03'&gt;period&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]-&lt;span class='wlnet04'&gt;3&lt;/span&gt;*&lt;span class='wlnet03'&gt;atr&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;], &lt;span class='wlnet10'&gt;&amp;quot;Trailing Stop&amp;quot;&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet01'&gt;// sample entry rule&lt;/span&gt;
            &lt;span class='wlnet06'&gt;BuyAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;Highest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet03'&gt;period&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>SetShareSize</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;   
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;SetShareSize&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000ff"&gt;double SetShareSize( double shares )&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Use &lt;b&gt;SetShareSize&lt;/b&gt; to assign a fixed number of Shares (or contracts) per Position in your Strategy. Subsequent trades will use the number of Shares or contracts that you specified.
&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;In Raw Profit modes, SetShareSize does not have effect. It applies to Portfolio Simulation mode only.&lt;/li&gt;
  &lt;li&gt;When using &lt;b&gt;SetShareSize&lt;/b&gt;, you must choose the radio button for &lt;b&gt;WealthScript Override (SetShareSize)&lt;/b&gt; in the Position Sizing control to enable &lt;b&gt;SetShareSize&lt;/b&gt; to influence position sizing.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
&lt;span class='wlnet03'&gt;SMA&lt;/span&gt; &lt;span class='wlnet03'&gt;sma&lt;/span&gt; = &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;50&lt;/span&gt; );
            
            &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet03'&gt;sma&lt;/span&gt;.&lt;span class='wlnet03'&gt;FirstValidValue&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
            {
                &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
                {
                    &lt;span class='wlnet01'&gt;/* Exit after N days */
                    &lt;/span&gt;
                    &lt;span class='wlnet03'&gt;Position&lt;/span&gt; &lt;span class='wlnet03'&gt;p&lt;/span&gt; = &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;;
                    &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; - &lt;span class='wlnet03'&gt;p&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryBar&lt;/span&gt; &amp;gt;= &lt;span class='wlnet04'&gt;3&lt;/span&gt; )
                        &lt;span class='wlnet06'&gt;SellAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;p&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Timed&amp;quot;&lt;/span&gt; ); 
                }
                &lt;span class='wlnet05'&gt;else&lt;/span&gt;
                {
                    &lt;span class='wlnet01'&gt;/* When the Close is below the SMA,&lt;/span&gt;
                    &lt;span class='wlnet03'&gt;size&lt;/span&gt; &lt;span class='wlnet03'&gt;the&lt;/span&gt; &lt;span class='wlnet05'&gt;new&lt;/span&gt; &lt;span class='wlnet03'&gt;position&lt;/span&gt; &lt;span class='wlnet03'&gt;twice&lt;/span&gt; &lt;span class='wlnet03'&gt;the&lt;/span&gt; &lt;span class='wlnet03'&gt;normal&lt;/span&gt; *&lt;span class='wlnet01'&gt;/&lt;/span&gt;
                    
                    &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;gt; &lt;span class='wlnet03'&gt;sma&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] )
                        &lt;span class='wlnet06'&gt;SetShareSize&lt;/span&gt;( &lt;span class='wlnet04'&gt;1000&lt;/span&gt; );
                    &lt;span class='wlnet05'&gt;else&lt;/span&gt;
                        &lt;span class='wlnet06'&gt;SetShareSize&lt;/span&gt;( &lt;span class='wlnet04'&gt;2000&lt;/span&gt; );
                    
                    &lt;span class='wlnet06'&gt;BuyAtLimit&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;]*&lt;span class='wlnet04'&gt;0.93&lt;/span&gt; );
                }
            }
        }
    }
}&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>ShortAtClose</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;   
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;ShortAtClose&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000ff"&gt;Position ShortAtClose(int bar, string signalName);&lt;br&gt;
Position ShortAtClose(int bar);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Enters a new short position at the specified &lt;b&gt;bar&lt;/b&gt;, using the closing 
price of the bar as the entry price.&amp;nbsp; The position size will be calculated based 
on the closing price of the previous bar.&amp;nbsp; Returns a new &lt;b&gt;Position&lt;/b&gt; object 
that represents the newly established short position.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Slippage, when activated, can affect the trade's execution price. &lt;/li&gt;
  &lt;li&gt;The optional &lt;b&gt;signalName&lt;/b&gt; parameter will appear in the Strategy 
  window trade list report.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>&lt;pre class='wlnetcode'&gt;&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Collections&lt;/span&gt;.&lt;span class='wlnet03'&gt;Generic&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Text&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;System&lt;/span&gt;.&lt;span class='wlnet03'&gt;Drawing&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;;
&lt;span class='wlnet05'&gt;using&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Indicators&lt;/span&gt;;

&lt;span class='wlnet05'&gt;namespace&lt;/span&gt; &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;Strategies&lt;/span&gt;
{
    &lt;span class='wlnet05'&gt;public&lt;/span&gt; &lt;span class='wlnet05'&gt;class&lt;/span&gt; &lt;span class='wlnet03'&gt;ShortAtCloseDemo&lt;/span&gt; : &lt;span class='wlnet03'&gt;WealthScript&lt;/span&gt;
    {
        &lt;span class='wlnet01'&gt;//Lowest Low parameter&lt;/span&gt;
        &lt;span class='wlnet05'&gt;private&lt;/span&gt; &lt;span class='wlnet03'&gt;StrategyParameter&lt;/span&gt; &lt;span class='wlnet03'&gt;per&lt;/span&gt;;

        &lt;span class='wlnet05'&gt;public&lt;/span&gt; &lt;span class='wlnet03'&gt;ShortAtCloseDemo&lt;/span&gt;()
        {
            &lt;span class='wlnet03'&gt;per&lt;/span&gt; = &lt;span class='wlnet03'&gt;CreateParameter&lt;/span&gt;(&lt;span class='wlnet10'&gt;&amp;quot;CumUp period, days&amp;quot;&lt;/span&gt;, &lt;span class='wlnet04'&gt;10&lt;/span&gt;, &lt;span class='wlnet04'&gt;10&lt;/span&gt;, &lt;span class='wlnet04'&gt;30&lt;/span&gt;, &lt;span class='wlnet04'&gt;5&lt;/span&gt;);
        }

        &lt;span class='wlnet05'&gt;protected&lt;/span&gt; &lt;span class='wlnet05'&gt;override&lt;/span&gt; &lt;span class='wlnet05'&gt;void&lt;/span&gt; &lt;span class='wlnet03'&gt;Execute&lt;/span&gt;()
        {
            &lt;span class='wlnet01'&gt;//Obtain period from parameter&lt;/span&gt;
            &lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;period&lt;/span&gt; = &lt;span class='wlnet03'&gt;per&lt;/span&gt;.&lt;span class='wlnet03'&gt;ValueInt&lt;/span&gt;;
            
            &lt;span class='wlnet03'&gt;CumUp&lt;/span&gt; &lt;span class='wlnet03'&gt;cumUp&lt;/span&gt; = &lt;span class='wlnet03'&gt;CumUp&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet03'&gt;period&lt;/span&gt; );
            &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;cu&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;50&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;false&lt;/span&gt; );
            &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;cu&lt;/span&gt;, &lt;span class='wlnet03'&gt;cumUp&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Dotted&lt;/span&gt;, &lt;span class='wlnet04'&gt;2&lt;/span&gt; );
            
            &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet03'&gt;period&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
            {
                &lt;span class='wlnet05'&gt;if&lt;/span&gt; (!&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
                {
                    &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;gt; &lt;span class='wlnet03'&gt;SMA&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;,&lt;span class='wlnet04'&gt;2&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] )
                        &lt;span class='wlnet01'&gt;// Short at Close on CumUp &amp;gt;= 5 in 10 bars&lt;/span&gt;
                        &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet03'&gt;cumUp&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;gt;= &lt;span class='wlnet04'&gt;5&lt;/span&gt; )
                            &lt;span class='wlnet06'&gt;ShortAtClose&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt; );
                }
                &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
                {
                    &lt;span class='wlnet01'&gt;// .. Exit Rules ...&lt;/span&gt;
                    &lt;span class='wlnet06'&gt;CoverAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt; );
                }
            }
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>ShortAtLimit</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;   
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;ShortAtLimit&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000ff"&gt;Position ShortAtLimit(int bar, double limitPrice, 
string signalName);&lt;br&gt;
Position ShortAtLimit(int bar, double limitPrice);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Enters a new short position at the specified &lt;b&gt;bar&lt;/b&gt;, using a limit order 
at the specified &lt;b&gt;limitPrice&lt;/b&gt;.&amp;nbsp; The position size will be calculated based 
on the &lt;b&gt;limitPrice&lt;/b&gt;.&amp;nbsp; If the price of the bar reaches the &lt;b&gt;limitPrice&lt;/b&gt; 
or higher, ShortAtLimit returns a new &lt;b&gt;Position&lt;/b&gt; object that represents the 
newly established short position.&amp;nbsp; If the &lt;b&gt;limitPrice&lt;/b&gt; was not reached, 
ShortAtLimit returns &lt;b&gt;null&lt;/b&gt;.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Slippage, when activated, can cause limit orders to fail, even if the 
  price of the bar reaches the &lt;b&gt;limitPrice&lt;/b&gt;. &lt;/li&gt;
  &lt;li&gt;If the market open above the &lt;b&gt;limitPrice&lt;/b&gt;, the entry price of the 
  position will be set to the market open price of the &lt;b&gt;bar&lt;/b&gt;. &lt;/li&gt;
  &lt;li&gt;The optional &lt;b&gt;signalName&lt;/b&gt; parameter will appear in the Strategy 
  window trade list report. &lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet07'&gt;Bars&lt;/span&gt; &lt;span class='wlnet03'&gt;benchmark&lt;/span&gt; = &lt;span class='wlnet06'&gt;GetExternalSymbol&lt;/span&gt;( &lt;span class='wlnet10'&gt;&amp;quot;QQQQ&amp;quot;&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;mkt&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;35&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;false&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;adx&lt;/span&gt; = &lt;span class='wlnet03'&gt;ADX&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet04'&gt;14&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;adx_market&lt;/span&gt; = &lt;span class='wlnet03'&gt;ADX&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet03'&gt;benchmark&lt;/span&gt;, &lt;span class='wlnet04'&gt;14&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;diP&lt;/span&gt; = &lt;span class='wlnet03'&gt;DIPlus&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet04'&gt;14&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;diM&lt;/span&gt; = &lt;span class='wlnet03'&gt;DIMinus&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;, &lt;span class='wlnet04'&gt;14&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;mkt&lt;/span&gt;, &lt;span class='wlnet03'&gt;adx&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;mkt&lt;/span&gt;, &lt;span class='wlnet03'&gt;adx_market&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;DarkRed&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Solid&lt;/span&gt;, &lt;span class='wlnet04'&gt;2&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;30&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (!&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet01'&gt;// Short symbol when it lags some general market benchmark&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet03'&gt;adx&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;lt; &lt;span class='wlnet03'&gt;adx_market&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] )
                &lt;span class='wlnet05'&gt;if&lt;/span&gt;( &lt;span class='wlnet03'&gt;diP&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;lt; &lt;span class='wlnet03'&gt;diM&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] )
                    &lt;span class='wlnet01'&gt;// Short next bar at the limit of 20-period high&lt;/span&gt;
                    &lt;span class='wlnet06'&gt;ShortAtLimit&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet03'&gt;Lowest&lt;/span&gt;.&lt;span class='wlnet03'&gt;Value&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;High&lt;/span&gt;, &lt;span class='wlnet04'&gt;20&lt;/span&gt; ), &lt;span class='wlnet10'&gt;&amp;quot;Short @ Limit&amp;quot;&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet01'&gt;//code your exit rules here&lt;/span&gt;
            &lt;span class='wlnet01'&gt;//...&lt;/span&gt;
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>ShortAtMarket</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;   
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;ShortAtMarket&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000ff"&gt;Position ShortAtMarket(int bar, string signalName);&lt;br&gt;
Position ShortAtMarket(int bar);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Enters a new short position at the specified &lt;b&gt;bar&lt;/b&gt;, using the open price 
of the bar as the entry price.&amp;nbsp; The position size will be calculated based on 
the closing price of the previous bar.&amp;nbsp; Returns a new &lt;b&gt;Position&lt;/b&gt; object 
that represents the newly established short position.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Slippage, when activated, can affect the trade's execution price. &lt;/li&gt;
  &lt;li&gt;The optional &lt;b&gt;signalName&lt;/b&gt; parameter will appear in the Strategy 
  window trade list report.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet03'&gt;DataSeries&lt;/span&gt; &lt;span class='wlnet03'&gt;rsi&lt;/span&gt; = &lt;span class='wlnet03'&gt;RSI&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;14&lt;/span&gt; );
    &lt;span class='wlnet03'&gt;ChartPane&lt;/span&gt; &lt;span class='wlnet03'&gt;rsiPane&lt;/span&gt; = &lt;span class='wlnet06'&gt;CreatePane&lt;/span&gt;( &lt;span class='wlnet04'&gt;40&lt;/span&gt;, &lt;span class='wlnet05'&gt;true&lt;/span&gt;, &lt;span class='wlnet05'&gt;false&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;PlotSeries&lt;/span&gt;( &lt;span class='wlnet03'&gt;rsiPane&lt;/span&gt;, &lt;span class='wlnet03'&gt;rsi&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Chartreuse&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Dotted&lt;/span&gt;, &lt;span class='wlnet04'&gt;2&lt;/span&gt; );
    &lt;span class='wlnet06'&gt;DrawHorzLine&lt;/span&gt;( &lt;span class='wlnet03'&gt;rsiPane&lt;/span&gt;, &lt;span class='wlnet04'&gt;70&lt;/span&gt;, &lt;span class='wlnet03'&gt;Color&lt;/span&gt;.&lt;span class='wlnet03'&gt;Red&lt;/span&gt;, &lt;span class='wlnet03'&gt;WealthLab&lt;/span&gt;.&lt;span class='wlnet03'&gt;LineStyle&lt;/span&gt;.&lt;span class='wlnet03'&gt;Dashed&lt;/span&gt;, &lt;span class='wlnet04'&gt;1&lt;/span&gt; );
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;30&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet01'&gt;// Exit after 10 days&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt; - &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;.&lt;span class='wlnet03'&gt;EntryBar&lt;/span&gt; == &lt;span class='wlnet04'&gt;10&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;CoverAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;Time-Based&amp;quot;&lt;/span&gt; );
        }
        &lt;span class='wlnet05'&gt;else&lt;/span&gt;
        {
            &lt;span class='wlnet01'&gt;// Establish a short position if RSI gets overbought&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet03'&gt;RSI&lt;/span&gt;.&lt;span class='wlnet03'&gt;Series&lt;/span&gt;( &lt;span class='wlnet07'&gt;Close&lt;/span&gt;, &lt;span class='wlnet04'&gt;14&lt;/span&gt; )[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;gt; &lt;span class='wlnet04'&gt;70&lt;/span&gt; )
                &lt;span class='wlnet06'&gt;ShortAtMarket&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;+&lt;span class='wlnet04'&gt;1&lt;/span&gt;, &lt;span class='wlnet10'&gt;&amp;quot;RSI Short Signal&amp;quot;&lt;/span&gt; );
        }
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
      <QuickRefEntry>
        <Name>ShortAtStop</Name>
        <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;   
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;ShortAtStop&lt;/h1&gt;
&lt;p&gt;&lt;font color="#0000ff"&gt;Position ShortAtStop(int bar, double stopPrice, string 
signalName);&lt;br&gt;
Position ShortAtStop(int bar, double stopPrice);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Enters a new short position at the specified &lt;b&gt;bar&lt;/b&gt;, using a stop order 
at the specified &lt;b&gt;stopPrice&lt;/b&gt;.&amp;nbsp; The position size will be calculated based 
on the &lt;b&gt;stopPrice&lt;/b&gt;.&amp;nbsp; If the price of the bar reaches the &lt;b&gt;stopPrice&lt;/b&gt; 
or lower, ShortAtStop returns a new &lt;b&gt;Position&lt;/b&gt; object that represents the 
newly established short position.&amp;nbsp; If the &lt;b&gt;stopPrice&lt;/b&gt; was not reached, 
ShortAtStop returns &lt;b&gt;null&lt;/b&gt;.&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Slippage, when activated, can affect the trade's execution price. &lt;/li&gt;
  &lt;li&gt;If the market open below the &lt;b&gt;stopPrice&lt;/b&gt;, the entry price of the 
  position will be set to the market open price of the &lt;b&gt;bar&lt;/b&gt;. &lt;/li&gt;
  &lt;li&gt;The optional &lt;b&gt;signalName&lt;/b&gt; parameter will appear in the Strategy 
  window trade list report.&lt;/li&gt;
&lt;/ul&gt;
&lt;/html&gt;
</Description>
        <Example>
    &lt;span class='wlnet05'&gt;for&lt;/span&gt;(&lt;span class='wlnet05'&gt;int&lt;/span&gt; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; = &lt;span class='wlnet04'&gt;5&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt; &amp;lt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet03'&gt;Count&lt;/span&gt;; &lt;span class='wlnet03'&gt;bar&lt;/span&gt;++)
    {
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (!&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
        {
            &lt;span class='wlnet01'&gt;// &amp;quot;Oops&amp;quot; ( Larry Williams )&lt;/span&gt;
            &lt;span class='wlnet05'&gt;if&lt;/span&gt; ( &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Open&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;] &amp;gt; &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;High&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;] )
                &lt;span class='wlnet06'&gt;ShortAtStop&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;Bars&lt;/span&gt;.&lt;span class='wlnet07'&gt;Low&lt;/span&gt;[&lt;span class='wlnet03'&gt;bar&lt;/span&gt;-&lt;span class='wlnet04'&gt;1&lt;/span&gt;], &lt;span class='wlnet10'&gt;&amp;quot;Oops&amp;quot;&lt;/span&gt; );                    
        }
        &lt;span class='wlnet05'&gt;if&lt;/span&gt; (&lt;span class='wlnet07'&gt;IsLastPositionActive&lt;/span&gt;)
            &lt;span class='wlnet06'&gt;ExitAtClose&lt;/span&gt;( &lt;span class='wlnet03'&gt;bar&lt;/span&gt;, &lt;span class='wlnet07'&gt;LastPosition&lt;/span&gt; );
    }
}
&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</Example>
        <EntryType>Method</EntryType>
      </QuickRefEntry>
    </Entries>
    <Description>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Language" content="en-us"&gt;
&lt;meta name="GENERATOR" content="Microsoft FrontPage 5.0"&gt;
&lt;meta name="ProgId" content="FrontPage.Editor.Document"&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=windows-1252"&gt;
&lt;title&gt;BuyAtMarket&lt;/title&gt;
&lt;style&gt;
&lt;!--
body         { font-family: Tahoma; font-size: 8pt }
h1           { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           { font-family: Tahoma; font-size: 10pt; font-weight: bold }
--&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;h1&gt;Trading&lt;/h1&gt;
&lt;p&gt;The Trading category contains methods used to enter and exit long and short 
Positions.&lt;/p&gt;



&lt;/html&gt;</Description>
  </QuickRefCategory>
</ArrayOfQuickRefCategory>